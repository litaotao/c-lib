<!DOCTYPE html>
<!-- saved from url=(0071)http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">



<title>用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头</title>

<meta name="author" content="D.H.Q">
<meta name="generator" content="zotonic 0.10-dev">
<meta name="google-site-verification" content="5z5kozqxLp1xEWOAcS--mBbOw8AmVHvHcQ_gWGRFgrM">


<link rel="alternate" type="application/atom+xml" href="http://dhq.me/feed/article">

	<link rel="shorturl" href="http://dhq.me/id/368">
	<link rel="canonical" href="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头.htm">



	
	
		
			
				
					
						<meta name="keywords" content="erlang, rebar, ">
					
					<meta name="description" content="">
				
			
		
	
	




	



<link href="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/bootstrap.min~63578349552.css" type="text/css" media="all" rel="stylesheet">
<link href="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/bootstrap-responsive.min~63578349552.css" type="text/css" media="all" rel="stylesheet">
<link href="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/zp-project~zp-menu~63578349553.css" type="text/css" media="all" rel="stylesheet">



<style type="text/css">

</style>
<style type="text/css"></style><script type="text/javascript" async="" src="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/embed.js"></script><script src="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/alfie.f51946af45e0b561c60f768335c9eb79.js" async="" charset="UTF-8"></script></head>
<body class="page">
	<section class="zp-wrapper">

        <header class="clearfix">
		<h1>
			<a href="http://dhq.me/">
				D.H.Q的烂笔头
			</a>
		</h1>
		<h2>Just code for fun~</h2>
        </header>
        <nav class="clearfix">
            

    <ul id="navigation" class="nav">
    
        
            
                <li class="">
                    <a href="http://dhq.me/" class="page_home" data-target="#">
                        Home
                    </a>
                </li>
            
        
    
    
        
            
                <li class="">
                    <a href="http://dhq.me/about" class="page_about" data-target="#">
                        About
                    </a>
                </li>
            
        
    
    
        
            
                <li class="">
                    <a href="http://dhq.me/erlshell" class="page_erlshell" data-target="#">
                        ErlShell
                    </a>
                </li>
            
        
    
    
        
            
                <li class="">
                    <a href="http://dhq.me/luashell" class="page_luashell" data-target="#">
                        LuaShell
                    </a>
                </li>
            
        
    
    
        
            
                <li class="">
                    <a href="http://dhq.me/erlample" class="erlample" data-target="#">
                        Erlample
                    </a>
                </li>
            
        
    
    
        
            
                <li class="">
                    <a href="http://dhq.me/status" class="page_status" data-target="#">
                        Status
                    </a>
                </li>
            
        
    
    
    </ul>



        </nav>

        <section class="clearfix">

			
			

	






            <div id="content" class="zp-70">
                <div class="padding">
                    

    <h1 class="ht">用 rebar 来构建、编译、测试、发布 Erlang 应用程序</h1>

    <p><a title="rebar" href="https://github.com/rebar/rebar" target="_blank">rebar</a> 是一个遵循 Erlang/OTP 原则的 Erlang 项目构建工具，使用它可以减少构建标准 Erlang/OTP 项目架构配置的工作量，并且可以很容易的编译、测试、发布 Erlang 应用程序。更强大的是，rebar 提供一种依赖管理机制，它可以使开发者很方便地通过 <a title="Git -- distributed-is-the-new-centralized" href="http://git-scm.com/" target="_blank">Git</a>、<a title="Mercurial SCM" href="http://mercurial.selenic.com/" target="_blank">Hg</a> 等方式重用常见的第三方 Erlang 模块或库。</p><p><strong>安装 rebar</strong></p><p>你可以从 <a title="pre-build rebar" href="https://github.com/rebar/rebar/wiki/rebar">https://github.com/rebar/rebar/wiki/rebar</a>&nbsp;下载编译好的版本，也可以自己下载 rebar 的源代码，自己编译一个：</p><div><div id="highlighter_314863" class="syntaxhighlighter  shell  "><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">git clone git:</code><code class="shell plain">//github</code><code class="shell plain">.com</code><code class="shell plain">/rebar/rebar</code><code class="shell plain">.git</code></div><div class="line number2 index1 alt1"><code class="shell functions">cd</code> <code class="shell plain">rebar</code></div><div class="line number3 index2 alt2"><code class="shell plain">.</code><code class="shell plain">/bootstrap</code></div></div></td></tr></tbody></table></div></div><!--more--><p>上面编译好之后，在当前目录下就会生成一个名为 "rebar" 独立的 erlang 脚本(escript)，把它放在你想创建标准 Erlang/OTP 项目的目录路径下即可使用，或者把 rebar 放在系统目录的 Path 下，方便在终端使用：</p><div><div id="highlighter_293464" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell functions">sudo</code> <code class="shell functions">mv</code> <code class="shell plain">rebar </code><code class="shell plain">/usr/local/bin</code></div></div></td></tr></tbody></table></div></div><p>在终端输入 "rebar -c" 将列出所有可执行的 rebar 命令。或者输入 "rebar -h" 查看更多的 rebar 参数信息。</p><p><strong>用 rebar 构建项目</strong></p><p>创建一个名为 rebarapp 的文件夹</p><div><div id="highlighter_428126" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell functions">mkdir</code> <code class="shell plain">rebarapp</code></div><div class="line number2 index1 alt1"><code class="shell functions">cd</code> <code class="shell plain">rebarapp</code></div></div></td></tr></tbody></table></div></div><p>创建名为 rebarapp 项目：</p><div><div id="highlighter_42660" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rebar create-app appid=rebarapp</code></div></div></td></tr></tbody></table></div></div><p>rebar 会根据默认模板（template）在当前目录下生成一个 src 文件夹，里面包含下面3个文件：</p><ul><li>rebarapp.app.src 应用的资源描述文件，影响后面编译生成的 rebarapp.app 里的内容</li><li>rebarapp_app.erl 应用的 Application Behaviour 代码文件</li><li>rebarapp_sup.erl 应用的 Supervisor Behaviour 代码文件</li></ul><p>rebar 还内置了 <a title="erlang gen_server" href="http://www.erlang.org/doc/design_principles/gen_server_concepts.html" target="_blank">gen_server</a>、<a title="erlang gen_fsm" href="http://www.erlang.org/doc/design_principles/fsm.html" target="_blank">gen_fsm</a>、<a title="erlang application" href="http://www.erlang.org/doc/design_principles/applications.html" target="_blank">application</a> 等 Erlang/OTP 行为模式的模板，可以自动生成这些行为模式的框架代码。这里以 gen_server 为例，给应用添加一个名为 rebarapp_server 的 gen_server 行为模式。在应用根目录执行以下命令：</p><div><div id="highlighter_432038" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rebar create template=simplesrv srvid=rebarapp_server</code></div></div></td></tr></tbody></table></div></div><p>执行完后自动会在 src 文件夹里生成一个 rebarapp_server.erl 的 gen_server 框架格式的文件，simplesrv 是 gen_server 模板的名称(gen_fsm、application对应的是simplefsm、simpleapp)，srvid 则是该 gen_server 模板的ID（gen_fsm、application对应的是fsmid、appid）。</p><p>为了测试，这里对 rebarapp_server.erl 进行修改，export 一个 hello 方法，并添加一个 cast 的消息输出，修改后的 rebarapp_server.erl 文件内容如下：</p><div><div id="highlighter_630448" class="syntaxhighlighter  erl"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="erl plain">-</code><code class="erl keyword">module</code><code class="erl plain">(rebarapp_server).</code></div><div class="line number2 index1 alt1"><code class="erl plain">-behaviour(gen_server).</code></div><div class="line number3 index2 alt2"><code class="erl plain">-</code><code class="erl keyword">define</code><code class="erl plain">(</code><code class="erl constants">SERVER</code><code class="erl plain">, </code><code class="erl preprocessor">?MODULE</code><code class="erl plain">).</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="erl comments">%% ------------------------------------------------------------------</code></div><div class="line number6 index5 alt1"><code class="erl comments">%% API Function Exports</code></div><div class="line number7 index6 alt2"><code class="erl comments">%% ------------------------------------------------------------------</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="erl plain">-</code><code class="erl keyword">export</code><code class="erl plain">([start_link/0, hello/0]).</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="erl comments">%% ------------------------------------------------------------------</code></div><div class="line number12 index11 alt1"><code class="erl comments">%% gen_server Function Exports</code></div><div class="line number13 index12 alt2"><code class="erl comments">%% ------------------------------------------------------------------</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="erl plain">-</code><code class="erl keyword">export</code><code class="erl plain">([init/1, handle_call/3, handle_cast/2, handle_info/2,</code></div><div class="line number16 index15 alt1"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl plain">terminate/2, code_change/3]).</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="erl comments">%% ------------------------------------------------------------------</code></div><div class="line number19 index18 alt2"><code class="erl comments">%% API Function Definitions</code></div><div class="line number20 index19 alt1"><code class="erl comments">%% ------------------------------------------------------------------</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="erl plain">start_link() -&gt;</code></div><div class="line number23 index22 alt2"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl functions">gen_server:start_link</code><code class="erl plain">({local, </code><code class="erl preprocessor">?SERVER</code><code class="erl plain">}, </code><code class="erl preprocessor">?MODULE</code><code class="erl plain">, [], []).</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="erl comments">%% @doc just a test</code></div><div class="line number26 index25 alt1"><code class="erl plain">hello() -&gt;</code></div><div class="line number27 index26 alt2"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl functions">gen_server:cast</code><code class="erl plain">(</code><code class="erl preprocessor">?SERVER</code><code class="erl plain">, </code><code class="erl string">'HELLO'</code><code class="erl plain">).</code></div><div class="line number28 index27 alt1">&nbsp;</div><div class="line number29 index28 alt2"><code class="erl comments">%% ------------------------------------------------------------------</code></div><div class="line number30 index29 alt1"><code class="erl comments">%% gen_server Function Definitions</code></div><div class="line number31 index30 alt2"><code class="erl comments">%% ------------------------------------------------------------------</code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="erl plain">init(</code><code class="erl constants">Args</code><code class="erl plain">) -&gt;</code></div><div class="line number34 index33 alt1"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl plain">{ok, </code><code class="erl constants">Args</code><code class="erl plain">}.</code></div><div class="line number35 index34 alt2">&nbsp;</div><div class="line number36 index35 alt1"><code class="erl plain">handle_call(_</code><code class="erl constants">Request</code><code class="erl plain">, _</code><code class="erl constants">From</code><code class="erl plain">, </code><code class="erl constants">State</code><code class="erl plain">) -&gt;</code></div><div class="line number37 index36 alt2"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl plain">{reply, ok, </code><code class="erl constants">State</code><code class="erl plain">}.</code></div><div class="line number38 index37 alt1">&nbsp;</div><div class="line number39 index38 alt2"><code class="erl plain">handle_cast(</code><code class="erl string">'HELLO'</code><code class="erl plain">, </code><code class="erl constants">State</code><code class="erl plain">) -&gt;</code></div><div class="line number40 index39 alt1"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl functions">io:format</code><code class="erl plain">(</code><code class="erl string">"Hello World!~n"</code><code class="erl plain">),</code></div><div class="line number41 index40 alt2"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl plain">{noreply, </code><code class="erl constants">State</code><code class="erl plain">};</code></div><div class="line number42 index41 alt1">&nbsp;</div><div class="line number43 index42 alt2"><code class="erl plain">handle_cast(_</code><code class="erl constants">Msg</code><code class="erl plain">, </code><code class="erl constants">State</code><code class="erl plain">) -&gt;</code></div><div class="line number44 index43 alt1"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl plain">{noreply, </code><code class="erl constants">State</code><code class="erl plain">}.</code></div><div class="line number45 index44 alt2">&nbsp;</div><div class="line number46 index45 alt1"><code class="erl plain">handle_info(_</code><code class="erl constants">Info</code><code class="erl plain">, </code><code class="erl constants">State</code><code class="erl plain">) -&gt;</code></div><div class="line number47 index46 alt2"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl plain">{noreply, </code><code class="erl constants">State</code><code class="erl plain">}.</code></div><div class="line number48 index47 alt1">&nbsp;</div><div class="line number49 index48 alt2"><code class="erl plain">terminate(_</code><code class="erl constants">Reason</code><code class="erl plain">, _</code><code class="erl constants">State</code><code class="erl plain">) -&gt;</code></div><div class="line number50 index49 alt1"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl plain">ok.</code></div><div class="line number51 index50 alt2">&nbsp;</div><div class="line number52 index51 alt1"><code class="erl plain">code_change(_</code><code class="erl constants">OldVsn</code><code class="erl plain">, </code><code class="erl constants">State</code><code class="erl plain">, _</code><code class="erl constants">Extra</code><code class="erl plain">) -&gt;</code></div><div class="line number53 index52 alt2"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl plain">{ok, </code><code class="erl constants">State</code><code class="erl plain">}.</code></div><div class="line number54 index53 alt1">&nbsp;</div><div class="line number55 index54 alt2"><code class="erl comments">%% ------------------------------------------------------------------</code></div><div class="line number56 index55 alt1"><code class="erl comments">%% Internal Function Definitions</code></div><div class="line number57 index56 alt2"><code class="erl comments">%% ------------------------------------------------------------------</code></div></div></td></tr></tbody></table></div></div><p>修改 rebarapp_sup.erl 的 init 函数，把 rebarapp_server 作为应用管理者 rebarapp_sup 的工作进程启动，修改如下：</p><div><div id="highlighter_285573" class="syntaxhighlighter  erl"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="erl plain">init([]) -&gt;</code></div><div class="line number2 index1 alt1"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl constants">RebarappServer</code> <code class="erl plain">= </code><code class="erl preprocessor">?CHILD</code><code class="erl plain">(rebarapp_server, worker),</code></div><div class="line number3 index2 alt2"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl plain">{ok, { {one_for_one, 5, 10}, [</code><code class="erl constants">RebarappServer</code><code class="erl plain">]} }.</code></div></div></td></tr></tbody></table></div></div><p><strong>编译应用</strong></p><div><div id="highlighter_364191" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rebar compile</code></div></div></td></tr></tbody></table></div></div><p>编译完后，会在根目录下生成一个 ebin 的文件夹，里面存放的是该应用的资源文件 rebarapp.app 和应用的 beam&nbsp;文件，也可以执行以下命令对编译生成的应用文件进行清理：</p><div><div id="highlighter_768509" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rebar clean</code></div></div></td></tr></tbody></table></div></div><p><strong>使用 Edoc 生成应用文档</strong></p><div><div id="highlighter_64866" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rebar doc</code></div></div></td></tr></tbody></table></div></div><p>命令执行完后，会在根目录生成一个 doc 的文件夹，打开里面的 index.html 就可以很直观地看到该应用的模块 API 概览。</p><p><strong>eunit 测试</strong></p><p>rebar 会根据一个名为 rebar.config 的文件里的 <a title="erlang eunit" href="http://www.erlang.org/doc/man/eunit.html" target="_blank">eunit</a> 配置选项来对应用进行测试，rebar.config 详细地配置选项信息可以查看官方上的 <a title="rebar.config.sample" href="https://github.com/basho/rebar/blob/master/rebar.config.sample" target="_blank">rebar.config.sample</a>。在应用的根目录下创建一个 rebar.config，填入以下内容：</p><div><div id="highlighter_494485" class="syntaxhighlighter  plain"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="plain plain">%%-*- mode: erlang -*-</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="plain plain">%% Erlang compiler options</code></div><div class="line number4 index3 alt1"><code class="plain plain">{erl_opts, [debug_info,</code></div><div class="line number5 index4 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{i, "test"},</code></div><div class="line number6 index5 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{src_dirs, ["src"]}]}.</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="plain plain">{eunit_opts, [verbose, {report, {eunit_surefire, [{dir, "."}]}}]}.</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="plain plain">{cover_enabled, true}.</code></div></div></td></tr></tbody></table></div></div><p>上面的配置将会加载根目录下的 test 文件夹里的文件，所以需要在根目录下创建一个 test 文件夹：</p><div><div id="highlighter_583862" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell functions">mkdir</code> <code class="shell plain">-p </code><code class="shell functions">test</code></div></div></td></tr></tbody></table></div></div><p>这里 test 文件夹将存放 eunit 的测试用例，在 test 文件夹里新建一个名为 rebarapp_test.hrl 的测试用例文件，内容如下：</p><div><div id="highlighter_774943" class="syntaxhighlighter  erl"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="erl plain">-include_lib(</code><code class="erl string">"eunit/include/eunit.hrl"</code><code class="erl plain">).</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="erl plain">my_test() -&gt;</code></div><div class="line number5 index4 alt2"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl preprocessor">?assert</code><code class="erl plain">(1 + 2 =:= 3).</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="erl plain">simple_test() -&gt;</code></div><div class="line number8 index7 alt1"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl plain">ok = </code><code class="erl functions">application:start</code><code class="erl plain">(rebarapp),</code></div><div class="line number9 index8 alt2"><code class="erl spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="erl preprocessor">?assertNot</code><code class="erl plain">(undefined =:= whereis(rebarapp_sup)).</code></div></div></td></tr></tbody></table></div></div><p>然后在 rebarapp_server.erl 的文件末尾加上以下测试代码：</p><div><div id="highlighter_510956" class="syntaxhighlighter  erl"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="erl plain">-ifdef(</code><code class="erl constants">TEST</code><code class="erl plain">).</code></div><div class="line number2 index1 alt1"><code class="erl plain">-include(</code><code class="erl string">"rebarapp_test.hrl"</code><code class="erl plain">).</code></div><div class="line number3 index2 alt2"><code class="erl plain">-endif.</code></div></div></td></tr></tbody></table></div></div><p>当然，如果有必要的话也可以在每个模块文件上加上面测试代码。执行以下命令进行 eunit 测试：</p><div><div id="highlighter_911600" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rebar compile eunit</code></div></div></td></tr></tbody></table></div></div><p>如果应用文件没什么变化修改，也可以直接运行 "rebar eunit"。这时终端出现以下类似显示，则 eunit 测试完成：</p><div><div id="highlighter_637065" class="syntaxhighlighter  plain"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="plain plain">==&gt; rebarapp (eunit)</code></div><div class="line number2 index1 alt1"><code class="plain plain">======================== EUnit ========================</code></div><div class="line number3 index2 alt2"><code class="plain plain">module 'rebarapp_app'</code></div><div class="line number4 index3 alt1"><code class="plain plain">module 'rebarapp_server'</code></div><div class="line number5 index4 alt2"><code class="plain spaces">&nbsp;&nbsp;</code><code class="plain plain">rebarapp_server: my_test...ok</code></div><div class="line number6 index5 alt1"><code class="plain spaces">&nbsp;&nbsp;</code><code class="plain plain">rebarapp_server: simple_test...[0.014 s] ok</code></div><div class="line number7 index6 alt2"><code class="plain spaces">&nbsp;&nbsp;</code><code class="plain plain">[done in 0.019 s]</code></div><div class="line number8 index7 alt1"><code class="plain plain">module 'rebarapp_sup'</code></div><div class="line number9 index8 alt2"><code class="plain plain">=======================================================</code></div><div class="line number10 index9 alt1"><code class="plain spaces">&nbsp;&nbsp;</code><code class="plain plain">All 2 tests passed.</code></div><div class="line number11 index10 alt2"><code class="plain plain">Cover analysis: /Users/dengjoe/erlang/rebarapp/.eunit/index.html</code></div></div></td></tr></tbody></table></div></div><p>可以打开根目录下的.eunit/index.html 查看测试报告。</p><p><strong>发布应用</strong></p><p>在应用根目录下创建一个名为 rel 的文件夹，用来作为应用发布的文件夹：</p><div><div id="highlighter_150010" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell functions">mkdir</code> <code class="shell plain">-p rel</code></div><div class="line number2 index1 alt1"><code class="shell functions">cd</code> <code class="shell plain">rel</code></div></div></td></tr></tbody></table></div></div><p>在当前 rel 文件夹里创建一个名为 rebarapp 的独立的 Erlang VM 节点：</p><div><div id="highlighter_294930" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rebar create-node nodeid=rebarapp</code></div></div></td></tr></tbody></table></div></div><p>修改 rel/reltool.config 里的 lib_dirs 的值，默认是一个空列表 "[]"，改为应用所在的目录路径 '["../../"]'，不然到后面编译发布时会报 "Missing application directory" 的错误出来，修改后的 reltool.config 配置内容如下所示：</p><div><div id="highlighter_149249" class="syntaxhighlighter  plain"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="plain plain">{sys, [</code></div><div class="line number2 index1 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{lib_dirs, ["../../"]},</code></div><div class="line number3 index2 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{erts, [{mod_cond, derived}, {app_file, strip}]},</code></div><div class="line number4 index3 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{app_file, strip},</code></div><div class="line number5 index4 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{rel, "rebarapp", "1",</code></div><div class="line number6 index5 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">[</code></div><div class="line number7 index6 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">kernel,</code></div><div class="line number8 index7 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">stdlib,</code></div><div class="line number9 index8 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">sasl,</code></div><div class="line number10 index9 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">rebarapp</code></div><div class="line number11 index10 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">]},</code></div><div class="line number12 index11 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{rel, "start_clean", "",</code></div><div class="line number13 index12 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">[</code></div><div class="line number14 index13 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">kernel,</code></div><div class="line number15 index14 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">stdlib</code></div><div class="line number16 index15 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">]},</code></div><div class="line number17 index16 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{boot_rel, "rebarapp"},</code></div><div class="line number18 index17 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{profile, embedded},</code></div><div class="line number19 index18 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{incl_cond, derived},</code></div><div class="line number20 index19 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{mod_cond, derived},</code></div><div class="line number21 index20 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{excl_archive_filters, [".*"]}, %% Do not archive built libs</code></div><div class="line number22 index21 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{excl_sys_filters, ["^bin/.*", "^erts.*/bin/(dialyzer|typer)",</code></div><div class="line number23 index22 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">"^erts.*/(doc|info|include|lib|man|src)"]},</code></div><div class="line number24 index23 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{excl_app_filters, ["\.gitignore"]},</code></div><div class="line number25 index24 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{app, rebarapp, [{mod_cond, app}, {incl_cond, include}]}</code></div><div class="line number26 index25 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">]}.</code></div><div class="line number27 index26 alt2">&nbsp;</div><div class="line number28 index27 alt1"><code class="plain plain">{target_dir, "rebarapp"}.</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="plain plain">{overlay, [</code></div><div class="line number31 index30 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{mkdir, "log/sasl"},</code></div><div class="line number32 index31 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{copy, "files/erl", "\{\{erts_vsn\}\}/bin/erl"},</code></div><div class="line number33 index32 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{copy, "files/nodetool", "\{\{erts_vsn\}\}/bin/nodetool"},</code></div><div class="line number34 index33 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{copy, "files/rebarapp", "bin/rebarapp"},</code></div><div class="line number35 index34 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{copy, "files/rebarapp.cmd", "bin/rebarapp.cmd"},</code></div><div class="line number36 index35 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{copy, "files/start_erl.cmd", "bin/start_erl.cmd"},</code></div><div class="line number37 index36 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{copy, "files/install_upgrade.escript", "bin/install_upgrade.escript"},</code></div><div class="line number38 index37 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{copy, "files/sys.config", "releases/\{\{rel_vsn\}\}/sys.config"},</code></div><div class="line number39 index38 alt2"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">{copy, "files/vm.args", "releases/\{\{rel_vsn\}\}/vm.args"}</code></div><div class="line number40 index39 alt1"><code class="plain spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain plain">]}.</code></div></div></td></tr></tbody></table></div></div><p>返回应用的根目录，在 rebar.config 加上以下一行，把新建的 rel 文件夹放入到 rebar 可访问的子文件夹里，作为应用内容发布文件夹：&nbsp;</p><div><div id="highlighter_258342" class="syntaxhighlighter  plain"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="plain plain">{sub_dirs, ["rel"]}.</code></div></div></td></tr></tbody></table></div></div><p>再重新编译下应用 rebarapp</p><div><div id="highlighter_529445" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rebar compile</code></div></div></td></tr></tbody></table></div></div><p>如果报什么错，应用 rebarapp 就可以发布了：</p><div><div id="highlighter_423246" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rebar generate</code></div></div></td></tr></tbody></table></div></div><p>在终端上看到 "==&gt; rel (generate)" 且没报什么错，应用 rebarapp 发布成功，并在 rel/rebarapp/bin 目录下生成一个用来启动应用或停止应用等操控动作的 shell 文件 rebarapp。</p><p>操控文件 rel/rebarapp/bin/rebarapp 用法：</p><div><div id="highlighter_884814" class="syntaxhighlighter  plain"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="plain plain">rebarapp {start|start_boot |foreground|stop|restart|reboot|ping|console|console_clean|console_boot |attach|remote_console|upgrade}</code></div></div></td></tr></tbody></table></div></div><p>例如：</p><p>启动应用 rebarapp</p><div><div id="highlighter_276744" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rel</code><code class="shell plain">/rebarapp/bin/rebarapp</code> <code class="shell plain">start</code></div></div></td></tr></tbody></table></div></div><p>停止应用 rebarapp</p><div><div id="highlighter_996094" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rel</code><code class="shell plain">/rebarapp/bin/rebarapp</code> <code class="shell plain">stop</code></div></div></td></tr></tbody></table></div></div><p>或者启动应用 rebarapp 后返回一个 erlang shell 的控制台</p><div><div id="highlighter_698250" class="syntaxhighlighter  shell"><div class="toolbar"><span><a href="http://dhq.me/build-compile-eunit-release-erlang-application-with-rebar#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="shell plain">rel</code><code class="shell plain">/rebarapp/bin/rebarapp</code> <code class="shell plain">console</code></div></div></td></tr></tbody></table></div></div><p>OK，在 erlang shell 的控制台上调用 rebarapp_server:hello() 输出一个 "Hello World!" 吧。</p>

	

<div class="post-tags keywords">
	发表于:&nbsp;&nbsp;<span>2013-02-22 22:34:00</span>
	&nbsp;&nbsp;
	标签:
	
	<a class="tag-filter-transition" href="http://dhq.me/by_keyword/344/erlang">erlang </a>
	
	<a class="tag-filter-transition" href="http://dhq.me/by_keyword/369/rebar">rebar </a>
	
</div>



	
	

<div class="prevnext">

	
		<div class="next">
			<a href="http://dhq.me/heroku-erlang-ip-server-with-egeoip" title="利用 erlang 的 IP 地理位置信息库 -- egeoip，在 heroku 上部署 IP 查询服务"> Next →</a>
		</div>
	

	
		<div class="prev">
			<a href="http://dhq.me/heroku-deploy-erlang-web-webmachine-mochiweb-erlydtl" title="在 Heroku 上部署 Webmachine + Mochiweb + ErlyDTL 组合的 Erlang Web 应用">← Previous</a>
		</div>
	

</div>




	
	<section id="comments">
		<div id="disqus_thread"><iframe id="dsq-2" data-disqus-uid="2" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%" src="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/saved_resource.htm" style="width: 100% !important; border: none !important; overflow: hidden !important; height: 321px !important;" horizontalscrolling="no" verticalscrolling="no"></iframe></div>
	    <noscript>Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;</noscript>
	    
	</section>
	


                </div>
            </div>

            <section id="sidebar" class="zp-30 last">
                
	


    <form action="http://dhq.me/search" id="cse-search-box">
	  	<div id="dhq_search">
	    	<input type="hidden" name="cx" value="003735940401219303672:4tswkohegxi">
	    	<input type="hidden" name="cof" value="FORID:10">
	    	<input type="hidden" name="ie" value="UTF-8">
	    	<input id="s_text" type="text" name="q" size="31">
	    	<input id="s_submit" type="submit" name="sa" value="搜 索">
	  	</div>
	</form>

	<h2>文章归档</h2>
	<ul class="simple-list">
		
			
			<li><a href="http://dhq.me/archives/2014/2">February 2014 (1)</a></li>
			
			<li><a href="http://dhq.me/archives/2014/7">July 2014 (1)</a></li>
			
		
			
			<li><a href="http://dhq.me/archives/2013/1">January 2013 (6)</a></li>
			
			<li><a href="http://dhq.me/archives/2013/2">February 2013 (4)</a></li>
			
			<li><a href="http://dhq.me/archives/2013/3">March 2013 (8)</a></li>
			
			<li><a href="http://dhq.me/archives/2013/4">April 2013 (4)</a></li>
			
			<li><a href="http://dhq.me/archives/2013/5">May 2013 (11)</a></li>
			
			<li><a href="http://dhq.me/archives/2013/6">June 2013 (2)</a></li>
			
			<li><a href="http://dhq.me/archives/2013/7">July 2013 (1)</a></li>
			
			<li><a href="http://dhq.me/archives/2013/8">August 2013 (1)</a></li>
			
		
			
			<li><a href="http://dhq.me/archives/2012/12">December 2012 (9)</a></li>
			
		
	</ul>

	<h2>标签云</h2>
	<ul class="inline-list clearfix">
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/391/awk">awk</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/383/centos">CentOS</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/345/dict">dict</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/332/eaccelerator">eAccelerator</a></li>
		
		<li><a class="tag-filter-transition" title="13" href="http://dhq.me/by_keyword/344/erlang">erlang</a></li>
		
		<li><a class="tag-filter-transition" title="2" href="http://dhq.me/by_keyword/367/erlydtl">ErlyDTL</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/384/fedora">Fedora</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/329/ftp">ftp</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/420/github">github</a></li>
		
		<li><a class="tag-filter-transition" title="3" href="http://dhq.me/by_keyword/371/heroku">heroku</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/351/homebrew">homebrew</a></li>
		
		<li><a class="tag-filter-transition" title="2" href="http://dhq.me/by_keyword/379/javascript">javascript</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/421/jekyll">Jekyll</a></li>
		
		<li><a class="tag-filter-transition" title="4" href="http://dhq.me/by_keyword/327/linux">linux</a></li>
		
		<li><a class="tag-filter-transition" title="13" href="http://dhq.me/by_keyword/397/lua">lua</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/403/luarocks">LuaRocks</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/405/luasocket">LuaSocket</a></li>
		
		<li><a class="tag-filter-transition" title="3" href="http://dhq.me/by_keyword/350/mac">Mac</a></li>
		
		<li><a class="tag-filter-transition" title="2" href="http://dhq.me/by_keyword/418/markdown">markdown</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/339/memcache">memcache</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/366/mochiweb">mochiweb</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/356/mysql">mysql</a></li>
		
		<li><a class="tag-filter-transition" title="2" href="http://dhq.me/by_keyword/355/nginx">nginx</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/381/node-js">node.js</a></li>
		
		<li><a class="tag-filter-transition" title="4" href="http://dhq.me/by_keyword/331/php">php</a></li>
		
		<li><a class="tag-filter-transition" title="2" href="http://dhq.me/by_keyword/336/php-fpm">php-fpm</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/394/postgresql">postgresql</a></li>
		
		<li><a class="tag-filter-transition" title="3" href="http://dhq.me/by_keyword/334/python">python</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/423/qrcode">QRCode</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/369/rebar">rebar</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/342/sed">sed</a></li>
		
		<li><a class="tag-filter-transition" title="3" href="http://dhq.me/by_keyword/341/shell">shell</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/337/spawn-fcgi">spawn-fcgi</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/373/ssh">ssh</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/426/supervisor">Supervisor</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/358/syntaxhighlighter">SyntaxHighlighter</a></li>
		
		<li><a class="tag-filter-transition" title="5" href="http://dhq.me/by_keyword/328/ubuntu">ubuntu</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/388/vpn">vpn</a></li>
		
		<li><a class="tag-filter-transition" title="2" href="http://dhq.me/by_keyword/365/webmachine">webmachine</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/416/websocket">WebSocket</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/386/wordpress">wordpress</a></li>
		
		<li><a class="tag-filter-transition" title="1" href="http://dhq.me/by_keyword/375/xml">xml</a></li>
		
		<li><a class="tag-filter-transition" title="9" href="http://dhq.me/by_keyword/353/zotonic">zotonic</a></li>
		
	</ul>
	
	<h2>近期文章</h2>
	<ul class="article_list clearfix">
		
		
			
				
					
		<li><a href="http://dhq.me/mac-supervisor-install" title="Mac 下 Supervisor 的安装与配置">Mac 下 Supervisor 的安装与配置</a></li>
					
				
			
		
			
				
					
		<li><a href="http://dhq.me/python-qr-code-generator" title="Python 的生成二维码生成库 -- qrcode">Python 的生成二维码生成库 -- qrcode</a></li>
					
				
			
		
			
				
					
		<li><a href="http://dhq.me/install-jekyll-bootstrap-on-mac" title="在 Mac 上搭建可托管在 github 的轻博客 -- Jekyll Bootstrap">在 Mac 上搭建可托管在 github 的轻博客 -- Jekyll Bootstrap</a></li>
					
				
			
		
			
				
					
		<li><a href="http://dhq.me/markdown-syntax" title="Markdown 语法">Markdown 语法</a></li>
					
				
			
		
			
				
					
		<li><a href="http://dhq.me/the-interaction-experiment-between-erlang-and-websocket" title="Erlang 与 WebSocket 之间的通讯交互">Erlang 与 WebSocket 之间的通讯交互</a></li>
					
				
			
		
			
				
					
		<li><a href="http://dhq.me/an-implementation-of-lua-in-erlang-luerl" title="利用 Luerl 在 Heroku 上搭建基于 Erlang 的 Lua Web Shell">利用 Luerl 在 Heroku 上搭建基于 Erlang 的 Lua Web Shell</a></li>
					
				
			
		
			
				
					
		<li><a href="http://dhq.me/lua-learning-notes-string" title="Lua 学习笔记（10） -- 字符串库">Lua 学习笔记（10） -- 字符串库</a></li>
					
				
			
		
			
				
					
		<li><a href="http://dhq.me/lua-learning-notes-c-api" title="Lua 学习笔记（9） -- Lua 与 C 间的交互">Lua 学习笔记（9） -- Lua 与 C 间的交互</a></li>
					
				
			
		
			
				
					
		<li><a href="http://dhq.me/lua-learning-notes-function" title="Lua 学习笔记（8） -- 闭包">Lua 学习笔记（8） -- 闭包</a></li>
					
				
			
		
			
				
					
		<li><a href="http://dhq.me/lua-learning-notes-object-oriented-programming" title="Lua 学习笔记（7） -- 面向对象编程">Lua 学习笔记（7） -- 面向对象编程</a></li>
					
				
			
		
		
	</ul>

    <h2>扫描二维码访问本站</h2>
    <div class="dhq_qrcode">
        <img title="dhq.me QR Code Logo" src="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/dhqme_qrcode_logo.png" alt="dhq.me QR Code Logo">
    </div>











            </section>

			

        </section>

        <footer class="clearfix">
			<div class="powered_by">
				<p class="footer-blog-title">
					由 <a href="http://zotonic.com/">Zotonic 0.10-dev</a> 强力驱动
					&nbsp;|&nbsp;
					<a href="http://dhq.me/sitemap.html">站点地图</a>
					&nbsp;|&nbsp;
					<!-- 托管在 <a href="https://www.digitalocean.com/?refcode=c2e1fa2778ad">DigitalOcean</a> -->
					托管在 <a href="https://www.linode.com/?r=4979bb47b3357142334154628b7d0176b3dff63f">Linode</a>
				</p>
			</div>
		</footer>

    </section>

	<script src="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/jquery.ui.touch-punch.min~63578349553.js" type="text/javascript"></script>

	
	<script src="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/zotonic-1.0~z.widgetmanager~63578349553.js" type="text/javascript"></script>
    	
	<script src="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/shCore~shBrushBash~shBrushCpp~shBrushCss~shBrushErlang~shBrushJScript~shBrushPhp~shBrushPlain~shBrushPython~shBrushSql~shBrushXml~shBrushLua~63578349553.js" type="text/javascript"></script>
<link href="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/shCoreDefault~63578349553.css" type="text/css" media="all" rel="stylesheet">
<script>SyntaxHighlighter.all();</script>

	
	
<script type="text/javascript">
$(window).load(function() {
	/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'dhqme'; // required: replace example with your forum shortname

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
	})();
});
</script>

	
	<script src="./用 rebar 来构建、编译、测试、发布 Erlang 应用程序 — D.H.Q的烂笔头_files/dhqme~63578349553.js" type="text/javascript"></script>

	
    

<script type="text/javascript">
$(function() {
z_set_page_id("e3EDy8ezzSZ7SRXgsemu");z_ua="desktop";z_language="en";z_init_postback_forms();
z_default_form_postback = "Grj1Gi3UsPkjacwB8MNEj7uplKuDaAVrAAZzdWJtaXRkAAl1bmRlZmluZWRkAAl1bmRlZmluZWRqZAAPY29udHJvbGxlcl9wYWdl";
z_stream_start('dhq.me');
});
</script>


<div class="returnTop" title="返回顶部" style="display: block;">
	<span class="s"></span>
	<span class="b"></span>
	返回顶部
</div>
    


</body></html>