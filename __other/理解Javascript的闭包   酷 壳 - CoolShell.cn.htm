<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<!-- saved from url=(0038)http://coolshell.cn/articles/6731.html -->
<html xmlns="http://www.w3.org/1999/xhtml"><head profile="http://gmpg.org/xfn/11"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	
	<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7">

	<title>理解Javascript的闭包 | 酷 壳 - CoolShell.cn</title>
	<link rel="alternate" type="application/rss+xml" title="RSS 2.0 - 所有文章" href="http://coolshell.cn/feed">
	<link rel="alternate" type="application/rss+xml" title="RSS 2.0 - 所有评论" href="http://coolshell.cn/comments/feed">
	<link rel="pingback" href="http://coolshell.cn/xmlrpc.php">

	<!-- style START -->
	<!-- default style -->
	<style type="text/css" media="screen">@import url( http://coolshell.cn/wp-content/themes/inove/style.css );</style>
	<link rel="stylesheet" id="open-sans-css" href="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/google-font.css" type="text/css" media="all">
	<!-- for translations -->
			<link rel="stylesheet" href="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/chinese.css" type="text/css" media="screen">
		<!--[if IE]>
		<link rel="stylesheet" href="http://coolshell.cn//wp-content/themes/inove/ie.css" type="text/css" media="screen" />
	<![endif]-->
	<!-- style END -->

	<!-- script START -->
	<script type="text/javascript" async="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/ga.js"></script><script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/base.js"></script><style type="text/css"></style>
	<script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/menu.js"></script>
	<!-- script END -->

	<link rel="alternate" type="application/rss+xml" title="酷 壳 - CoolShell.cn » 理解Javascript的闭包评论Feed" href="http://coolshell.cn/articles/6731.html/feed">
<script>var killIE6ImgUrl = "http://coolshell.cn//wp-content/plugins/lets-kill-ie6/img";</script><link rel="stylesheet" id="wp-postratings-css" href="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/postratings-css.css" type="text/css" media="all">
<link rel="stylesheet" id="wp-pagenavi-css" href="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/pagenavi-css.css" type="text/css" media="all">
<script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/jquery.js"></script>
<script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/jquery-migrate.min.js"></script>
<script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/lets-kill-ie6.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://coolshell.cn/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://coolshell.cn//wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="再谈javascript面向对象编程" href="http://coolshell.cn/articles/6668.html">
<link rel="next" title="Bret Victor – Inventing on Principle" href="http://coolshell.cn/articles/6775.html">
<meta name="generator" content="WordPress 4.0.1">
<link rel="shortlink" href="http://coolshell.cn/?p=6731">
	<link href="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/SyntaxHighlighter.css" type="text/css" rel="stylesheet">
	<script type="text/javascript">
	window._wp_rp_static_base_url = 'https://wprp.zemanta.com/static/';
	window._wp_rp_wp_ajax_url = "http://coolshell.cn/wp-admin/admin-ajax.php";
	window._wp_rp_plugin_version = '3.5.2';
	window._wp_rp_post_id = '6731';
	window._wp_rp_num_rel_posts = '8';
	window._wp_rp_thumbnails = false;
	window._wp_rp_post_title = '%E7%90%86%E8%A7%A3Javascript%E7%9A%84%E9%97%AD%E5%8C%85';
	window._wp_rp_post_tags = ['javascript', 'oop', 'ecmascript', 'web%3F%3F', '%3F%3F%3F%3F', 'function', 'var', 'variabl', 'num', 'titl', 'local', 'return', 'alt', '666', 'span', 'text', 'javascript', 'closur', 'neo'];
	window._wp_rp_promoted_content = true;
</script>
<script type="text/javascript" src="https://wprp.zemanta.com/static/js/loader.js?version=3.5.2" async=""></script>
<style type="text/css">
.related_post_title {
}
ul.related_post {
}
ul.related_post li {
}
ul.related_post li a {
}
ul.related_post li img {
}</style>

<!-- All in One SEO Pack 2.2.3.1 by Michael Torbert of Semper Fi Web Design[326,381] -->
<meta name="keywords" content="ecmascript,javascript,oop,web开发,编程语言">

<link rel="canonical" href="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/理解Javascript的闭包   酷 壳 - CoolShell.cn.htm">
<meta property="og:title" content="理解Javascript的闭包 | 酷 壳 - CoolShell.cn">
<meta property="og:type" content="article">
<meta property="og:url" content="http://coolshell.cn/articles/6731.html">
<meta property="og:image" content="http://coolshell.cn//wp-content/plugins/all-in-one-seo-pack/images/default-user-image.png">
<meta property="og:site_name" content="酷 壳 - CoolShell.cn">
<meta property="og:description" content="【感谢 Neo 投递本文 - 微博帐号：_锟_ 】 前言：还是一篇入门文章。Javascript中有几个非常重要的语言特性——对象、原型继承、闭包。其中闭包对于那些使用传统静态语言C/C++的程序员来说是一个新的语言特性。本文将以例子入手来介绍Javascript闭包的语言特性，并结合一点ECMAScript语言规范来使读者可以更深入的理解闭包。 注：本文是入门文章，例子素材整理于网络，如果你是高手，欢迎针对文章提出技术性建议和意见。本文讨论的是Javascript，不想做语言对比，如果您对Javascript天生不适，请自行绕道。 什么是闭包 闭包是什么?闭包是Closure，这是静态语言所不具有的一个新特性。但是闭包也不是什么复杂到不可理解的东西，简而言之，闭包就是：  闭包就是函数的局部变量集合，只是这些局部变量在函数返回后会继续存在。 闭包就是就是函数的“堆栈”在函数返回后并不释放，我们也可以理解为这些函数堆栈并不在栈上分配而是在堆上分配 当在一个函数内定义另外一个函数就会产生闭包  上面的第二定义是第一个补充说明，抽取第一个定义的主谓宾——闭包是函数的‘局部变量’集合。只是这个局部变量是可以在函数返回后被访问。（这个不是官方定义，但是这个定义应该更有利于你理解闭包） 做为局部变量都可以被函数内的代码访问，这个和静态语言是没有差别。闭包的差别在于局部变变量可以在函数执行结束后仍然被函数外的代码访问。这意味着函数必须返回一个指向闭包的“引用”，或将这个&quot;引用&quot;赋值给某个外部变量，才能保证闭包中局部变量被外部代码访问。当然包含这个引用的实体应该是一个对象，因为在Javascript中除了基本类型剩下的就都是对象了。可惜的是，ECMAScript并没有提供相关的成员和方法来访问闭包中的局部变量。但是在ECMAScript中，函数对象中定义的内部函数(inner function)是可以直接访问外部函数的局部变量，通过这种机制，我们就可以以如下的方式完成对闭包的访问了。   上述代码的执行结果是：Hello Closure，因为sayHello()函数在greeting函数执行完毕后，仍然可以访问到了定义在其之内的局部变量text。 好了，这个就是传说中闭包的效果，闭包在Javascript中有多种应用场景和模式，比如Singleton，Power">
<meta property="article:published_time" content="2012-03-07T08:30:43Z">
<meta property="article:modified_time" content="2012-03-07T22:13:14Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:description" content="【感谢 Neo 投递本文 - 微博帐号：_锟_ 】 前言：还是一篇入门文章。Javascript中有几个非常重要的语言特性——对象、原型继承、闭包。其中闭包对于那些使用传统静态语言C/C++的程序员来说是一个新的语言特性。本文将以例子入手来介绍Javascript闭包的语言特性，并结合一点ECMAScript语言规范来使读者可以更深入的理解闭包。 注：本文是入门文章，例子素材整理于网络，如果你是高手，欢迎针对文章提出技术性建议和意见。本文讨论的是Javascript，不想做语言对比，如果您对Javascript天生不适，请自行绕道。 什么是闭包 闭包是什么?闭包是Closure，这是静态语言所不具有的一个新特性。但是闭包也不是什么复杂到不可理解的东西，简而言之，闭包就是：  闭包就是函数的局部变量集合，只是这些局部变量在函数返回后会继续存在。 闭包就是就是函数的“堆栈”在函数返回后并不释放，我们也可以理解为这些函数堆栈并不在栈上分配而是在堆上分配 当在一个函数内定义另外一个函数就会产生闭包  上面的第二定义是第一个补充说明，抽取第一个定义的主谓宾——闭包是函数的‘局部变量’集合。只是这个局部变量是可以在函数返回后被访问。（这个不是官方定义，但是这个定义应该更有利于你理解闭包） 做为局部变量都可以被函数内的代码访问，这个和静态语言是没有差别。闭包的差别在于局部变变量可以在函数执行结束后仍然被函数外的代码访问。这意味着函数必须返回一个指向闭包的“引用”，或将这个&quot;引用&quot;赋值给某个外部变量，才能保证闭包中局部变量被外部代码访问。当然包含这个引用的实体应该是一个对象，因为在Javascript中除了基本类型剩下的就都是对象了。可惜的是，ECMAScript并没有提供相关的成员和方法来访问闭包中的局部变量。但是在ECMAScript中，函数对象中定义的内部函数(inner function)是可以直接访问外部函数的局部变量，通过这种机制，我们就可以以如下的方式完成对闭包的访问了。   上述代码的执行结果是：Hello Closure，因为sayHello()函数在greeting函数执行完毕后，仍然可以访问到了定义在其之内的局部变量text。 好了，这个就是传说中闭包的效果，闭包在Javascript中有多种应用场景和模式，比如Singleton，Power">
<meta itemprop="image" content="http://coolshell.cn//wp-content/plugins/all-in-one-seo-pack/images/default-user-image.png">
<!-- /all in one seo pack -->
<link rel="stylesheet" type="text/css" href="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shCore.css"><link rel="stylesheet" type="text/css" href="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shThemeDefault.css"><style type="text/css" id="syntaxhighlighteranchor"></style>
</head>


<body style="zoom: 1;"><link href="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/jiathis_counter.css" rel="stylesheet" type="text/css"><script src="http://tajs.qq.com/jiathis.php?uid=1541368&dm=coolshell.cn" charset="utf-8"></script><link href="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/jiathis_share.css" rel="stylesheet" type="text/css"><iframe frameborder="0" style="position: absolute; display: none; opacity: 0;"></iframe><div class="jiathis_style" style="position: absolute; z-index: 1000000000; display: none; top: 50%; left: 50%; overflow: auto;"></div><div class="jiathis_style" style="position: absolute; z-index: 1000000000; display: none; overflow: auto;"></div><iframe frameborder="0" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/jiathis_utility.htm" style="display: none;"></iframe>
<!-- wrap START -->
<div id="wrap">

<!-- container START -->
<div id="container">

<!-- header START -->
<div id="header">

	<!-- banner START -->
			<div class="banner">
			<a title="把这个链接拖到你的Chrome收藏夹工具栏中" href="javascript:(function(){function c(){var e=document.createElement("link");e.setAttribute("type","text/css");e.setAttribute("rel","stylesheet");e.setAttribute("href",f);e.setAttribute("class",l);document.body.appendChild(e)}function h(){var e=document.getElementsByClassName(l);for(var t=0;t<e.length;t++){document.body.removeChild(e[t])}}function p(){var e=document.createElement("div");e.setAttribute("class",a);document.body.appendChild(e);setTimeout(function(){document.body.removeChild(e)},100)}function d(e){return{height:e.offsetHeight,width:e.offsetWidth}}function v(i){var s=d(i);return s.height>e&&s.height<n&&s.width>t&&s.width<r}function m(e){var t=e;var n=0;while(!!t){n+=t.offsetTop;t=t.offsetParent}return n}function g(){var e=document.documentElement;if(!!window.innerWidth){return window.innerHeight}else if(e&&!isNaN(e.clientHeight)){return e.clientHeight}return 0}function y(){if(window.pageYOffset){return window.pageYOffset}return Math.max(document.documentElement.scrollTop,document.body.scrollTop)}function E(e){var t=m(e);return t>=w&&t<=b+w}function S(){var e=document.createElement("audio");e.setAttribute("class",l);e.src=i;e.loop=false;e.addEventListener("canplay",function(){setTimeout(function(){x(k)},500);setTimeout(function(){N();p();for(var e=0;e<O.length;e++){T(O[e])}},15500)},true);e.addEventListener("ended",function(){N();h()},true);e.innerHTML=" <p>If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.</p> <p>";document.body.appendChild(e);e.play()}function x(e){e.className+=" "+s+" "+o}function T(e){e.className+=" "+s+" "+u[Math.floor(Math.random()*u.length)]}function N(){var e=document.getElementsByClassName(s);var t=new RegExp("\\b"+s+"\\b");for(var n=0;n<e.length;){e[n].className=e[n].className.replace(t,"")}}var e=30;var t=30;var n=350;var r=350;var i="//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake.mp3";var s="mw-harlem_shake_me";var o="im_first";var u=["im_drunk","im_baked","im_trippin","im_blown"];var a="mw-strobe_light";var f="//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css";var l="mw_added_css";var b=g();var w=y();var C=document.getElementsByTagName("*");var k=null;for(var L=0;L<C.length;L++){var A=C[L];if(v(A)){if(E(A)){k=A;break}}}if(A===null){console.warn("Could not find a node of the right size. Please try a different page.");return}c();S();var O=[];for(var L=0;L<C.length;L++){var A=C[L];if(v(A)){O.push(A)}}})()    ">High一下!</a>		</div>
		<!-- banner END -->

	<div id="caption">
		<h1 id="title"><a href="http://coolshell.cn/">酷 壳 – CoolShell.cn</a></h1>
		<div id="tagline">享受编程和技术所带来的快乐 – http://coolshell.cn</div>
	</div>

	<div class="fixed"></div>
</div>
<!-- header END -->

<!-- navigation START -->
<div id="navigation">
	<!-- menus START -->
	<ul id="menus">
		<li class="page_item"><a class="home" title="首页" href="http://coolshell.cn/">首页</a></li>
		<li class="page_item page-item-4194"><a href="http://coolshell.cn/featured_posts">推荐文章</a></li>
<li class="page_item page-item-3839"><a href="http://coolshell.cn/plugins">本站插件</a></li>
<li class="page_item page-item-2"><a href="http://coolshell.cn/guestbook">留言小本</a></li>
<li class="page_item page-item-368"><a href="http://coolshell.cn/about">关于酷壳</a></li>
<li class="page_item page-item-4470"><a href="http://coolshell.cn/haoel">关于陈皓</a></li>
		<li><a class="lastmenu" href="javascript:void(0);"></a></li>
	</ul>
	<!-- menus END -->

	<!-- searchbox START -->
	<div id="searchbox">
					<form action="http://coolshell.cn/" method="get">
				<div class="content">
					<input type="text" class="textfield searchtip" name="s" size="24" value="">
					<input type="submit" class="button" value="">
				</div>
			</form>
			</div>
<script type="text/javascript">
//<![CDATA[
	var searchbox = MGJS.$("searchbox");
	var searchtxt = MGJS.getElementsByClassName("textfield", "input", searchbox)[0];
	var searchbtn = MGJS.getElementsByClassName("button", "input", searchbox)[0];
	var tiptext = "请输入关键字...";
	if(searchtxt.value == "" || searchtxt.value == tiptext) {
		searchtxt.className += " searchtip";
		searchtxt.value = tiptext;
	}
	searchtxt.onfocus = function(e) {
		if(searchtxt.value == tiptext) {
			searchtxt.value = "";
			searchtxt.className = searchtxt.className.replace(" searchtip", "");
		}
	}
	searchtxt.onblur = function(e) {
		if(searchtxt.value == "") {
			searchtxt.className += " searchtip";
			searchtxt.value = tiptext;
		}
	}
	searchbtn.onclick = function(e) {
		if(searchtxt.value == "" || searchtxt.value == tiptext) {
			return false;
		}
	}
//]]>
</script>
	<!-- searchbox END -->

	<div class="fixed"></div>
</div>
<!-- navigation END -->

<!-- content START -->
<div id="content">

	<!-- main START -->
	<div id="main">


	<div id="postpath">
		<a title="转到首页" href="http://coolshell.cn/">首页</a>
		 &gt; <a href="http://coolshell.cn/category/proglanguage/webdev" rel="category tag">Web开发</a>, <a href="http://coolshell.cn/category/proglanguage" rel="category tag">编程语言</a>		 &gt; 理解Javascript的闭包	</div>

	<div class="post" id="post-6731">
		<h2>理解Javascript的闭包</h2>
		<div class="info">
			<span class="date">2012年3月7日</span>
			<span class="author"><a href="http://coolshell.cn/articles/author/neo" title="由Neo发布" rel="author">Neo</a></span>										<span class="addcomment"><a href="http://coolshell.cn/articles/6731.html#respond">发表评论</a></span>
				<span class="comments"><a href="http://coolshell.cn/articles/6731.html#comments">阅读评论</a></span>
						<span class="comments"> 34,227 人阅读  &nbsp;  &nbsp;</span>
			<div class="fixed"></div>
		</div>
		<div class="content">
			<p>【<span style="color: #cc0000">感谢 Neo 投递本文 – 微博帐号：<a title="_锟_" href="http://weibo.com/gandalfthegrey" target="_blank">_锟_</a> </span>】</p>
<p><strong>前言：还是一篇入门文章。</strong>Javascript中有几个非常重要的语言特性——对象、原型继承、闭包。其中闭包对于那些使用传统静态语言C/C++的程序员来说是一个新的语言特性。本文将以例子入手来介绍Javascript闭包的语言特性，并结合一点ECMAScript语言规范来使读者可以更深入的理解闭包。</p>
<p>注：<strong>本文是入门文章，例子素材整理于网络<strong>，如果你是高手，欢迎针对文章提出技术性建议和意见。本文讨论的是Javascript，不想做语言对比，如果您对Javascript天生不适，请自行绕道。</strong></strong></p>
<h4><strong><span style="color: #008000">什么是闭包</span></strong></h4>
<p>闭包是什么?闭包是Closure，这是静态语言所不具有的一个新特性。但是闭包也不是什么复杂到不可理解的东西，简而言之，闭包就是：<strong></strong></p>
<ul>
<li><strong>闭包就是函数的局部变量集合，只是这些局部变量在函数返回后会继续存在。</strong></li>
<li><strong>闭包就是就是函数的“堆栈”在函数返回后并不释放，我们也可以理解为这些函数堆栈并不在栈上分配而是在堆上分配</strong></li>
<li><strong>当在一个函数内定义另外一个函数就会产生闭包</strong></li>
</ul>
<p>上面的第二定义是第一个补充说明，抽取第一个定义的主谓宾——闭包是<strong>函数的‘局部变量’集合</strong>。只是这个局部变量是可以在函数返回后被访问。（这个不是官方定义，但是这个定义应该更有利于你理解闭包）</p>
<p>做为局部变量都可以被函数内的代码访问，这个和静态语言是没有差别。闭包的差别在于局部变变量可以在函数执行结束后仍然被函数外的代码访问。这意味着函数必须返回一个指向闭包的“引用”，或将这个”引用”赋值给某个外部变量，才能保证闭包中局部变量被外部代码访问。当然包含这个引用的实体应该是一个对象，因为在Javascript中除了基本类型剩下的就都是对象了。可惜的是，ECMAScript并没有提供相关的成员和方法来访问闭包中的局部变量。但是在ECMAScript中，函数对象中定义的<strong>内部函数(inner function)</strong>是可以直接访问外部函数的局部变量，通过这种机制，我们就可以以如下的方式完成对闭包的访问了。</p>
<p><span id="more-6731"></span></p>
<div><div id="highlighter_319264" class="syntaxhighlighter coolshell_syntaxhighlighter jscript  "><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="jscript keyword">function</code> <code class="jscript plain">greeting(name) {</code></div><div class="line number2 index1 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code> <code class="jscript plain">text = </code><code class="jscript string">'Hello '</code> <code class="jscript plain">+ name; </code><code class="jscript comments">// local variable</code></div><div class="line number3 index2 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript comments">// 每次调用时，产生闭包，并返回内部函数对象给调用者</code></div><div class="line number4 index3 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">return</code> <code class="jscript keyword">function</code><code class="jscript plain">() { alert(text); }</code></div><div class="line number5 index4 alt2"><code class="jscript plain">}</code></div><div class="line number6 index5 alt1"><code class="jscript keyword">var</code> <code class="jscript plain">sayHello=greeting(</code><code class="jscript string">"Closure"</code><code class="jscript plain">);</code></div><div class="line number7 index6 alt2"><code class="jscript plain">sayHello()&nbsp; </code><code class="jscript comments">// 通过闭包访问到了局部变量text</code></div></div></td></tr></tbody></table></div></div>
<p>上述代码的执行结果是：Hello Closure，因为sayHello()函数在greeting函数执行完毕后，仍然可以访问到了定义在其之内的局部变量text。</p>
<p>好了，这个就是传说中闭包的效果，闭包在Javascript中有多种应用场景和模式，比如Singleton，Power Constructor等这些Javascript模式都离不开对闭包的使用。</p>
<h4><strong><span style="color: #008000">ECMAScript闭包模型</span></strong></h4>
<p>ECMAScript到底是如何实现闭包的呢？想深入了解的亲们可以获取<a href="http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf">ECMAScript 规范</a>进行研究，我这里也只做一个简单的讲解，内容也是来自于网络。</p>
<p>在ECMAscript的脚本的函数运行时，每个函数关联都有一个执行上下文场景(Execution Context)&nbsp;，这个执行上下文场景中包含三个部分</p>
<ul>
<li>文法环境（The LexicalEnvironment）</li>
<li>变量环境（The VariableEnvironment）</li>
<li>this绑定</li>
</ul>
<p>其中第三点this绑定与闭包无关，不在本文中讨论。文法环境中用于解析函数执行过程使用到的变量标识符。我们可以将文法环境想象成一个对象，该对象包含了两个重要组件，环境记录(Enviroment Recode)，和外部引用(指针)。环境记录包含包含了函数内部声明的局部变量和参数变量，外部引用指向了外部函数对象的上下文执行场景。全局的上下文场景中此引用值为NULL。这样的数据结构就构成了一个单向的链表，每个引用都指向外层的上下文场景。</p>
<p>例如上面我们例子的闭包模型应该是这样，sayHello函数在最下层，上层是函数greeting，最外层是全局场景。如下图：<br>
<img class="aligncenter size-full wp-image-6741" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/closure.png" alt="" width="658" height="478"><br>
因此当sayHello被调用的时候，sayHello会通过上下文场景找到局部变量text的值，因此在屏幕的对话框中显示出”Hello Closure”<br>
变量环境(The VariableEnvironment)和文法环境的作用基本相似，具体的区别请参看ECMAScript的规范文档。</p>
<h4><strong><span style="color: #008000">闭包的样列</span></strong></h4>
<p>前面的我大致了解了Javascript闭包是什么，闭包在Javascript是怎么实现的。下面我们通过针对一些例子来帮助大家更加深入的理解闭包，下面共有5个样例，例子来自于<a href="http://blog.morrisjohns.com/javascript_closures_for_dummies.html">JavaScript Closures For Dummies(</a><a href="http://web.archive.org/web/20080209105120/http://blog.morrisjohns.com/javascript_closures_for_dummies">镜像</a><a href="http://blog.morrisjohns.com/javascript_closures_for_dummies.html">)</a>。<br>
<strong>例子1:闭包中局部变量是引用而非拷贝</strong></p>
<div><div id="highlighter_65419" class="syntaxhighlighter coolshell_syntaxhighlighter jscript"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="jscript keyword">function</code>&nbsp;<code class="jscript plain">say667()&nbsp;{</code></div><div class="line number2 index1 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript comments">//&nbsp;Local&nbsp;variable&nbsp;that&nbsp;ends&nbsp;up&nbsp;within&nbsp;closure</code></div><div class="line number3 index2 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">num&nbsp;= 666;</code></div><div class="line number4 index3 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">sayAlert&nbsp;= </code><code class="jscript keyword">function</code><code class="jscript plain">()&nbsp;{ alert(num); }</code></div><div class="line number5 index4 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">num++;</code></div><div class="line number6 index5 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">return</code>&nbsp;<code class="jscript plain">sayAlert;</code></div><div class="line number7 index6 alt2"><code class="jscript plain">}</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="jscript keyword">var</code> <code class="jscript plain">sayAlert = say667();</code></div><div class="line number10 index9 alt1"><code class="jscript plain">sayAlert()</code></div></div></td></tr></tbody></table></div></div>
<p>因此执行结果应该弹出的667而非666。</p>
<p><strong>例子2：多个函数绑定同一个闭包，因为他们定义在同一个函数内。</strong></p>
<div><div id="highlighter_406881" class="syntaxhighlighter coolshell_syntaxhighlighter jscript"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="jscript keyword">function</code>&nbsp;<code class="jscript plain">setupSomeGlobals()&nbsp;{</code></div><div class="line number2 index1 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript comments">//&nbsp;Local&nbsp;variable&nbsp;that&nbsp;ends&nbsp;up&nbsp;within&nbsp;closure</code></div><div class="line number3 index2 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">num&nbsp;= 666;</code></div><div class="line number4 index3 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript comments">//&nbsp;Store&nbsp;some&nbsp;references&nbsp;to&nbsp;functions&nbsp;as&nbsp;global&nbsp;variables</code></div><div class="line number5 index4 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">gAlertNumber&nbsp;= </code><code class="jscript keyword">function</code><code class="jscript plain">()&nbsp;{ alert(num); }</code></div><div class="line number6 index5 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">gIncreaseNumber&nbsp;= </code><code class="jscript keyword">function</code><code class="jscript plain">()&nbsp;{ num++; }</code></div><div class="line number7 index6 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">gSetNumber&nbsp;= </code><code class="jscript keyword">function</code><code class="jscript plain">(x)&nbsp;{ num&nbsp;= x; }</code></div><div class="line number8 index7 alt1"><code class="jscript plain">}</code></div><div class="line number9 index8 alt2"><code class="jscript plain">setupSomeGlobals(); </code><code class="jscript comments">// 为三个全局变量赋值</code></div><div class="line number10 index9 alt1"><code class="jscript plain">gAlertNumber(); </code><code class="jscript comments">//666</code></div><div class="line number11 index10 alt2"><code class="jscript plain">gIncreaseNumber();</code></div><div class="line number12 index11 alt1"><code class="jscript plain">gAlertNumber(); </code><code class="jscript comments">// 667</code></div><div class="line number13 index12 alt2"><code class="jscript plain">gSetNumber(12);</code><code class="jscript comments">//</code></div><div class="line number14 index13 alt1"><code class="jscript plain">gAlertNumber();</code><code class="jscript comments">//12</code></div></div></td></tr></tbody></table></div></div>
<p><strong>例子3：当在一个循环中赋值函数时，这些函数将绑定同样的闭包</strong></p>
<div><div id="highlighter_856270" class="syntaxhighlighter coolshell_syntaxhighlighter jscript"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="jscript keyword">function</code>&nbsp;<code class="jscript plain">buildList(list)&nbsp;{</code></div><div class="line number2 index1 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">result&nbsp;=&nbsp;[];</code></div><div class="line number3 index2 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">for</code>&nbsp;<code class="jscript plain">(</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;list.length;&nbsp;i++)&nbsp;{</code></div><div class="line number4 index3 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">item&nbsp;=&nbsp;</code><code class="jscript string">'item'</code>&nbsp;<code class="jscript plain">+&nbsp;list[i];</code></div><div class="line number5 index4 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">result.push(&nbsp;</code><code class="jscript keyword">function</code><code class="jscript plain">()&nbsp;{alert(item&nbsp;+&nbsp;</code><code class="jscript string">'&nbsp;'</code>&nbsp;<code class="jscript plain">+&nbsp;list[i])}&nbsp;);</code></div><div class="line number6 index5 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">}</code></div><div class="line number7 index6 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">return</code>&nbsp;<code class="jscript plain">result;</code></div><div class="line number8 index7 alt1"><code class="jscript plain">}</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="jscript keyword">function</code>&nbsp;<code class="jscript plain">testList()&nbsp;{</code></div><div class="line number11 index10 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">fnlist&nbsp;=&nbsp;buildList([1,2,3]);</code></div><div class="line number12 index11 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript comments">//&nbsp;using&nbsp;j&nbsp;only&nbsp;to&nbsp;help&nbsp;prevent&nbsp;confusion&nbsp;-&nbsp;could&nbsp;use&nbsp;i</code></div><div class="line number13 index12 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">for</code>&nbsp;<code class="jscript plain">(</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">j&nbsp;=&nbsp;0;&nbsp;j&nbsp;&lt;&nbsp;fnlist.length;&nbsp;j++)&nbsp;{</code></div><div class="line number14 index13 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">fnlist[j]();</code></div><div class="line number15 index14 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">}</code></div><div class="line number16 index15 alt1"><code class="jscript plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>testList的执行结果是弹出item3 undefined窗口三次，因为这三个函数绑定了同一个闭包，而且item的值为最后计算的结果，但是当i跳出循环时i值为4，所以list[4]的结果为undefined.</p>
<p><strong>例子4：外部函数所有局部变量都在闭包内，即使这个变量声明在内部函数定义之后。</strong></p>
<div><div id="highlighter_592754" class="syntaxhighlighter coolshell_syntaxhighlighter jscript"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="jscript keyword">function</code>&nbsp;<code class="jscript plain">sayAlice()&nbsp;{</code></div><div class="line number2 index1 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">sayAlert&nbsp;= </code><code class="jscript keyword">function</code><code class="jscript plain">()&nbsp;{ alert(alice); }</code></div><div class="line number3 index2 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript comments">//&nbsp;Local&nbsp;variable&nbsp;that&nbsp;ends&nbsp;up&nbsp;within&nbsp;closure</code></div><div class="line number4 index3 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">alice&nbsp;= </code><code class="jscript string">'Hello Alice'</code><code class="jscript plain">;</code></div><div class="line number5 index4 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">return</code>&nbsp;<code class="jscript plain">sayAlert;</code></div><div class="line number6 index5 alt1"><code class="jscript plain">}</code></div><div class="line number7 index6 alt2"><code class="jscript keyword">var</code> <code class="jscript plain">helloAlice=sayAlice();</code></div><div class="line number8 index7 alt1"><code class="jscript plain">helloAlice();</code></div></div></td></tr></tbody></table></div></div>
<p>执行结果是弹出”Hello Alice”的窗口。即使局部变量声明在函数sayAlert之后，局部变量仍然可以被访问到。</p>
<p><strong>例子5：每次函数调用的时候创建一个新的闭包</strong></p>
<div><div id="highlighter_430128" class="syntaxhighlighter coolshell_syntaxhighlighter jscript"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="jscript keyword">function</code>&nbsp;<code class="jscript plain">newClosure(someNum,&nbsp;someRef)&nbsp;{</code></div><div class="line number2 index1 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript comments">//&nbsp;Local&nbsp;variables&nbsp;that&nbsp;end&nbsp;up&nbsp;within&nbsp;closure</code></div><div class="line number3 index2 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">num&nbsp;= someNum;</code></div><div class="line number4 index3 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">anArray&nbsp;= [1,2,3];</code></div><div class="line number5 index4 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code>&nbsp;<code class="jscript plain">ref&nbsp;= someRef;</code></div><div class="line number6 index5 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">return</code> <code class="jscript keyword">function</code><code class="jscript plain">(x)&nbsp;{</code></div><div class="line number7 index6 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">num += x;</code></div><div class="line number8 index7 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">anArray.push(num);</code></div><div class="line number9 index8 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">alert(</code><code class="jscript string">'num:&nbsp;'</code>&nbsp;<code class="jscript plain">+ num&nbsp;+</code></div><div class="line number10 index9 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript string">'\nanArray&nbsp;'</code>&nbsp;<code class="jscript plain">+ anArray.toString()&nbsp;+</code></div><div class="line number11 index10 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript string">'\nref.someVar&nbsp;'</code>&nbsp;<code class="jscript plain">+ ref.someVar);</code></div><div class="line number12 index11 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">}</code></div><div class="line number13 index12 alt2"><code class="jscript plain">}</code></div><div class="line number14 index13 alt1"><code class="jscript plain">closure1=newClosure(40,{someVar:</code><code class="jscript string">'closure 1'</code><code class="jscript plain">});</code></div><div class="line number15 index14 alt2"><code class="jscript plain">closure2=newClosure(1000,{someVar:</code><code class="jscript string">'closure 2'</code><code class="jscript plain">});</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="jscript plain">closure1(5); </code><code class="jscript comments">// num:45 anArray[1,2,3,45] ref:'someVar closure1'</code></div><div class="line number18 index17 alt1"><code class="jscript plain">closure2(-10);</code><code class="jscript comments">// num:990 anArray[1,2,3,990] ref:'someVar closure2'</code></div></div></td></tr></tbody></table></div></div>
<h4><strong><span style="color: #008000">闭包的应用</span></strong></h4>
<p><strong>Singleton 单件：</strong></p>
<div><div id="highlighter_652028" class="syntaxhighlighter coolshell_syntaxhighlighter jscript"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="jscript keyword">var</code> <code class="jscript plain">singleton = </code><code class="jscript keyword">function</code> <code class="jscript plain">() {</code></div><div class="line number2 index1 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">var</code> <code class="jscript plain">privateVariable;</code></div><div class="line number3 index2 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">function</code> <code class="jscript plain">privateFunction(x) {</code></div><div class="line number4 index3 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">...privateVariable...</code></div><div class="line number5 index4 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">}</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript keyword">return</code> <code class="jscript plain">{</code></div><div class="line number8 index7 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">firstMethod: </code><code class="jscript keyword">function</code> <code class="jscript plain">(a, b) {</code></div><div class="line number9 index8 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">...privateVariable...</code></div><div class="line number10 index9 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">},</code></div><div class="line number11 index10 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">secondMethod: </code><code class="jscript keyword">function</code> <code class="jscript plain">(c) {</code></div><div class="line number12 index11 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">...privateFunction()...</code></div><div class="line number13 index12 alt2"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">}</code></div><div class="line number14 index13 alt1"><code class="jscript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="jscript plain">};</code></div><div class="line number15 index14 alt2"><code class="jscript plain">}();</code></div></div></td></tr></tbody></table></div></div>
<p>这个单件通过闭包来实现。通过闭包完成了私有的成员和方法的封装。匿名主函数返回一个对象。对象包含了两个方法，方法1可以方法私有变量，方法2访问内部私有函数。需要注意的地方是匿名主函数结束的地方的'()’，如果没有这个'()’就不能产生单件。因为匿名函数只能返回了唯一的对象，而且不能被其他地方调用。这个就是利用闭包产生单件的方法。</p>
<h2><strong><span style="color: #008000">参考：</span></strong></h2>
<p><a href="http://blog.morrisjohns.com/javascript_closures_for_dummies.html">JavaScript Closures For Dummies(</a><a href="http://web.archive.org/web/20080209105120/http://blog.morrisjohns.com/javascript_closures_for_dummies">镜像</a><a href="http://blog.morrisjohns.com/javascript_closures_for_dummies.html">)</a> 可惜都被墙了。<br>
<a href="http://yuiblog.com/blog/2006/11/27/video-crockford-advjs/">Advance Javascript</a> （Douglas Crockford 大神的视频，一定要看啊）
</p><div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="http://coolshell.cn/">酷 壳 – CoolShell.cn</a> ，请勿用于任何商业用途）</strong></p></div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="http://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div style="clear:both; margin-top:5px; margin-bottom:5px;"></div><div style="float:left"><!-- JiaThis Button BEGIN -->
<div class="jiathis_style">
<a class="jiathis_button_tsina" title="分享到新浪微博"><span class="jiathis_txt jtico jtico_tsina"></span></a>
<a class="jiathis_button_tqq" title="分享到腾讯微博"><span class="jiathis_txt jtico jtico_tqq"></span></a>
<a class="jiathis_button_tsohu" title="分享到搜狐微博"><span class="jiathis_txt jtico jtico_tsohu"></span></a>
<a class="jiathis_button_t163" title="分享到网易微博"><span class="jiathis_txt jtico jtico_t163"></span></a>
<a class="jiathis_button_douban" title="分享到豆瓣"><span class="jiathis_txt jtico jtico_douban"></span></a>
<a class="jiathis_button_renren" title="分享到人人网"><span class="jiathis_txt jtico jtico_renren"></span></a>
<a class="jiathis_button_zhuaxia"></a>
<a class="jiathis_button_fanfou" title="分享到饭否"><span class="jiathis_txt jtico jtico_fanfou"></span></a>
<a class="jiathis_button_twitter" title="分享到Twitter"><span class="jiathis_txt jtico jtico_twitter"></span></a>
<a class="jiathis_button_fb" title="分享到Facebook"><span class="jiathis_txt jtico jtico_fb"></span></a>
<a class="jiathis_button_gmail" title="分享到Gmail邮箱"><span class="jiathis_txt jtico jtico_gmail"></span></a>
<a class="jiathis_button_linkedin" title="分享到LinkedIn"><span class="jiathis_txt jtico jtico_linkedin"></span></a>
<a class="jiathis_button_friendfeed" title="分享到FriendFeed"><span class="jiathis_txt jtico jtico_friendfeed"></span></a>
<a class="jiathis_button_digg" title="分享到Digg"><span class="jiathis_txt jtico jtico_digg"></span></a>
<a href="http://www.jiathis.com/share?uid=1541368" class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" target="_blank"></a>
<a class="jiathis_counter_style"><span class="jiathis_button_expanded jiathis_counter jiathis_bubble_style" id="jiathis_counter_42" title="累计分享46次">46</span></a>
</div>
<script type="text/javascript">
var jiathis_config={
	data_track_clickback:true,
	summary:"",
	hideMore:false
}
</script>
<script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/jia.js" charset="utf-8"></script>
<!-- JiaThis Button END --></div><div style="clear:both; margin-top:5px; margin-bottom:5px;"></div>			<div class="fixed"></div>
		</div>
		<div class="under">
			<span class="categories">分类: </span><span><a href="http://coolshell.cn/category/proglanguage/webdev" rel="category tag">Web开发</a>, <a href="http://coolshell.cn/category/proglanguage" rel="category tag">编程语言</a></span>			<span class="tags">标签: </span><span><a href="http://coolshell.cn/tag/ecmascript" rel="tag">ECMAScript</a>, <a href="http://coolshell.cn/tag/javascript" rel="tag">Javascript</a>, <a href="http://coolshell.cn/tag/oop" rel="tag">OOP</a></span>		</div>
<div id="post-ratings-6731" class="post-ratings" itemscope="" itemtype="http://schema.org/Article" data-nonce="f8f30d4b4b"><img id="rating_6731_1" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/rating_on.gif" alt="好烂啊" title="好烂啊" onmouseover="current_rating(6731, 1, &#39;好烂啊&#39;);" onmouseout="ratings_off(5, 0, 0);" onclick="rate_post();" onkeypress="rate_post();" style="cursor: pointer; border: 0px;"><img id="rating_6731_2" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/rating_on.gif" alt="有点差" title="有点差" onmouseover="current_rating(6731, 2, &#39;有点差&#39;);" onmouseout="ratings_off(5, 0, 0);" onclick="rate_post();" onkeypress="rate_post();" style="cursor: pointer; border: 0px;"><img id="rating_6731_3" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/rating_on.gif" alt="凑合看看" title="凑合看看" onmouseover="current_rating(6731, 3, &#39;凑合看看&#39;);" onmouseout="ratings_off(5, 0, 0);" onclick="rate_post();" onkeypress="rate_post();" style="cursor: pointer; border: 0px;"><img id="rating_6731_4" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/rating_on.gif" alt="还不错" title="还不错" onmouseover="current_rating(6731, 4, &#39;还不错&#39;);" onmouseout="ratings_off(5, 0, 0);" onclick="rate_post();" onkeypress="rate_post();" style="cursor: pointer; border: 0px;"><img id="rating_6731_5" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/rating_on.gif" alt="很精彩" title="很精彩" onmouseover="current_rating(6731, 5, &#39;很精彩&#39;);" onmouseout="ratings_off(5, 0, 0);" onclick="rate_post();" onkeypress="rate_post();" style="cursor: pointer; border: 0px;"> (<strong>13</strong> 人打了分，平均分： <strong>5.00</strong> )<br><span class="post-ratings-text" id="ratings_6731_text"></span><meta itemprop="name" content="理解Javascript的闭包"><meta itemprop="description" content="【感谢 Neo 投递本文 - 微博帐号：_锟_ 】

前言：还是一篇入门文章。Javascript中有几个非常重要的语言特性——对象、原型继承、闭包。其中闭包对于那些使用传统静态语言C/C++的程序员来说是一个新的语言特性。本文将以例子入手来介绍Javascript闭包的语言特性，并结合一点ECMAScript语言规范来使读者可以更深入的理解闭包。

注：本文是入门文章，例子素材整理于网络..."><meta itemprop="url" content="http://coolshell.cn/articles/6731.html"><div style="display: none;" itemprop="aggregateRating" itemscope="" itemtype="http://schema.org/AggregateRating"><meta itemprop="bestRating" content="5"><meta itemprop="ratingValue" content="5"><meta itemprop="ratingCount" content="13"></div></div><div id="post-ratings-6731-loading" class="post-ratings-loading">
			<img src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/loading.gif" width="16" height="16" alt="Loading..." title="Loading..." class="post-ratings-image">Loading...</div> 
	</div>

	<!-- related posts START -->
	<div id="related_posts">
<div class="wp_rp_wrap  wp_rp_plain" id="wp_rp_first"><div class="wp_rp_content"><h3 class="related_post_title">相关文章</h3><ul class="related_post wp_rp"><li data-position="0" data-poid="in-6668" data-post-type="none"><small class="wp_rp_publish_date">2012年02月27日</small> <a href="http://coolshell.cn/articles/6668.html" class="wp_rp_title">再谈javascript面向对象编程 </a></li><li data-position="1" data-poid="in-6441" data-post-type="none"><small class="wp_rp_publish_date">2012年01月09日</small> <a href="http://coolshell.cn/articles/6441.html" class="wp_rp_title">Javascript 面向对象编程</a></li><li data-position="2" data-poid="in-7480" data-post-type="none"><small class="wp_rp_publish_date">2012年05月24日</small> <a href="http://coolshell.cn/articles/7480.html" class="wp_rp_title">Javascript 中的 var</a></li><li data-position="3" data-poid="in-8745" data-post-type="none"><small class="wp_rp_publish_date">2012年12月13日</small> <a href="http://coolshell.cn/articles/8745.html" class="wp_rp_title">如此理解面向对象编程</a></li><li data-position="4" data-poid="in-5202" data-post-type="none"><small class="wp_rp_publish_date">2011年08月15日</small> <a href="http://coolshell.cn/articles/5202.html" class="wp_rp_title">对象的消息模型</a></li><li data-position="5" data-poid="in-5035" data-post-type="none"><small class="wp_rp_publish_date">2011年07月21日</small> <a href="http://coolshell.cn/articles/5035.html" class="wp_rp_title">面向对象的Shell脚本</a></li><li data-position="6" data-poid="in-6913" data-post-type="none"><small class="wp_rp_publish_date">2012年03月24日</small> <a href="http://coolshell.cn/articles/6913.html" class="wp_rp_title">神奇的CSS形状 </a></li><li data-position="7" data-poid="in-8170" data-post-type="none"><small class="wp_rp_publish_date">2012年08月27日</small> <a href="http://coolshell.cn/articles/8170.html" class="wp_rp_title">一次Ajax查错的经历</a></li></ul></div></div>
</div><div class="fixed"></div>	<!-- related posts END -->

	<script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/comment.js"></script>



<div id="comments">

<div id="cmtswitcher">
			<a id="commenttab" class="curtab" href="javascript:void(0);" onclick="MGJS.switchTab(&#39;thecomments,commentnavi&#39;, &#39;thetrackbacks&#39;, &#39;commenttab&#39;, &#39;curtab&#39;, &#39;trackbacktab&#39;, &#39;tab&#39;);">评论 (52)</a>
		<a id="trackbacktab" class="tab" href="javascript:void(0);" onclick="MGJS.switchTab(&#39;thetrackbacks&#39;, &#39;thecomments,commentnavi&#39;, &#39;trackbacktab&#39;, &#39;curtab&#39;, &#39;commenttab&#39;, &#39;tab&#39;);">Trackbacks (24)</a>
				<span class="addcomment"><a href="http://coolshell.cn/articles/6731.html#respond">发表评论</a></span>
				<span class="addtrackback"><a href="http://coolshell.cn/articles/6731.html/trackback">Trackback</a></span>
		<div class="fixed"></div>
</div>

<div id="commentlist">
	<!-- comments START -->
	<ol id="thecomments">
		<li class="comment regularcomment" id="comment-143275">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/f880d5003adfa9894032df3a532690b3" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143275">
				
				pezy
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日08:55					 | <a href="http://coolshell.cn/articles/6731.html#comment-143275">#1</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143275&#39;, &#39;comment-143275&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143275&#39;, &#39;comment-143275&#39;, &#39;commentbody-143275&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143275">
					<p>这几个例子的确不错。</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143281">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/1885ebd1e8c287b20a8c3956177989ff" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-143281" class="url" href="http://xg1988.net/" rel="external nofollow">
				
				浮云漂海
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日09:12					 | <a href="http://coolshell.cn/articles/6731.html#comment-143281">#2</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143281&#39;, &#39;comment-143281&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143281&#39;, &#39;comment-143281&#39;, &#39;commentbody-143281&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143281">
					<p>学习了。。。</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143283">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/800895d28db3a77b6ee802e6c0a26a5f" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143283">
				
				sein_tao
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日09:16					 | <a href="http://coolshell.cn/articles/6731.html#comment-143283">#3</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143283&#39;, &#39;comment-143283&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143283&#39;, &#39;comment-143283&#39;, &#39;commentbody-143283&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143283">
					<p>JS的闭包很特别， 跟perl/lisp里面的都不一样。可以讲讲动态语言中的closure与静态语言中的static变量/函数的区别不？</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143284">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/12d2e747dd8baf15d5db3292edfe1477" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-143284" class="url" href="http://www.wizardmin.com/" rel="external nofollow">
				
				wizardmin
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日09:18					 | <a href="http://coolshell.cn/articles/6731.html#comment-143284">#4</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143284&#39;, &#39;comment-143284&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143284&#39;, &#39;comment-143284&#39;, &#39;commentbody-143284&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143284">
					<p>闭包解释通俗易懂，mark</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143287">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/c97bfe06ea37814274d0a24d64f242f3" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143287">
				
				miniflycn
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日09:37					 | <a href="http://coolshell.cn/articles/6731.html#comment-143287">#5</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143287&#39;, &#39;comment-143287&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143287&#39;, &#39;comment-143287&#39;, &#39;commentbody-143287&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143287">
					<p>= =这例子2能运行？！</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143288">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/86bc86fe9f0fd97058a39f061fa431b9" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143288">
				
				mokong
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日09:42					 | <a href="http://coolshell.cn/articles/6731.html#comment-143288">#6</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143288&#39;, &#39;comment-143288&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143288&#39;, &#39;comment-143288&#39;, &#39;commentbody-143288&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143288">
					<p>楼上说的是这句 “setupSomeGolbals();” // 为三个全局变量赋值  这个单词 global 拼错了而已</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

<ul class="children">
	<li class="comment admincomment" id="comment-143411">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/adbd7d1f9ec55c6accf6e2a41b5a919a" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143411">
				
				Neo
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日22:14					 | <a href="http://coolshell.cn/articles/6731.html#comment-143411">#7</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143411&#39;, &#39;comment-143411&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143411&#39;, &#39;comment-143411&#39;, &#39;commentbody-143411&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143411">
					<p>已经修改了，多谢</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143291">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/9a28150e32fdd33e7c4e470974e335eb" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143291">
				
				jslhcl
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日10:09					 | <a href="http://coolshell.cn/articles/6731.html#comment-143291">#8</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143291&#39;, &#39;comment-143291&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143291&#39;, &#39;comment-143291&#39;, &#39;commentbody-143291&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143291">
					<p>The Lexical Environment 还是翻译成“词法环境”好一点</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143292">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/9e5fa9c06b6d68ab49cc27f5ea90d565" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143292">
				
				lltg
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日10:14					 | <a href="http://coolshell.cn/articles/6731.html#comment-143292">#9</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143292&#39;, &#39;comment-143292&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143292&#39;, &#39;comment-143292&#39;, &#39;commentbody-143292&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143292">
					<p>个人感觉，其实单例我用到的并不多，反而闭包一个很有用的地方是回调函数，尤其是Ajax回调之类。</p>
<p>比如我们有一个联系人列表，然后现在要用ajax拉取每个人的在线状态显示在人名后面，后端已经固定好了一次只能拉取一个（有时是因为你写的是油猴脚本，后端你根本奈何不得）。<br>
一个for循环对每个人做操作比如<br>
for (i = 0; i &lt; l.length; i++)<br>
l[i].innerHTML += getState(l[i].getAttribute('uid'));<br>
结果会发现把所有人都状态都加到了最后一个人身上……<br>
换闭包<br>
for (i = 0; i &lt; l.length; i++)<br>
(function (p) { p.innerHTML += getState(p.getAttribute('uid')); })(l[i]);<br>
然后就可以了……</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

<ul class="children">
	<li class="comment admincomment" id="comment-143412">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/adbd7d1f9ec55c6accf6e2a41b5a919a" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143412">
				
				Neo
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日22:14					 | <a href="http://coolshell.cn/articles/6731.html#comment-143412">#10</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143412&#39;, &#39;comment-143412&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143412&#39;, &#39;comment-143412&#39;, &#39;commentbody-143412&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143412">
					<p>不错。</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143293">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/a1467ad38d98ea6b351a5f679655d291" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143293">
				
				INNOCENT
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日10:19					 | <a href="http://coolshell.cn/articles/6731.html#comment-143293">#11</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143293&#39;, &#39;comment-143293&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143293&#39;, &#39;comment-143293&#39;, &#39;commentbody-143293&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143293">
					<p>1) 静态语言也可以有闭包。google Go有，就连GNU C也有。<br>
2) 闭包的栈帧不一定要分配在堆上。放在栈上然后到处拷贝也是可以的。<br>
3) 在我看来，闭包就是函数返回之后没销毁的栈帧——其死期被拉长到闭包销毁时。<br>
以上均是对“什么是闭包”的一点看法，我不懂javascript :)</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143295">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/1f1c4ee90b10be8f3fa6dfa6374c171a" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-143295" class="url" href="http://www.pn138.com/" rel="external nofollow">
				
				中国普宁服装网
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日10:22					 | <a href="http://coolshell.cn/articles/6731.html#comment-143295">#12</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143295&#39;, &#39;comment-143295&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143295&#39;, &#39;comment-143295&#39;, &#39;commentbody-143295&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143295">
					<p>一些看不懂的英文。</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143330">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/1735a463757bad40edb037a4e2cc53ea" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143330">
				
				吕子熏
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日13:35					 | <a href="http://coolshell.cn/articles/6731.html#comment-143330">#13</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143330&#39;, &#39;comment-143330&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143330&#39;, &#39;comment-143330&#39;, &#39;commentbody-143330&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143330">
					<p>不用传入user_data，直接访问局部变量， 闭包在处理回调上确实是神器。 ：）</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143331">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/16a0a929f6ee3b53bad04e694f9f2b21" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-143331" class="url" href="http://pengqi.me/" rel="external nofollow">
				
				Perry
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日13:55					 | <a href="http://coolshell.cn/articles/6731.html#comment-143331">#14</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143331&#39;, &#39;comment-143331&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143331&#39;, &#39;comment-143331&#39;, &#39;commentbody-143331&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143331">
					<p>我觉得第三个例子的解释可能有点问题，数组里的闭包应该是不同的，但是闭包里访问的item变量却是一样的，都是最后一次循环里的那个item</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143339">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/8c99741a73eb5501622249fe5b63aa6c" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143339">
				
				Jan
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日14:53					 | <a href="http://coolshell.cn/articles/6731.html#comment-143339">#15</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143339&#39;, &#39;comment-143339&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143339&#39;, &#39;comment-143339&#39;, &#39;commentbody-143339&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143339">
					<p>关于例子4，要表达的并非闭包问题，主要是JS的解释代码过程存在的问题。<br>
其实就是<br>
function sayAlice() {<br>
    var sayAlert = function() { alert(alice); }<br>
    // Local variable that ends up within closure<br>
    return sayAlert;<br>
}<br>
var helloAlice=sayAlice();<br>
var alice = ‘Hello Alice';<br>
helloAlice();  // Hello Alice</p>
<p>和 </p>
<p>function sayAlice() {<br>
    var sayAlert = function() { alert(alice); }<br>
    // Local variable that ends up within closure<br>
    return sayAlert;<br>
}<br>
var helloAlice=sayAlice();<br>
helloAlice();  // undefined<br>
var alice = ‘Hello Alice';</p>
<p>的差异。</p>
<p>JS在解释代码时，会把变量的定义提升到代码的“最顶”。<br>
实际效果如下：<br>
var alice；<br>
function sayAlice() {<br>
    var sayAlert = function() { alert(alice); }<br>
    // Local variable that ends up within closure<br>
    return sayAlert;<br>
}<br>
var helloAlice=sayAlice();<br>
helloAlice();  // undefined<br>
alice = ‘Hello Alice';</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143344">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/3455c29aa1d2c6dc9f24be6e7bed9778" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143344">
				
				慵懒de土豆
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日15:08					 | <a href="http://coolshell.cn/articles/6731.html#comment-143344">#16</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143344&#39;, &#39;comment-143344&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143344&#39;, &#39;comment-143344&#39;, &#39;commentbody-143344&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143344">
					<p>问个很菜鸟的问题，第2个例子，为啥那3个变量，不需要 var 定义？</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143346">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/3455c29aa1d2c6dc9f24be6e7bed9778" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143346">
				
				慵懒de土豆
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月7日15:13					 | <a href="http://coolshell.cn/articles/6731.html#comment-143346">#17</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143346&#39;, &#39;comment-143346&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143346&#39;, &#39;comment-143346&#39;, &#39;commentbody-143346&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143346">
					<p>哦，懂了。要定义成全局变量！！！</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143547">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/596ebbf4af606117f877832d31d04bcc" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-143547" class="url" href="http://www.kder.info/" rel="external nofollow">
				
				Kder
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月8日11:36					 | <a href="http://coolshell.cn/articles/6731.html#comment-143547">#18</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143547&#39;, &#39;comment-143547&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143547&#39;, &#39;comment-143547&#39;, &#39;commentbody-143547&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143547">
					<p>第3个例子：“当i跳出循环时i值为4”，跳出循环时i不应该是3吗？</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143586">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/ca11070a9dd2caf03382f6c12ca4d193" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-143586">
				
				Liam
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月8日16:24					 | <a href="http://coolshell.cn/articles/6731.html#comment-143586">#19</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143586&#39;, &#39;comment-143586&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143586&#39;, &#39;comment-143586&#39;, &#39;commentbody-143586&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143586">
					<p><a href="http://coolshell.cn/articles/6731.html#comment-143547" rel="nofollow">@Kder </a><br>
因为 i++ 了</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-143777">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/892549b8393319f3d20405a79b7ccc1a" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-143777" class="url" href="http://blog.qianshu.me/" rel="external nofollow">
				
				前叔
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月9日12:38					 | <a href="http://coolshell.cn/articles/6731.html#comment-143777">#20</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-143777&#39;, &#39;comment-143777&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-143777&#39;, &#39;comment-143777&#39;, &#39;commentbody-143777&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-143777">
					<p>我感觉你闭包的最后一个定义有点问题，应该是函数内部定义的函数被外部变量引用了，才会引起闭包</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-144287">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/14c2da01e4d2f6a1be3eca152f303e86" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-144287">
				
				haha
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月12日10:42					 | <a href="http://coolshell.cn/articles/6731.html#comment-144287">#21</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-144287&#39;, &#39;comment-144287&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-144287&#39;, &#39;comment-144287&#39;, &#39;commentbody-144287&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-144287">
					<p>第3个例子有点问题，i的值应该是3</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-144334">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/b58476a349c0769d4dcfb1b708331f00" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-144334" class="url" href="http://www.zhongming.name/" rel="external nofollow">
				
				Mingo
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月12日14:40					 | <a href="http://coolshell.cn/articles/6731.html#comment-144334">#22</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-144334&#39;, &#39;comment-144334&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-144334&#39;, &#39;comment-144334&#39;, &#39;commentbody-144334&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-144334">
					<p><a href="http://coolshell.cn/articles/6731.html#comment-143344" rel="nofollow">@慵懒de土豆  </a><br>
JS中 var 是可以省略的。</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-144338">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/fa2ddf6c4ae718b2c3b9eacbc7f5c673" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-144338" class="url" href="http://my.opera.com/jlake/blog/" rel="external nofollow">
				
				jlake
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月12日15:01					 | <a href="http://coolshell.cn/articles/6731.html#comment-144338">#23</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-144338&#39;, &#39;comment-144338&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-144338&#39;, &#39;comment-144338&#39;, &#39;commentbody-144338&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-144338">
					<p>闭包和 JSON 是 javascript 的两大法宝。<br>
Singleton的例子很多时候都要用到。</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-144355">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/f52fd5846044c3f4a1c828120f9365d8" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-144355">
				
				david2003mn
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月12日17:13					 | <a href="http://coolshell.cn/articles/6731.html#comment-144355">#24</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-144355&#39;, &#39;comment-144355&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-144355&#39;, &#39;comment-144355&#39;, &#39;commentbody-144355&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-144355">
					<p>如果闭包用多了会不会造成内存泄漏</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-145015">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/9f4c831da94c1df7d4d7eec4e3badc0d" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-145015">
				
				RonQi
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月13日17:58					 | <a href="http://coolshell.cn/articles/6731.html#comment-145015">#25</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-145015&#39;, &#39;comment-145015&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-145015&#39;, &#39;comment-145015&#39;, &#39;commentbody-145015&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-145015">
					<p>文中“例子2：多个函数绑定同一个闭包，因为他们定义在同一个函数内。”<br>
请问为什么是绑定了同一个闭包呢？三个全局函数对应的function都不一样吧，不知道这里的“闭包”具体指的是什么？是“gAlertNumber ”等三个全局变量，还是对应三个匿名函数？</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

<ul class="children">
	<li class="comment admincomment" id="comment-145071">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/adbd7d1f9ec55c6accf6e2a41b5a919a" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-145071">
				
				Neo
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月13日22:21					 | <a href="http://coolshell.cn/articles/6731.html#comment-145071">#26</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-145071&#39;, &#39;comment-145071&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-145071&#39;, &#39;comment-145071&#39;, &#39;commentbody-145071&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-145071">
					<p>因为这三个函数都在同一个外部函数中定义，所以这三个函数的指向的执行上下文环境是一样的。所以三个函数共享使用外部函数定义的局部变量num</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-145217">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/7bece03861bfc397b3addf13bd585295" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-145217">
				
				null
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月14日10:36					 | <a href="http://coolshell.cn/articles/6731.html#comment-145217">#27</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-145217&#39;, &#39;comment-145217&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-145217&#39;, &#39;comment-145217&#39;, &#39;commentbody-145217&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-145217">
					<p>弱问一句：闭包有啥用？</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-145623">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/9799328535a539e78a1b4793e19e05c4" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-145623" class="url" href="http://t.qq.com/duxing" rel="external nofollow">
				
				dodo
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月15日16:50					 | <a href="http://coolshell.cn/articles/6731.html#comment-145623">#28</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-145623&#39;, &#39;comment-145623&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-145623&#39;, &#39;comment-145623&#39;, &#39;commentbody-145623&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-145623">
					<p>可以把外层函数理解成一个类，变量理解为静态成员，内部函数是成员方法。使用时是初始化一个对象~</p>
<p>这样就更便于理解了。</p>
<p>大师兄，我说的对吗？</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-145891">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/ac3e15e8c4eef4951dd98c41f91e7ab6" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-145891" class="url" href="http://bedook.qiaobj.com/" rel="external nofollow">
				
				比度克官网
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月16日10:44					 | <a href="http://coolshell.cn/articles/6731.html#comment-145891">#29</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-145891&#39;, &#39;comment-145891&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-145891&#39;, &#39;comment-145891&#39;, &#39;commentbody-145891&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-145891">
					<p>真是不错啊!  支持一下</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-146016">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/8daeb50d85294af8e56f7c73d3e2b9ea" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-146016">
				
				lilyH
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月16日17:58					 | <a href="http://coolshell.cn/articles/6731.html#comment-146016">#30</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-146016&#39;, &#39;comment-146016&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-146016&#39;, &#39;comment-146016&#39;, &#39;commentbody-146016&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-146016">
					<p>又对js有了了解，感谢</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-147721">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/48d1308cf76624c21ef5f5a77d8ec7b9" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-147721">
				
				zhaoyou
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月21日09:36					 | <a href="http://coolshell.cn/articles/6731.html#comment-147721">#31</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-147721&#39;, &#39;comment-147721&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-147721&#39;, &#39;comment-147721&#39;, &#39;commentbody-147721&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-147721">
					<p>闭包的样列 =》第２个例子，最好不要列出来，这样会误导很多青年！</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-148576">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/e3069e76ce04ed1d34bdd0caaf9bb3a3" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-148576" class="url" href="http://adoralab.com/" rel="external nofollow">
				
				adora
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月23日22:36					 | <a href="http://coolshell.cn/articles/6731.html#comment-148576">#32</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-148576&#39;, &#39;comment-148576&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-148576&#39;, &#39;comment-148576&#39;, &#39;commentbody-148576&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-148576">
					<p>谢谢，终于对闭包有了点感性的认识！</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-148641">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/596ebbf4af606117f877832d31d04bcc" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-148641" class="url" href="http://www.kder.info/" rel="external nofollow">
				
				Kder
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月24日01:50					 | <a href="http://coolshell.cn/articles/6731.html#comment-148641">#33</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-148641&#39;, &#39;comment-148641&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-148641&#39;, &#39;comment-148641&#39;, &#39;commentbody-148641&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-148641">
					<p><a href="http://coolshell.cn/articles/6731.html#comment-143586" rel="nofollow">@Liam </a><br>
list.length=3，循环条件是 i &lt; list.length，当i=3时就跳出了，后面的i++就不应该执行了啊，我测试了，for循环结束后i值就是3啊</p>
<p>PS：我是新手，希望前辈悉心指教~</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-149212">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/06de5e3b87e89cede67165802b03b47c" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-149212" class="url" href="http://redhacker.iteye.com/" rel="external nofollow">
				
				redhacker
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月25日16:57					 | <a href="http://coolshell.cn/articles/6731.html#comment-149212">#34</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-149212&#39;, &#39;comment-149212&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-149212&#39;, &#39;comment-149212&#39;, &#39;commentbody-149212&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-149212">
					<p>学习了，很好的文章，这是我第一次看JS闭包的文章，说的很清楚。</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-150454">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/e0a7d7447bd6ac70433878d187e83985" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-150454">
				
				flyking
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年3月28日17:58					 | <a href="http://coolshell.cn/articles/6731.html#comment-150454">#35</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-150454&#39;, &#39;comment-150454&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-150454&#39;, &#39;comment-150454&#39;, &#39;commentbody-150454&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-150454">
					<p>谢谢了，写的真好！</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-165594">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/e7e6b0ccaf96fea73c76a1bd6ad49894" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-165594" class="url" href="http://xmuzyq.iteye.com/" rel="external nofollow">
				
				tiger_zhou
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年4月24日00:38					 | <a href="http://coolshell.cn/articles/6731.html#comment-165594">#36</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-165594&#39;, &#39;comment-165594&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-165594&#39;, &#39;comment-165594&#39;, &#39;commentbody-165594&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-165594">
					<p><a href="http://xmuzyq.iteye.com/blog/1198717" rel="nofollow">http://xmuzyq.iteye.com/blog/1198717</a>  我之前也写过一篇文章介绍这个的，各位可以交流下。</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-202074">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/d10ca8d11301c2f4993ac2279ce4b930" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-202074">
				
				JazzCoder
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年8月24日18:33					 | <a href="http://coolshell.cn/articles/6731.html#comment-202074">#37</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-202074&#39;, &#39;comment-202074&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-202074&#39;, &#39;comment-202074&#39;, &#39;commentbody-202074&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-202074">
					<p>大神啊～！</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-206087">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/6ffac8e0adc2b5176f98b8da40f147a6" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-206087">
				
				skywalker
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年10月23日12:08					 | <a href="http://coolshell.cn/articles/6731.html#comment-206087">#38</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-206087&#39;, &#39;comment-206087&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-206087&#39;, &#39;comment-206087&#39;, &#39;commentbody-206087&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-206087">
					<p>作者对闭包的解释有问题，对闭包的创建和销毁机制也没涉及，建议参考Nicholas Zakas写的&lt;&gt;一书中对闭包的剖析。</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-207074">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/91d801333870113f726e379601814b8d" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-207074">
				
				darkhorse
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2012年10月26日16:59					 | <a href="http://coolshell.cn/articles/6731.html#comment-207074">#39</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-207074&#39;, &#39;comment-207074&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-207074&#39;, &#39;comment-207074&#39;, &#39;commentbody-207074&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-207074">
					<p>例子2中函数内部未使用var声明的变量,这个太容易误导入门者了.</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-257443">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/f2e2eadb45298c2f02a6f3a2ab48e7e1" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-257443">
				
				qewewqe
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2013年1月5日18:13					 | <a href="http://coolshell.cn/articles/6731.html#comment-257443">#40</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-257443&#39;, &#39;comment-257443&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-257443&#39;, &#39;comment-257443&#39;, &#39;commentbody-257443&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-257443">
					<p>Sanitizing !</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-286190">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/2c8fe3828680262cad83d40f4c800c64" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-286190">
				
				qqbunny
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2013年2月4日19:28					 | <a href="http://coolshell.cn/articles/6731.html#comment-286190">#41</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-286190&#39;, &#39;comment-286190&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-286190&#39;, &#39;comment-286190&#39;, &#39;commentbody-286190&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-286190">
					<p>var singleton = {}; 是单例的吗？</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-392791">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/0f2308f6e5c388885c629bc77e626e48" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-392791" class="url" href="http://blog.csdn.net/shfqbluestone" rel="external nofollow">
				
				shfqbluestone
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2013年5月8日13:23					 | <a href="http://coolshell.cn/articles/6731.html#comment-392791">#42</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-392791&#39;, &#39;comment-392791&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-392791&#39;, &#39;comment-392791&#39;, &#39;commentbody-392791&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-392791">
					<p>写的真好！赞一个</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-510059">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/6f818b24f57bd104856de23359a6eb1c" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-510059">
				
				new
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2013年5月29日10:28					 | <a href="http://coolshell.cn/articles/6731.html#comment-510059">#43</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-510059&#39;, &#39;comment-510059&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-510059&#39;, &#39;comment-510059&#39;, &#39;commentbody-510059&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-510059">
					<p><a href="http://coolshell.cn/articles/6731.html#comment-143292" rel="nofollow">@lltg </a><br>
结果会发现把所有人都状态都加到了最后一个人身上……</p>
<p>我写了个测试，不用回调不会发生你说的这种情况。我的测试代码</p>
<p>l = document.getElementById(“xx”).rows;	</p>
<p>	for (i = 0; i &lt; l.length; i++) {<br>
		l[i].cells[0].innerHTML += getState(l[i].cells[0].getAttribute('uid'));<br>
	}</p>
<p>	function getState(uid) {<br>
		return "status: " + uid + uid;<br>
	}</p>
<p>显示结果：<br>
status: 11<br>
status: 22<br>
status: 33<br>
status: 44<br>
status: 55</p>
<p>不知道是不是我理解的不对，请指正</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-879452">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/c62b55f17c19deb9c7fe54a2476fdb8b" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-879452">
				
				kabaskimy
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2013年11月4日10:45					 | <a href="http://coolshell.cn/articles/6731.html#comment-879452">#44</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-879452&#39;, &#39;comment-879452&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-879452&#39;, &#39;comment-879452&#39;, &#39;commentbody-879452&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-879452">
					<p>写的不错，但是有几个槽点..<br>
1、第三个例子中的i应该是3，是从0，1，2，3这样变化来的<br>
2、第四个例子其实用javascript的变量声明提前就可以解释了</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-1048787">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/ab6e7e8e044916a3dbf932fb3804eae6" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<a id="commentauthor-1048787" class="url" href="http://www.whospm.com/" rel="external nofollow">
				
				whospm
									</a>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2013年12月9日22:14					 | <a href="http://coolshell.cn/articles/6731.html#comment-1048787">#45</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-1048787&#39;, &#39;comment-1048787&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-1048787&#39;, &#39;comment-1048787&#39;, &#39;commentbody-1048787&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-1048787">
					<p>例子3：当在一个循环中赋值函数时，这些函数将绑定同样的闭包。这个解析应该是错的。<br>
function testSame() {<br>
 var fnlist = buildList([1,2,3]);<br>
 alert(fnlist[0] == fnlist[1]); // 这里会打印 false， 而不是true<br>
}</p>
<p>正确的解释应该是, for循环中的 var item 并没有被重新定义，只是被重新赋值了而已，故循环里面的3个闭包中item的值是一致的。在闭包中打印 Math.random() 即可证明。</p>
<p>function buildList(list) {<br>
    var result = [];<br>
    for (var i = 0; i &lt; list.length; i++) {<br>
        result.push( function() {alert(Math.random())} );<br>
    }<br>
    return result;<br>
}</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-1097458">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/945b09c768b4081c12f809146c71b850" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-1097458">
				
				Tony
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2013年12月24日01:59					 | <a href="http://coolshell.cn/articles/6731.html#comment-1097458">#46</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-1097458&#39;, &#39;comment-1097458&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-1097458&#39;, &#39;comment-1097458&#39;, &#39;commentbody-1097458&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-1097458">
					<p>理解了闭包模型就很容易理解这几个例子了 单件例子是否可以这样理解<br>
var singleton =( function(){ ……;} ) ( ); ?</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-1291503">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/4fd4d3111a4266d2ba172182125bebf0" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-1291503">
				
				yuefeng
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2014年2月20日00:16					 | <a href="http://coolshell.cn/articles/6731.html#comment-1291503">#47</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-1291503&#39;, &#39;comment-1291503&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-1291503&#39;, &#39;comment-1291503&#39;, &#39;commentbody-1291503&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-1291503">
					<p><a href="http://coolshell.cn/articles/6731.html#comment-148641" rel="nofollow">@Kder </a><br>
是的，就是3，但list[3]=undefined。</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-1291505">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/4fd4d3111a4266d2ba172182125bebf0" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-1291505">
				
				yuefeng
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2014年2月20日00:20					 | <a href="http://coolshell.cn/articles/6731.html#comment-1291505">#48</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-1291505&#39;, &#39;comment-1291505&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-1291505&#39;, &#39;comment-1291505&#39;, &#39;commentbody-1291505&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-1291505">
					<p>感谢分享！</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-1367766">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/f026d46cdf885cc34d0854a150d2e04e" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-1367766">
				
				caoshuai
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2014年3月13日10:36					 | <a href="http://coolshell.cn/articles/6731.html#comment-1367766">#49</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-1367766&#39;, &#39;comment-1367766&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-1367766&#39;, &#39;comment-1367766&#39;, &#39;commentbody-1367766&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-1367766">
					<p>老师您好，问您一个菜鸟的问题， 对于您第一个例子sayHello(), 并无法弹出Hello Closure,</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-1407014">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/1b4b68f6f79c213fdad5dd9b4f040d9a" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-1407014">
				
				xwqfudimo
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2014年3月28日17:06					 | <a href="http://coolshell.cn/articles/6731.html#comment-1407014">#50</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-1407014&#39;, &#39;comment-1407014&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-1407014&#39;, &#39;comment-1407014&#39;, &#39;commentbody-1407014&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-1407014">
					<p><a href="http://coolshell.cn/articles/6731.html#comment-145623" rel="nofollow">@dodo </a><br>
照你这个比喻，go语言闭包内的变量不是静态变量，因为不同的闭包实例互不影响。不知道javascript闭包是不是这样…</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-1560198">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/a05a633bf5137f982e9443cffcda2133" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-1560198">
				
				zqhong
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2014年10月1日20:02					 | <a href="http://coolshell.cn/articles/6731.html#comment-1560198">#51</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-1560198&#39;, &#39;comment-1560198&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-1560198&#39;, &#39;comment-1560198&#39;, &#39;commentbody-1560198&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-1560198">
					<p>&gt; 这个单件通过闭包来实现。通过闭包完成了私有的成员和方法的封装。匿名主函数返回一个对象。对象包含了两个方法，方法1可以方法私有变量，方法2访问内部私有函数。需要注意的地方是匿名主函数结束的地方的’()’，如果没有这个’()’就不能产生单件。因为匿名函数只能返回了唯一的对象，而且不能被其他地方调用。这个就是利用闭包产生单件的方法。</p>
<p>最后一段有一个地方写错了.  “方法1可以方法私有变量”    是否是 “方法1可以访问私有变量”?</p>
<p>—————————————–</p>
<p>不知道评论支持markdown不..</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	<li class="comment regularcomment" id="comment-1614485">
		<div class="author">
			<div class="pic">
				<img alt="" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/e0d26bd1606526029fbc7fb181195f73" class="avatar avatar-32 photo" height="32" width="32">			</div>
			<div class="name">
									<span id="commentauthor-1614485">
				
				codezyc
									</span>
							</div>
		</div>

		<div class="info">
			<div class="date">
				2014年11月26日16:47					 | <a href="http://coolshell.cn/articles/6731.html#comment-1614485">#52</a>
			</div>
			<div class="act">
				<a href="javascript:void(0);" onclick="MGJS_CMT.reply(&#39;commentauthor-1614485&#39;, &#39;comment-1614485&#39;, &#39;comment&#39;);">回复</a> | 
				<a href="javascript:void(0);" onclick="MGJS_CMT.quote(&#39;commentauthor-1614485&#39;, &#39;comment-1614485&#39;, &#39;commentbody-1614485&#39;, &#39;comment&#39;);">引用</a>
							</div>
			<div class="fixed"></div>
			<div class="content">
				
				<div id="commentbody-1614485">
					<p>其实dom元素的事件绑定，例如a.onclick=function(){…}是不是也是闭包？</p>
				</div>
			</div>
		</div>
		<div class="fixed"></div>

</li><!-- #comment-## -->
	</ol>
	<!-- comments END -->


	<!-- trackbacks START -->
			<ol id="thetrackbacks">
												<li class="trackback">
						<div class="date">
							2012年3月8日10:52							 | <a href="http://coolshell.cn/articles/6731.html#comment-143535">#1</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://techmimi.51cto.com/index.php?page=1547">
								Techmimi							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2012年3月8日18:49							 | <a href="http://coolshell.cn/articles/6731.html#comment-143611">#2</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://lidashuang.sinaapp.com/2012/03/%e5%86%8d%e8%b0%88javascript%e9%9d%a2%e5%90%91%e5%af%b9%e8%b1%a1%e7%bc%96%e7%a8%8b/">
								Google Reader分享 » 再谈javascript面向对象编程							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2012年3月11日01:10							 | <a href="http://coolshell.cn/articles/6731.html#comment-144074">#3</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://hermit.j.gp/?p=18">
								理解Javascript的闭包 | Hermit科技博客							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2012年3月13日00:50							 | <a href="http://coolshell.cn/articles/6731.html#comment-144414">#4</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://oloveit.com/blog/?p=91">
								理解Javascript的闭包（转） | 行云流水							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2012年4月15日12:11							 | <a href="http://coolshell.cn/articles/6731.html#comment-157676">#5</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://4dcad.vicp.net/?p=104">
								理解Javascript的闭包 | 酷壳 – CoolShell.cn | BIM 4D-CAD Group							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2012年5月25日02:00							 | <a href="http://coolshell.cn/articles/6731.html#comment-195709">#6</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://1.kaiyuanshengshi.sinaapp.com/?p=4884">
								Javascript 中的 var							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2012年5月25日14:18							 | <a href="http://coolshell.cn/articles/6731.html#comment-195726">#7</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://digest.definite.name/the-javascript-in-the-var.html">
								Definite Digest » Javascript 中的 var							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2012年5月25日16:25							 | <a href="http://coolshell.cn/articles/6731.html#comment-195739">#8</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://www.starxy.com/2012/05/25/5149">
								Javascript 中的 var | 星科技							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2012年8月9日00:54							 | <a href="http://coolshell.cn/articles/6731.html#comment-201327">#9</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://xlinblog.sinaapp.com/?p=477">
								奇言妙事-文学奇谈小小说阅读xlinblog.sinaapp.com » Blog Archive » Javascript 中的 var							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2012年9月28日01:20							 | <a href="http://coolshell.cn/articles/6731.html#comment-203148">#10</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://iamhaix.cn/javascript%e5%be%aa%e7%8e%af%e7%bb%91%e5%ae%9a%e5%a4%9a%e4%b8%aa%e4%ba%8b%e4%bb%b6%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88/">
								鸟窝 » JavaScript循环绑定多个事件解决方案							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2013年1月13日17:52							 | <a href="http://coolshell.cn/articles/6731.html#comment-265844">#11</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://icss.me/js-closure.html">
								爱CSS							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2013年5月11日23:42							 | <a href="http://coolshell.cn/articles/6731.html#comment-407732">#12</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://www.w3c.com.cn/%e7%90%86%e8%a7%a3-javascript-%e7%9a%84%e9%97%ad%e5%8c%85">
								理解 Javascript 的闭包 – javascript – 开发者问答							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2013年5月25日15:54							 | <a href="http://coolshell.cn/articles/6731.html#comment-499932">#13</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://www.qsing-wu.com/frond-endinterview/">
								前端的几个面试问题 | 悟云淡风清							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2013年6月18日10:52							 | <a href="http://coolshell.cn/articles/6731.html#comment-555841">#14</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://www.w3c.com.cn/javascript%e9%97%ad%e5%8c%85-3">
								JavaScript闭包 – 编程语言综合 – 开发者第1355110个问答							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2013年7月24日17:21							 | <a href="http://coolshell.cn/articles/6731.html#comment-607344">#15</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://xenojoshua.com/2012/12/javascript-closure/">
								JavaScript闭包 » Xeno Joshua | Xeno Joshua							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2013年8月31日17:37							 | <a href="http://coolshell.cn/articles/6731.html#comment-707285">#16</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://guanmian.net/?p=1908">
								Technology of Heartbeat #14 | Steve Guan							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2013年12月5日00:23							 | <a href="http://coolshell.cn/articles/6731.html#comment-1026977">#17</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://php86.com/2012/23702.html">
								理解Javascript的闭包 – php教程网 – php学习教程分享，为php初学者、php爱好者提供优质的php教程。							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2013年12月30日22:10							 | <a href="http://coolshell.cn/articles/6731.html#comment-1123606">#18</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://malagis.com/google-maps%ef%bc%88js%ef%bc%89%e5%bc%80%e5%8f%91%e5%85%a5%e9%97%a89%ef%bc%9a%e4%ba%8b%e4%bb%b6%e7%9b%91%e5%90%ac%e4%b8%ad%e4%bd%bf%e7%94%a8%e9%97%ad%e5%8c%85.html">
								Google Maps（JS）开发入门(9)：事件监听中使用闭包 | 麻辣GIS							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2014年1月7日02:22							 | <a href="http://coolshell.cn/articles/6731.html#comment-1149632">#19</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="https://tech-easyonline.rhcloud.com/?p=28">
								Javascript 闭包 | Technology							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2014年6月13日18:33							 | <a href="http://coolshell.cn/articles/6731.html#comment-1480770">#20</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://larance.sinaapp.com/?p=189">
								larance 's blog » JavaScript闭包和this绑定							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2014年6月25日11:34							 | <a href="http://coolshell.cn/articles/6731.html#comment-1486359">#21</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://www.web8899.com/web_develop/javascript/485.html">
								JavaScript闭包和this绑定 | WEB终结者							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2014年10月10日12:29							 | <a href="http://coolshell.cn/articles/6731.html#comment-1567678">#22</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://www.ym910.com/wp/?p=19402">
								JavaScript闭包（一）——实现 | 易鸣							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2014年10月11日10:32							 | <a href="http://coolshell.cn/articles/6731.html#comment-1568465">#23</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://www.ym910.com/wp/?p=19532">
								JavaScript闭包（二）——作用 | 易鸣							</a>
						</div>
					</li>
									<li class="trackback">
						<div class="date">
							2014年10月31日11:29							 | <a href="http://coolshell.cn/articles/6731.html#comment-1588719">#24</a>
						</div>
						<div class="act">
													</div>
						<div class="fixed"></div>
						<div class="title">
							<a href="http://www.noblog.cn/8902.html">
								理解Javascript的闭包 – Noblog其他 | Noblog							</a>
						</div>
					</li>
				
					</ol>
		<div class="fixed"></div>
	<!-- trackbacks END -->
</div>

</div>

	<form action="http://coolshell.cn/wp-comments-post.php" method="post" id="commentform">
	<div id="respond">

					
			<div id="author_info">
				<div class="row">
					<input type="text" name="author" id="author" class="textfield" value="" size="24" tabindex="1">
					<label for="author" class="small">昵称 (必填)</label>
				</div>
				<div class="row">
					<input type="text" name="email" id="email" class="textfield" value="" size="24" tabindex="2">
					<label for="email" class="small">电子邮箱 (我们会为您保密) (必填)</label>
				</div>
				<div class="row">
					<input type="text" name="url" id="url" class="textfield" value="" size="24" tabindex="3">
					<label for="url" class="small">网址</label>
				</div>
			</div>

			
		
		<!-- comment input -->
		<div class="row">
			<textarea name="comment" id="comment" tabindex="4" rows="8" cols="50"></textarea>
		</div>

		<!-- comment submit and rss -->
		<div id="submitbox">
			<a class="feed" href="http://coolshell.cn/comments/feed">订阅评论</a>
			<div class="submitbutton">
				<input name="submit" type="submit" id="submit" class="button" tabindex="5" value="提交评论">
			</div>
						<input type="hidden" name="comment_post_ID" value="6731">
			<div class="fixed"></div>
		</div>

	</div>
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="19decc73b5"></p><p style="display: none;"></p>	<input type="hidden" id="ak_js" name="ak_js" value="1417682486036"></form>

	

	<div id="postnavi">
		<span class="prev"><a href="http://coolshell.cn/articles/6775.html" rel="next">Bret Victor – Inventing on Principle</a></span>
		<span class="next"><a href="http://coolshell.cn/articles/6668.html" rel="prev">再谈javascript面向对象编程</a></span>
		<div class="fixed"></div>
	</div>


<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-7486123-1']);
_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
	</div>
	<!-- main END -->

	
<!-- sidebar START -->
<div id="sidebar">

<!-- sidebar north START -->
<div id="northsidebar" class="sidebar">

	<!-- feeds -->
	<div class="widget widget_feeds">
		<div class="content">
			<div id="subscribe"><a rel="external nofollow" id="feedrss" title="订阅这个博客的文章" href="http://coolshell.cn/feed" class=" ">订阅</a><ul id="feed_readers" style="visibility: hidden; display: block; left: 977px; top: 231px;"><li id="google_reader"><a rel="external nofollow" class="reader" title="订阅到 Google" href="http://fusion.google.com/add?feedurl=http://coolshell.cn/feed"><span> Google</span></a></li><li id="youdao_reader"><a rel="external nofollow" class="reader" title="订阅到有道" href="http://reader.youdao.com/#url=http://coolshell.cn/feed"><span>有道</span></a></li><li id="xianguo_reader"><a rel="external nofollow" class="reader" title="订阅到鲜果" href="http://www.xianguo.com/subscribe.php?url=http://coolshell.cn/feed"><span>鲜果</span></a></li><li id="zhuaxia_reader"><a rel="external nofollow" class="reader" title="订阅到抓虾" href="http://www.zhuaxia.com/add_channel.php?url=http://coolshell.cn/feed"><span>抓虾</span></a></li><li id="yahoo_reader"><a rel="external nofollow" class="reader" title="订阅到 My Yahoo!" href="http://add.my.yahoo.com/rss?url=http://coolshell.cn/feed"><span> My Yahoo!</span></a></li><li id="newsgator_reader"><a rel="external nofollow" class="reader" title="订阅到 newsgator" href="http://www.newsgator.com/ngs/subscriber/subfext.aspx?url=http://coolshell.cn/feed"><span> newsgator</span></a></li><li id="bloglines_reader"><a rel="external nofollow" class="reader" title="订阅到 Bloglines" href="http://www.bloglines.com/sub/http://coolshell.cn/feed"><span> Bloglines</span></a></li><li id="inezha_reader"><a rel="external nofollow" class="reader" title="订阅到哪吒" href="http://inezha.com/add?url=http://coolshell.cn/feed"><span>哪吒</span></a></li><li id="qq_reader"><a class="reader" title="订阅到QQ Mail" onclick="window.open(this.href);return false;" rel="external nofollow" href="http://mail.qq.com/cgi-bin/feed?u=http://coolshell.cn/feed"><span>
			QQ Mail            </span></a></li><li id="douban_reader"><a class="reader" title="订阅到Douban" onclick="window.open(this.href);return false;" rel="external nofollow" href="http://9.douban.com/reader/subscribe?url=http://coolshell.cn/feed"><span>
			Douban            </span></a></li><li id="rojo_reader"><a class="reader" title="订阅到Rojo" onclick="window.open(this.href);return false;" rel="external nofollow" href="http://www.rojo.com/add-subscription?resource=http://coolshell.cn/feed"><span>
            Rojo            </span></a></li><li id="pageflakes_reader"><a class="reader last" title="订阅到Pageflakes" onclick="window.open(this.href);return false;" rel="external nofollow" href="http://www.pageflakes.com/subscribe.aspx?url=http://coolshell.cn/feed"><span>
            Pageflakes            </span></a></li></ul></div>
							<a id="followme" title="Follow me!" href="http://twitter.com/haoel/">Twitter</a>
						<div class="fixed"></div>
		</div>
	</div>

	<!-- showcase -->
			<div class="widget">
							<h3>本站公告</h3>
						<div class="content">
				<p align="center" style="background-color: #777;padding: 5px;color: white;font-weight: bold;border: solid 1px black;text-shadow: 0px 0px 3px black;">访问 <a href="http://coolshell.cn/404/" target="_blank" style="color: #FFE249;">酷壳404页面</a> 寻找遗失儿童！</p>

<p>酷壳建议大家多使用RSS访问阅读（本站已经是全文输出，推荐使用cloud.feedly.com 或 digg.com）。有相关事宜欢迎电邮：haoel(at)hotmail.com。最后，感谢大家对酷壳的支持和体谅！</p>

<p align="center"><b>感谢 <a href="http://42qu.com/" title="42区 找到给你答案的人" target="_blank">42qu.com</a> 为本站提供 <a href="http://vps.42qu.com/" target="_blank" title="42区虚拟主机，卖给创业的你">VPS</a> </b></p>

<!--<div style="background-color: #DA2D03;color: white;text-align: center;padding: 5px;border: solid 1px black;text-shadow: 0px 0px 3px black;"><b>感谢 <a href=http://42qu.com/ title="42区 找到给你答案的人" target=_blank style="color: #E9F300;">42qu.com</a> 为本站提供 <a href="http://vps.42qu.com/" target=_blank style="color: #E9F300;" title="42区虚拟主机，卖给创业的你">VPS</a> </b></div>-->			</div>
		</div>
	
		<div id="recent-posts-2" class="widget widget_recent_entries">		<h3>最新文章</h3>		<ul>
					<li>
				<a href="http://coolshell.cn/articles/12136.html">Google Inbox 是如何跨平台重用代码的？</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/12103.html">vfork 挂掉的一个问题</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/12052.html">Leetcode 编程训练</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/12012.html">State Threads 回调终结者</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11973.html">bash代码注入的安全漏洞</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11928.html">互联网之子 – Aaron Swartz</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11847.html">谜题的答案和活动的心得体会</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11832.html">【活动】解迷题送礼物</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11656.html">开发团队的效率</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11609.html">TCP 的那些事儿（下）</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11564.html">TCP 的那些事儿（上）</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11629.html">「我只是认真」聊聊工匠情怀</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11541.html">面向GC的Java编程</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11466.html">C语言的整型溢出问题</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11454.html">从LongAdder看更高效的无锁实现</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11432.html">从Code Review 谈如何做技术</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11377.html">C语言结构体里的成员数组和指针</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11312.html">无插件Vim编程技巧</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11265.html">Python修饰器的函数式编程</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11235.html">一个浮点数跨平台产生的问题</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11175.html">Java中的CopyOnWrite容器</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11170.html">如何用最有创造力的方式输出42</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11112.html">由苹果的低级Bug想到的</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11094.html">可视化编程</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/11021.html">从“黑掉Github”学Web安全开发</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/10975.html">一个“蝇量级” C 语言协程库</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/10910.html">分布式系统的事务处理</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/10822.html">函数式编程</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/10804.html">X-Y Problem</a>
						</li>
					<li>
				<a href="http://coolshell.cn/articles/10739.html">Lua简明教程</a>
						</li>
				</ul>
		</div><div id="views-4" class="widget widget_views"><h3>全站热门</h3><ul>
<li><a href="http://coolshell.cn/articles/4990.html" title="程序员技术练级攻略 - 495,737 人阅读">程序员技术练级攻略</a></li><li><a href="http://coolshell.cn/articles/5426.html" title="简明 Vim 练级攻略 - 409,580 人阅读">简明 Vim 练级攻略</a></li><li><a href="http://coolshell.cn/articles/7186.html" title="做个环保主义的程序员 - 204,580 人阅读">做个环保主义的程序员</a></li><li><a href="http://coolshell.cn/articles/4102.html" title="如何学好C语言 - 173,433 人阅读">如何学好C语言</a></li><li><a href="http://coolshell.cn/articles/914.html" title="6个变态的C语言Hello World程序 - 144,555 人阅读">6个变态的C语言Hello World程序</a></li><li><a href="http://coolshell.cn/articles/8883.html" title="应该知道的Linux技巧 - 140,752 人阅读">应该知道的Linux技巧</a></li><li><a href="http://coolshell.cn/articles/2250.html" title="“21天教你学会C++” - 138,383 人阅读">“21天教你学会C++”</a></li><li><a href="http://coolshell.cn/articles/6470.html" title="由12306.cn谈谈网站性能技术 - 131,209 人阅读">由12306.cn谈谈网站性能技术</a></li><li><a href="http://coolshell.cn/articles/9308.html" title="“作环保的程序员，从不用百度开始” - 125,500 人阅读">“作环保的程序员，从不用百度开始”</a></li><li><a href="http://coolshell.cn/articles/1870.html" title="我是怎么招聘程序员的 - 120,376 人阅读">我是怎么招聘程序员的</a></li><li><a href="http://coolshell.cn/articles/10688.html" title="编程能力与编程年龄 - 117,849 人阅读">编程能力与编程年龄</a></li><li><a href="http://coolshell.cn/articles/7829.html" title="28个Unix/Linux的命令行神器 - 115,569 人阅读">28个Unix/Linux的命令行神器</a></li><li><a href="http://coolshell.cn/articles/9070.html" title="AWK 简明教程 - 110,552 人阅读">AWK 简明教程</a></li><li><a href="http://coolshell.cn/articles/3549.html" title="Android将允许纯C/C++开发应用 - 108,279 人阅读">Android将允许纯C/C++开发应用</a></li><li><a href="http://coolshell.cn/articles/6043.html" title="Web开发中需要了解的东西 - 105,903 人阅读">Web开发中需要了解的东西</a></li><li><a href="http://coolshell.cn/articles/2287.html" title="C++ 程序员自信心曲线图 - 99,183 人阅读">C++ 程序员自信心曲线图</a></li><li><a href="http://coolshell.cn/articles/4119.html" title="如何学好C++语言 - 94,108 人阅读">如何学好C++语言</a></li><li><a href="http://coolshell.cn/articles/355.html" title="20本最好的Linux免费书籍 - 92,023 人阅读">20本最好的Linux免费书籍</a></li><li><a href="http://coolshell.cn/articles/1391.html" title="编程真难啊 - 91,646 人阅读">编程真难啊</a></li><li><a href="http://coolshell.cn/articles/4758.html" title="如何写出无法维护的代码 - 91,585 人阅读">如何写出无法维护的代码</a></li><li><a href="http://coolshell.cn/articles/11564.html" title="TCP 的那些事儿（上） - 88,153 人阅读">TCP 的那些事儿（上）</a></li><li><a href="http://coolshell.cn/articles/7490.html" title="性能调优攻略 - 87,848 人阅读">性能调优攻略</a></li><li><a href="http://coolshell.cn/articles/3008.html" title="Windows编程革命简史 - 87,480 人阅读">Windows编程革命简史</a></li><li><a href="http://coolshell.cn/articles/5761.html" title="深入理解C语言 - 86,532 人阅读">深入理解C语言</a></li><li><a href="http://coolshell.cn/articles/5701.html" title="SteveY对Amazon和Google平台的吐槽 - 85,601 人阅读">SteveY对Amazon和Google平台的吐槽</a></li><li><a href="http://coolshell.cn/articles/10217.html" title="加班与效率 - 81,726 人阅读">加班与效率</a></li><li><a href="http://coolshell.cn/articles/2058.html" title="各种流行的编程风格 - 81,661 人阅读">各种流行的编程风格</a></li><li><a href="http://coolshell.cn/articles/945.html" title="C语言的谜题 - 81,289 人阅读">C语言的谜题</a></li><li><a href="http://coolshell.cn/articles/8790.html" title="程序算法与人生选择 - 80,509 人阅读">程序算法与人生选择</a></li><li><a href="http://coolshell.cn/articles/4429.html" title="面试题：火车运煤问题 - 80,119 人阅读">面试题：火车运煤问题</a></li></ul>
</div><div id="text-400151743" class="widget widget_text"><h3>新浪微博</h3>			<div class="textwidget"><iframe width="100%" height="120" class="share_self" frameborder="0" scrolling="no" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/index.htm"></iframe></div>
		</div><div id="tag_cloud-2" class="widget widget_tag_cloud"><h3>标签</h3><div class="tagcloud"><a href="http://coolshell.cn/tag/agile" class="tag-link-17" title="15个话题" style="font-size: 11.8532110092pt;">agile</a>
<a href="http://coolshell.cn/tag/ajax" class="tag-link-34" title="11个话题" style="font-size: 10.3119266055pt;">AJAX</a>
<a href="http://coolshell.cn/tag/algorithm" class="tag-link-76" title="25个话题" style="font-size: 14.5504587156pt;">Algorithm</a>
<a href="http://coolshell.cn/tag/android" class="tag-link-145" title="9个话题" style="font-size: 9.28440366972pt;">Android</a>
<a href="http://coolshell.cn/tag/bash" class="tag-link-190" title="9个话题" style="font-size: 9.28440366972pt;">Bash</a>
<a href="http://coolshell.cn/tag/c" class="tag-link-59" title="86个话题" style="font-size: 21.3577981651pt;">C++</a>
<a href="http://coolshell.cn/tag/coding" class="tag-link-135" title="25个话题" style="font-size: 14.5504587156pt;">Coding</a>
<a href="http://coolshell.cn/tag/css" class="tag-link-96" title="21个话题" style="font-size: 13.6513761468pt;">CSS</a>
<a href="http://coolshell.cn/tag/database" class="tag-link-109" title="7个话题" style="font-size: 8pt;">Database</a>
<a href="http://coolshell.cn/tag/design" class="tag-link-71" title="18个话题" style="font-size: 12.880733945pt;">Design</a>
<a href="http://coolshell.cn/tag/design-pattern" class="tag-link-25" title="8个话题" style="font-size: 8.64220183486pt;">design pattern</a>
<a href="http://coolshell.cn/tag/ebook" class="tag-link-101" title="15个话题" style="font-size: 11.8532110092pt;">ebook</a>
<a href="http://coolshell.cn/tag/flash" class="tag-link-98" title="7个话题" style="font-size: 8pt;">Flash</a>
<a href="http://coolshell.cn/tag/game" class="tag-link-125" title="9个话题" style="font-size: 9.28440366972pt;">Game</a>
<a href="http://coolshell.cn/tag/go" class="tag-link-238" title="9个话题" style="font-size: 9.28440366972pt;">Go</a>
<a href="http://coolshell.cn/tag/google" class="tag-link-32" title="32个话题" style="font-size: 15.9633027523pt;">Google</a>
<a href="http://coolshell.cn/tag/html" class="tag-link-38" title="32个话题" style="font-size: 15.9633027523pt;">HTML</a>
<a href="http://coolshell.cn/tag/ie" class="tag-link-175" title="10个话题" style="font-size: 9.79816513761pt;">IE</a>
<a href="http://coolshell.cn/tag/java" class="tag-link-13" title="48个话题" style="font-size: 18.1467889908pt;">Java</a>
<a href="http://coolshell.cn/tag/javascript" class="tag-link-114" title="51个话题" style="font-size: 18.5321100917pt;">Javascript</a>
<a href="http://coolshell.cn/tag/jquery" class="tag-link-191" title="11个话题" style="font-size: 10.3119266055pt;">jQuery</a>
<a href="http://coolshell.cn/tag/linux" class="tag-link-37" title="60个话题" style="font-size: 19.4311926606pt;">Linux</a>
<a href="http://coolshell.cn/tag/mysql" class="tag-link-106" title="7个话题" style="font-size: 8pt;">MySQL</a>
<a href="http://coolshell.cn/tag/oop" class="tag-link-245" title="8个话题" style="font-size: 8.64220183486pt;">OOP</a>
<a href="http://coolshell.cn/tag/password" class="tag-link-319" title="8个话题" style="font-size: 8.64220183486pt;">password</a>
<a href="http://coolshell.cn/tag/performance" class="tag-link-120" title="15个话题" style="font-size: 11.8532110092pt;">Performance</a>
<a href="http://coolshell.cn/tag/php" class="tag-link-35" title="25个话题" style="font-size: 14.5504587156pt;">PHP</a>
<a href="http://coolshell.cn/tag/programmer" class="tag-link-70" title="94个话题" style="font-size: 21.871559633pt;">Programmer</a>
<a href="http://coolshell.cn/tag/programming" class="tag-link-499" title="8个话题" style="font-size: 8.64220183486pt;">Programming</a>
<a href="http://coolshell.cn/tag/programming-language" class="tag-link-115" title="12个话题" style="font-size: 10.6972477064pt;">programming language</a>
<a href="http://coolshell.cn/tag/puzzle" class="tag-link-514" title="11个话题" style="font-size: 10.3119266055pt;">Puzzle</a>
<a href="http://coolshell.cn/tag/pythondev" class="tag-link-33" title="29个话题" style="font-size: 15.4495412844pt;">Python</a>
<a href="http://coolshell.cn/tag/ruby" class="tag-link-69" title="10个话题" style="font-size: 9.79816513761pt;">Ruby</a>
<a href="http://coolshell.cn/tag/sql" class="tag-link-131" title="10个话题" style="font-size: 9.79816513761pt;">SQL</a>
<a href="http://coolshell.cn/tag/tdd" class="tag-link-485" title="8个话题" style="font-size: 8.64220183486pt;">TDD</a>
<a href="http://coolshell.cn/tag/ui" class="tag-link-47" title="12个话题" style="font-size: 10.6972477064pt;">UI</a>
<a href="http://coolshell.cn/tag/unix" class="tag-link-21" title="33个话题" style="font-size: 16.0917431193pt;">Unix</a>
<a href="http://coolshell.cn/tag/vim" class="tag-link-50" title="19个话题" style="font-size: 13.1376146789pt;">vim</a>
<a href="http://coolshell.cn/tag/web" class="tag-link-30" title="38个话题" style="font-size: 16.8623853211pt;">Web</a>
<a href="http://coolshell.cn/tag/windows" class="tag-link-49" title="17个话题" style="font-size: 12.623853211pt;">Windows</a>
<a href="http://coolshell.cn/tag/xml" class="tag-link-104" title="8个话题" style="font-size: 8.64220183486pt;">XML</a>
<a href="http://coolshell.cn/tag/%e5%ae%89%e5%85%a8" class="tag-link-318" title="19个话题" style="font-size: 13.1376146789pt;">安全</a>
<a href="http://coolshell.cn/tag/%e7%a8%8b%e5%ba%8f%e5%91%98" class="tag-link-58" title="96个话题" style="font-size: 22pt;">程序员</a>
<a href="http://coolshell.cn/tag/%e7%ae%97%e6%b3%95" class="tag-link-77" title="10个话题" style="font-size: 9.79816513761pt;">算法</a>
<a href="http://coolshell.cn/tag/interview" class="tag-link-164" title="16个话题" style="font-size: 12.2385321101pt;">面试</a></div>
</div></div>
<!-- sidebar north END -->

<div id="centersidebar">

	<!-- sidebar east START -->
	<div id="eastsidebar" class="sidebar">
	<div id="categories-367921423" class="widget widget_categories"><h3>分类目录</h3>		<ul>
	<li class="cat-item cat-item-189"><a href="http://coolshell.cn/category/proglanguage/dotnet">.NET编程</a> (3)
</li>
	<li class="cat-item cat-item-8"><a href="http://coolshell.cn/category/proglanguage/ajaxdev">Ajax开发</a> (9)
</li>
	<li class="cat-item cat-item-5"><a href="http://coolshell.cn/category/proglanguage/cplusplus">C/C++语言</a> (66)
</li>
	<li class="cat-item cat-item-186"><a href="http://coolshell.cn/category/proglanguage/erlang">Erlang</a> (1)
</li>
	<li class="cat-item cat-item-4"><a href="http://coolshell.cn/category/proglanguage/javadev">Java语言</a> (32)
</li>
	<li class="cat-item cat-item-11"><a href="http://coolshell.cn/category/proglanguage/phpdev">PHP脚本</a> (11)
</li>
	<li class="cat-item cat-item-33"><a href="http://coolshell.cn/category/proglanguage/pythondev">Python</a> (23)
</li>
	<li class="cat-item cat-item-100"><a href="http://coolshell.cn/category/proglanguage/rubydev">Ruby</a> (5)
</li>
	<li class="cat-item cat-item-20"><a href="http://coolshell.cn/category/operatingsystem/unixlinux">Unix/Linux</a> (69)
</li>
	<li class="cat-item cat-item-7"><a href="http://coolshell.cn/category/proglanguage/webdev">Web开发</a> (101)
</li>
	<li class="cat-item cat-item-19"><a href="http://coolshell.cn/category/operatingsystem/mswindows">Windows</a> (12)
</li>
	<li class="cat-item cat-item-195"><a href="http://coolshell.cn/category/itnews">业界新闻</a> (26)
</li>
	<li class="cat-item cat-item-509"><a href="http://coolshell.cn/category/%e4%bc%81%e4%b8%9a%e5%ba%94%e7%94%a8">企业应用</a> (2)
</li>
	<li class="cat-item cat-item-9"><a href="http://coolshell.cn/category/technews">技术新闻</a> (33)
</li>
	<li class="cat-item cat-item-550"><a href="http://coolshell.cn/category/%e6%8a%80%e6%9c%af%e7%ae%a1%e7%90%86">技术管理</a> (12)
</li>
	<li class="cat-item cat-item-12"><a href="http://coolshell.cn/category/techarticle">技术读物</a> (115)
</li>
	<li class="cat-item cat-item-18"><a href="http://coolshell.cn/category/operatingsystem">操作系统</a> (45)
</li>
	<li class="cat-item cat-item-105"><a href="http://coolshell.cn/category/datebase">数据库</a> (10)
</li>
	<li class="cat-item cat-item-10"><a href="http://coolshell.cn/category/misc">杂项资源</a> (262)
</li>
	<li class="cat-item cat-item-15"><a href="http://coolshell.cn/category/process">流程方法</a> (46)
</li>
	<li class="cat-item cat-item-23"><a href="http://coolshell.cn/category/progdesign">程序设计</a> (81)
</li>
	<li class="cat-item cat-item-602"><a href="http://coolshell.cn/category/%e7%b3%bb%e7%bb%9f%e6%9e%b6%e6%9e%84">系统架构</a> (8)
</li>
	<li class="cat-item cat-item-1"><a href="http://coolshell.cn/category/tools">编程工具</a> (65)
</li>
	<li class="cat-item cat-item-3"><a href="http://coolshell.cn/category/proglanguage">编程语言</a> (169)
</li>
	<li class="cat-item cat-item-6"><a href="http://coolshell.cn/category/netsecurity">网络安全</a> (26)
</li>
	<li class="cat-item cat-item-39"><a href="http://coolshell.cn/category/career">职场生涯</a> (33)
</li>
	<li class="cat-item cat-item-271"><a href="http://coolshell.cn/category/funny">趣味问题</a> (18)
</li>
	<li class="cat-item cat-item-52"><a href="http://coolshell.cn/category/story">轶事趣闻</a> (147)
</li>
		</ul>
</div>	</div>
	<!-- sidebar east END -->

	<!-- sidebar west START -->
	<div id="westsidebar" class="sidebar">
	<div id="archives-2" class="widget widget_archive"><h3>归档</h3>		<ul>
	<li><a href="http://coolshell.cn/articles/date/2014/11">2014年十一月</a>&nbsp;(2)</li>
	<li><a href="http://coolshell.cn/articles/date/2014/10">2014年十月</a>&nbsp;(2)</li>
	<li><a href="http://coolshell.cn/articles/date/2014/09">2014年九月</a>&nbsp;(2)</li>
	<li><a href="http://coolshell.cn/articles/date/2014/08">2014年八月</a>&nbsp;(2)</li>
	<li><a href="http://coolshell.cn/articles/date/2014/06">2014年六月</a>&nbsp;(1)</li>
	<li><a href="http://coolshell.cn/articles/date/2014/05">2014年五月</a>&nbsp;(4)</li>
	<li><a href="http://coolshell.cn/articles/date/2014/04">2014年四月</a>&nbsp;(4)</li>
	<li><a href="http://coolshell.cn/articles/date/2014/03">2014年三月</a>&nbsp;(5)</li>
	<li><a href="http://coolshell.cn/articles/date/2014/02">2014年二月</a>&nbsp;(3)</li>
	<li><a href="http://coolshell.cn/articles/date/2014/01">2014年一月</a>&nbsp;(2)</li>
	<li><a href="http://coolshell.cn/articles/date/2013/12">2013年十二月</a>&nbsp;(3)</li>
	<li><a href="http://coolshell.cn/articles/date/2013/11">2013年十一月</a>&nbsp;(1)</li>
	<li><a href="http://coolshell.cn/articles/date/2013/10">2013年十月</a>&nbsp;(6)</li>
	<li><a href="http://coolshell.cn/articles/date/2013/08">2013年八月</a>&nbsp;(1)</li>
	<li><a href="http://coolshell.cn/articles/date/2013/07">2013年七月</a>&nbsp;(8)</li>
	<li><a href="http://coolshell.cn/articles/date/2013/06">2013年六月</a>&nbsp;(2)</li>
	<li><a href="http://coolshell.cn/articles/date/2013/05">2013年五月</a>&nbsp;(3)</li>
	<li><a href="http://coolshell.cn/articles/date/2013/04">2013年四月</a>&nbsp;(3)</li>
	<li><a href="http://coolshell.cn/articles/date/2013/03">2013年三月</a>&nbsp;(3)</li>
	<li><a href="http://coolshell.cn/articles/date/2013/02">2013年二月</a>&nbsp;(5)</li>
	<li><a href="http://coolshell.cn/articles/date/2013/01">2013年一月</a>&nbsp;(1)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/12">2012年十二月</a>&nbsp;(4)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/11">2012年十一月</a>&nbsp;(5)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/10">2012年十月</a>&nbsp;(3)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/09">2012年九月</a>&nbsp;(4)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/08">2012年八月</a>&nbsp;(8)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/07">2012年七月</a>&nbsp;(4)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/06">2012年六月</a>&nbsp;(7)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/05">2012年五月</a>&nbsp;(6)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/04">2012年四月</a>&nbsp;(6)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/03">2012年三月</a>&nbsp;(6)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/02">2012年二月</a>&nbsp;(3)</li>
	<li><a href="http://coolshell.cn/articles/date/2012/01">2012年一月</a>&nbsp;(6)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/12">2011年十二月</a>&nbsp;(5)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/11">2011年十一月</a>&nbsp;(9)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/10">2011年十月</a>&nbsp;(6)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/09">2011年九月</a>&nbsp;(5)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/08">2011年八月</a>&nbsp;(14)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/07">2011年七月</a>&nbsp;(6)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/06">2011年六月</a>&nbsp;(12)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/05">2011年五月</a>&nbsp;(5)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/04">2011年四月</a>&nbsp;(18)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/03">2011年三月</a>&nbsp;(16)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/02">2011年二月</a>&nbsp;(16)</li>
	<li><a href="http://coolshell.cn/articles/date/2011/01">2011年一月</a>&nbsp;(18)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/12">2010年十二月</a>&nbsp;(11)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/11">2010年十一月</a>&nbsp;(11)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/10">2010年十月</a>&nbsp;(19)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/09">2010年九月</a>&nbsp;(15)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/08">2010年八月</a>&nbsp;(10)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/07">2010年七月</a>&nbsp;(20)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/06">2010年六月</a>&nbsp;(9)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/05">2010年五月</a>&nbsp;(13)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/04">2010年四月</a>&nbsp;(12)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/03">2010年三月</a>&nbsp;(11)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/02">2010年二月</a>&nbsp;(7)</li>
	<li><a href="http://coolshell.cn/articles/date/2010/01">2010年一月</a>&nbsp;(9)</li>
	<li><a href="http://coolshell.cn/articles/date/2009/12">2009年十二月</a>&nbsp;(22)</li>
	<li><a href="http://coolshell.cn/articles/date/2009/11">2009年十一月</a>&nbsp;(27)</li>
	<li><a href="http://coolshell.cn/articles/date/2009/10">2009年十月</a>&nbsp;(17)</li>
	<li><a href="http://coolshell.cn/articles/date/2009/09">2009年九月</a>&nbsp;(14)</li>
	<li><a href="http://coolshell.cn/articles/date/2009/08">2009年八月</a>&nbsp;(21)</li>
	<li><a href="http://coolshell.cn/articles/date/2009/07">2009年七月</a>&nbsp;(18)</li>
	<li><a href="http://coolshell.cn/articles/date/2009/06">2009年六月</a>&nbsp;(19)</li>
	<li><a href="http://coolshell.cn/articles/date/2009/05">2009年五月</a>&nbsp;(27)</li>
	<li><a href="http://coolshell.cn/articles/date/2009/04">2009年四月</a>&nbsp;(53)</li>
	<li><a href="http://coolshell.cn/articles/date/2009/03">2009年三月</a>&nbsp;(43)</li>
		</ul>
</div>	</div>
	<!-- sidebar west END -->
	<div class="fixed"></div>
</div>

<!-- sidebar south START -->
<div id="southsidebar" class="sidebar">
<div id="get-recent-comments" class="widget widget_get_recent_comments"><h3>最新评论</h3><div id="get_recent_comments_wrap"><ul>	<li><a href="http://coolshell.cn/articles/9229.html#comment-1614489" title="实例分析Java Class的文件结构, 2013年03月05日">无名</a>: 上图中0000000ah处的内容为0x0A，转换成二级制是1 0.这里应该错了，是转成十进制的</li>
	<li><a href="http://coolshell.cn/articles/6731.html#comment-1614485" title="理解Javascript的闭包, 2012年03月07日">codezyc</a>: 其实dom元素的事件绑定，例如a.onclick=funct ion(){…}是不是也是闭包？</li>
	<li><a href="http://coolshell.cn/articles/7186.html#comment-1614480" title="做个环保主义的程序员, 2012年04月27日">陈皓</a>: 真没有用过。都是公司买的正版的。家用的也是自己买的。Home 版才100多元，你都买不起，还用盗版？你说说你Low不Low ?</li>
	<li><a href="http://coolshell.cn/articles/3363.html#comment-1614448" title="偷了世界的程序员, 2010年12月16日">陈皓</a>: 注明作者和出处就可以了。另外不能用于任何商业用途。</li>
	<li><a href="http://coolshell.cn/articles/3363.html#comment-1614445" title="偷了世界的程序员, 2010年12月16日">sissiyuen</a>: 最近刚刚写完一篇人人影视字幕组的评论，准备连同这篇一起发一组 微信，想请问下译者，是否可以授权转载？：）</li>
	<li><a href="http://coolshell.cn/articles/12136.html#comment-1614215" title="Google Inbox 是如何跨平台重用代码的？, 2014年11月26日">Dennis Gao</a>: 所以，实际上，优秀的面向对象设计很重要。</li>
	<li><a href="http://coolshell.cn/articles/12136.html#comment-1614176" title="Google Inbox 是如何跨平台重用代码的？, 2014年11月26日">living</a>: 我能说unity3d吗~</li>
	<li><a href="http://coolshell.cn/articles/12136.html#comment-1614171" title="Google Inbox 是如何跨平台重用代码的？, 2014年11月26日">jnj</a>: @livelazily Dropbox 使用 C++ 实现 Android 和 iOS 之间的代码复用的相关文章： http://www.infoq.com/news/2...</li>
	<li><a href="http://coolshell.cn/articles/12136.html#comment-1614161" title="Google Inbox 是如何跨平台重用代码的？, 2014年11月26日">jnj</a>: @livelazily 谢谢指正，链接已修复。</li>
	<li><a href="http://coolshell.cn/articles/12136.html#comment-1614130" title="Google Inbox 是如何跨平台重用代码的？, 2014年11月26日">kkk</a>: http://www.cnbeta.com/articles /336441.htm 其实弱爆了，Office做到了Win 32PC和Android之间95%的重用率</li>
	<li><a href="http://coolshell.cn/articles/12136.html#comment-1614119" title="Google Inbox 是如何跨平台重用代码的？, 2014年11月26日">int64ago</a>: @livelazily 没加http:// 被相对路径了……</li>
	<li><a href="http://coolshell.cn/articles/599.html#comment-1614114" title="Google 三维 JavaScript API 发布, 2009年04月22日">z_fox</a>: Google 2010年8月宣布放弃O3D插件，转投WebGL。</li>
	<li><a href="http://coolshell.cn/articles/12136.html#comment-1614112" title="Google Inbox 是如何跨平台重用代码的？, 2014年11月26日">livelazily</a>: 最后的 Gmail blog 的链接坏掉了,链到本 blog 了</li>
	<li><a href="http://coolshell.cn/articles/12136.html#comment-1614111" title="Google Inbox 是如何跨平台重用代码的？, 2014年11月26日">livelazily</a>: dropbox 不是也是这么搞么,貌似后来进了大坑?</li>
	<li><a href="http://coolshell.cn/articles/12052.html#comment-1614102" title="Leetcode 编程训练, 2014年10月23日">chenggl</a>: https://github.com/haoel/leetc ode/blob/master/src/LRUCache/L RUCache.cpp 有错误,修正为： [c]void Unlink2(Node* n){...</li>
</ul></div></div><div id="text-2" class="widget widget_text"><h3>友情链接</h3>			<div class="textwidget"><ul class="blogroll">
<li><a href="http://blog.csdn.net/haoel" target="_blank" onclick="pageTracker._trackPageview(&#39;/outgoing/blog.csdn.net/haoel?referer=http://coolshell.cn&#39;);">陈皓的博客</a></li>

<li><a href="http://ifeve.com/" target="_blank" title="促进并发编程的研究和推广" onclick="pageTracker._trackPageview(&#39;/outgoing/ifeve.com/?referer=http://coolshell.cn&#39;);">并发编程</a></li>


<li><a href="http://www.raychase.net/" target="_blank" title="一个啰嗦的程序员" onclick="pageTracker._trackPageview(&#39;/outgoing/www.raychase.net/?referer=http://coolshell.cn&#39;);">四火的唠叨</a></li>



<li><a href="http://www.hellogcc.org/" target="_blank" title="致力于讨论和学习GNU Toolchain方面的工作组" onclick="pageTracker._trackPageview(&#39;/outgoing/www.hellogcc.org//?referer=http://coolshell.cn/&#39;);">HelloGcc Working Group</a></li>

<li><a href="http://http//blog.lvscar.info/" target="_blank" title="Just for Fun" onclick="pageTracker._trackPageview(&#39;/outgoing/http://blog.lvscar.info/?referer=http://coolshell.cn/&#39;);">吕毅的Blog</a></li>

<li><a href="http://www.cnblogs.com/weidagang2046/" target="_blank" title="Just for Fun" onclick="pageTracker._trackPageview(&#39;/outgoing/http://www.cnblogs.com/weidagang2046/?referer=http://coolshell.cn/&#39;);">Todd Wei的Blog</a></li>

<li><a href="http://www.cppfans.org/" target="_blank" title="记录我们点滴学习工作生活" onclick="pageTracker._trackPageview(&#39;/outgoing/http://www.cppfans.org/?referer=http://coolshell.cn/&#39;);">C++爱好者博客</a></li>

<li><a href="http://www.mhtml5.com/" target="_blank" title="致力于HTML5在中国的发展与应用" onclick="pageTracker._trackPageview(&#39;/outgoing/http://www.mhtml5.com/?referer=http://coolshell.cn/&#39;);">HTML5研究小组</a></li>


<li><a href="http://zhuwenhao.com/" target="_blank" title="朱文昊的中文博客－－专注技术，向往自由" onclick="pageTracker._trackPageview(&#39;/outgoing/http://zhuwenhao.com/?referer=http://coolshell.cn/&#39;);">朱文昊Albert Zhu</a></li>


<li><a href="http://www.cguage.com/" target="_blank" title="某VC++软件开发爱好者" onclick="pageTracker._trackPageview(&#39;/outgoing/http://www.cguage.com/?referer=http://coolshell.cn/&#39;);">C瓜哥的博客</a></li>


<li><a href="http://www.kaiyuanba.cn/" target="_blank" title="汇聚各种开源项目的中英文混合介绍并分类排列，致力于软件项目的开源事业" onclick="pageTracker._trackPageview(&#39;/outgoing/http://www.kaiyuanba.cn/?referer=http://coolshell.cn/&#39;);">开源吧</a></li>



<li><a href="http://helloacm.com/" target="_blank" title="Smart Ideas, Smart Algorithms" onclick="pageTracker._trackPageview(&#39;/outgoing/http://HelloACM.com/?referer=http://coolshell.cn/&#39;);">ACMer</a></li>

<li><a href="http://chenpeng.info/" target="_blank" title="优秀的开源软件让生活更简单" onclick="pageTracker._trackPageview(&#39;/outgoing/http://chenpeng.info/?referer=http://coolshell.cn/&#39;);">陈鹏个人博客</a></li>

<li><a href="http://www.coderli.com/" target="_blank" title="一个普通的coder，coding为了生活，coding因为消遣:-) Just a coder" onclick="pageTracker._trackPageview(&#39;/outgoing/http://www.coderli.com/?referer=http://coolshell.cn/&#39;);">OneCoder</a></li>

<li><a href="http://www.crazyshell.org/" target="_blank" title="专注于底层基础, TCP/IP, 存储, (高性能.高可用.分布式.高并发系统) 研究" onclick="pageTracker._trackPageview(&#39;/outgoing/http://www.crazyshell.org/?referer=http://coolshell.cn/&#39;);">狂Shell – Happy Hacking</a></li>

<li><a href="http://www.tektea.com/" target="_blank" title="关注IT技术 | 分享 | 交流 | 记录" onclick="pageTracker._trackPageview(&#39;/outgoing/http://www.tektea.com/?referer=http://coolshell.cn/&#39;);">TekTea's Blog </a></li>

<li><a href="http://shellblog.sinaapp.com/" target="_blank" title="我有一颗百度的心。" onclick="pageTracker._trackPageview(&#39;/outgoing/http://blog.tektea.comshellblog.sinaapp.com/?referer=http://coolshell.cn/&#39;);">夕水溪下 </a></li>
</ul></div>
		</div><div id="meta-3" class="widget widget_meta"><h3>功能</h3>			<ul>
			<li><a href="http://coolshell.cn/wp-login.php?action=register">注册</a></li>			<li><a href="http://coolshell.cn/wp-login.php">登录</a></li>
			<li><a href="http://coolshell.cn/feed">文章<abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="http://coolshell.cn/comments/feed">评论<abbr title="Really Simple Syndication">RSS</abbr></a></li>
<li><a href="https://cn.wordpress.org/" title="基于WordPress，一个优美、先进的个人信息发布平台。">WordPress.org</a></li>			</ul>
</div><div id="text-400151742" class="widget widget_text">			<div class="textwidget"><script src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/stat.php" language="JavaScript" charset="gb2312"></script><script src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/core.php" charset="utf-8" type="text/javascript"></script><a href="http://www.cnzz.com/stat/website.php?web_id=1785679" target="_blank" title="站长统计"><img border="0" hspace="0" vspace="0" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/pic1.gif"></a>



</div>
		</div></div>
<!-- sidebar south END -->

</div>
<!-- sidebar END -->
	<div class="fixed"></div>
</div>
<!-- content END -->

<!-- footer START -->
<div id="footer">
	<a id="gotop" href="http://coolshell.cn/articles/6731.html#" onclick="MGJS.goTop();return false;">回到顶部</a>
	<a id="powered" href="http://wordpress.org/">WordPress</a>
	<div id="copyright">
		版权所有 © 2009-2014 酷 壳 – CoolShell.cn	</div>
	<div id="themeinfo">
		主题由 <a href="http://www.neoease.com/">NeoEase</a> 提供, 通过 <a href="http://validator.w3.org/check?uri=referer">XHTML 1.1</a> 和 <a href="http://jigsaw.w3.org/css-validator/check/referer?profile=css3">CSS 3</a> 验证.	</div>
</div>
<!-- footer END -->

</div>
<!-- container END -->
</div>
<!-- wrap END -->

<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shCore.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushCSharp.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushPhp.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushJScript.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushJava.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushVb.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushSql.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushXml.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushDelphi.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushPython.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushRuby.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushCss.js"></script>
<script class="javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushCpp.js"></script>
<script class="javascript">
dp.SyntaxHighlighter.ClipboardSwf = 'http://coolshell.cn//wp-content/plugins/google-syntax-highlighter/Scripts/clipboard.swf';
dp.SyntaxHighlighter.HighlightAll('code');
</script>
    <!-- Start of StatCounter Code -->
    <script type="text/javascript">
    <!-- 
        var sc_project=8326668; 
        var sc_security="cccb27f2"; 
      var sc_invisible=1;
        var scJsHost = (("https:" == document.location.protocol) ?
        "https://secure." : "http://www.");
    //-->
document.write("<sc"+"ript type='text/javascript' src='" +scJsHost +"statcounter.com/counter/counter.js'></"+"script>");
</script><script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/counter.js"></script>
<noscript>&lt;div class="statcounter"&gt;&lt;a title="web analytics" href="http://statcounter.com/"&gt;&lt;img class="statcounter" src="http://c.statcounter.com/8326668/0/cccb27f2/1/" alt="web analytics" /&gt;&lt;/a&gt;&lt;/div&gt;</noscript>   
    <!-- End of StatCounter Code -->
<script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/form.js"></script>
<script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shCore(1).js"></script>
<script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/shBrushJScript(1).js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://coolshell.cn//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://coolshell.cn//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '帮助';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = '无法找到Brush：';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush不能设置 html-script选项';
	SyntaxHighlighter.defaults['class-name'] = 'coolshell_syntaxhighlighter';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
/* <![CDATA[ */
var ratingsL10n = {"plugin_url":"http:\/\/coolshell.cn\/wp-content\/plugins\/wp-postratings","ajax_url":"http:\/\/coolshell.cn\/wp-admin\/admin-ajax.php","text_wait":"Please rate only 1 post at a time.","image":"stars_crystal","image_ext":"gif","max":"5","show_loading":"1","show_fading":"1","custom":"0"};
var ratings_mouseover_image=new Image();ratings_mouseover_image.src=ratingsL10n.plugin_url+"/images/"+ratingsL10n.image+"/rating_over."+ratingsL10n.image_ext;;
/* ]]> */
</script>
<script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/postratings-js.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var viewsCacheL10n = {"admin_ajax_url":"http:\/\/coolshell.cn\/wp-admin\/admin-ajax.php","post_id":"6731"};
/* ]]> */
</script>
<script type="text/javascript" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/postviews-cache.js"></script>
<script src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/stat.php" language="JavaScript" charset="gb2312"></script><script src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/core.php" charset="utf-8" type="text/javascript"></script><a href="http://www.cnzz.com/stat/website.php?web_id=1785679" target="_blank" title="站长统计"><img border="0" hspace="0" vspace="0" src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/pic1.gif"></a>






<script src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/jquery.min.js"></script>
<script src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/jquery.bpopup-0.8.0.min.js"></script>

<script type="text/javascript">
;(function($) {
    $(function() {
        var url=document.referrer;
        if ( url && url.search("http://")>-1) {
            var refurl =  url.match(/:\/\/(.[^/]+)/)[1];
            if(refurl.indexOf("baidu.com")>-1){
                $('#nobaidu_dlg').bPopup();
            }
        }
    });

})(jQuery);
</script>



<div id="nobaidu_dlg" style="background-color:#fff; border-radius:15px;color:#000;display:none;padding:20px;min-width:450px;min-height:180px;">
    <!--<span class="bClose" style="cursor:pointer; position:absolute; right:10px;top:5px;">x<span/>-->
    <img src="./理解Javascript的闭包   酷 壳 - CoolShell.cn_files/nobaidu.jpg" align="left">
     <p style="margin-left:200px;margin-top: 20px; line-height: 30px;">
     检测到你还在使用百度这个搜索引擎，<br>
     作为一个程序员，这是一种自暴自弃！<br>
     <br>
     </p>
     <p align="center" style="margin-top:20px;">
     <b><a href="http://coolshell.cn/articles/7186.html">作环保的程序员，从不用百度开始！</a></b>
     </p>
</div>


<!-- Dynamic page generated in 0.845 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-11-26 16:52:31 -->

<!-- Compression = gzip --></body></html>