<!DOCTYPE html>
<!-- saved from url=(0062)http://youngsterxyf.github.io/2013/01/26/python-string-format/ -->
<html lang="zh" class=" js flexbox canvas canvastext webgl no-touch geolocation postmessage websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

        <title>Python格式字符串（译）</title>
        <meta charset="utf-8">
        <link href="http://youngsterxyf.github.io/feeds/atom.xml" type="application/atom+xml" rel="alternate" title="黑 * 白 Full Atom Feed">
        <link href="http://youngsterxyf.github.io/feeds/rss.xml" type="application/rss+xml" rel="alternate" title="黑 * 白 Full RSS Feed">


        <!-- Mobile viewport optimized: j.mp/bplateviewport -->
        <meta name="viewport" content="width=device-width,initial-scale=1, maximum-scale=1">

        <link rel="stylesheet" type="text/css" href="./Python格式字符串（译）_files/gumby.css">
        <link rel="stylesheet" type="text/css" href="./Python格式字符串（译）_files/style.css">
        <link rel="stylesheet" type="text/css" href="./Python格式字符串（译）_files/pygment.css">

        <script async="" src="./Python格式字符串（译）_files/analytics.js"></script><script src="./Python格式字符串（译）_files/modernizr-2.6.2.min.js"></script><style type="text/css"></style>

              <script>
                (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
                (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
                m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
                })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

                ga('create', 'UA-43488080-1', '黑白');
                ga('send', 'pageview');

              </script>

              <script type="text/javascript" src="http://tajs.qq.com/stats?sId=27164999" charset="UTF-8"></script>
 
<script type="text/javascript" async="" src="./Python格式字符串（译）_files/embed.js"></script><script async="" type="text/javascript" src="./Python格式字符串（译）_files/count.js"></script><script src="./Python格式字符串（译）_files/alfie.f51946af45e0b561c60f768335c9eb79.js" async="" charset="UTF-8"></script></head>

<body id="index" class="home">
    <div class="container">

        <div class="row">

          <header id="banner" class="body">
                  <h1><a href="http://youngsterxyf.github.io/">黑 * 白 <strong></strong></a></h1>
          </header><!-- /#banner -->

            <div id="navigation" class="navbar row">
              <a href="http://youngsterxyf.github.io/2013/01/26/python-string-format/#" gumby-trigger="#navigation &gt; ul" class="toggle"><i class="icon-menu"></i></a>
             
              <ul class="columns">
                <li><a href="http://youngsterxyf.github.io/">主 页</a></li>

                <li><a href="http://youngsterxyf.github.io/archives.html">归 档</a></li>
                <li><a href="http://youngsterxyf.github.io/tags.html">标 签</a></li>
                <li><a href="http://youngsterxyf.github.io/pages/tools.html">工具集</a></li>
                <li><a href="http://youngsterxyf.github.io/pages/links.html">链 接</a></li>
                <li><a href="http://youngsterxyf.github.io/pages/tech-share.html">技术分享</a></li>
                <li><a href="http://youngsterxyf.github.io/pages/aboutme.html">关于我</a></li>
                <li><a href="http://youngsterxyf.github.io/feeds/rss.xml">RSS</a></li>

              </ul>
            </div>

<section id="content" class="body">
   <div class="row">
        <div class="columns">
            <header>
              <h2 class="entry-title">
                <a href="./Python格式字符串（译）_files/Python格式字符串（译）.htm" rel="bookmark" title="Permalink to Python格式字符串（译）">Python格式字符串（译）</a></h2>
           
            </header>
            <footer class="post-info">
              <abbr class="published" title="2013-01-26T00:00:00+08:00">
                2013-01-26 六
              </abbr>
              <address class="vcard author">
                By <a class="url fn" href="http://youngsterxyf.github.io/author/youngsterxyf.html">youngsterxyf</a>
              </address>
            </footer><!-- /.post-info -->
            <div class="entry-content">
              <p>原文：<a href="http://mkaz.com/solog/python-string-format">Python String Format</a></p>
<p>译者：<a href="https://github.com/youngsterxyf">youngsterxyf</a></p>
<p>每次使用Python的格式字符串（string formatter），2.7及以上版本的，我都会犯错，并且有生之年，我想我都理解不了它们的文档。我非常习惯于更老的
<code>%</code> 方法。所以着手编写自己的格式字符串手册。若你有一些其他好的示例请告知我。</p>
<h2>格式字符串手册</h2>
<p><strong>数字格式化</strong></p>
<p>下面的表格展示了使用Python的后起新秀str.format()格式化数字的多种方法，包含浮点数格式化与整数格式化示例。可使用
<code>print("FORMAT".format(NUMBER));</code> 来运行示例，因此你可以运行：
<code>print("{:.2f}".format(3.1415926));</code> 来得到第一个示例的输出。</p>
<table border="1" align="center" width="80%">
<tbody><tr><th width="10%">数字</th><th width="10%">格式</th><th width="12%">输出
</th><th width="65%">描述</th></tr>
<tr><td> 3.1415926 </td>
    <td> {:.2f} </td>
    <td> 3.14 </td>
    <td> 保留小数点后两位 </td>
</tr>
<tr><td> 3.1415926 </td>
    <td> {:+.2f} </td>
    <td> +3.14 </td>
    <td> 带符号保留小数点后两位 </td>
</tr>
<tr><td> -1 </td>
    <td> {:+.2f} </td>
    <td> -1.00 </td>
    <td> 带符号保留小数点后两位 </td>
</tr>
<tr><td> 2.71828 </td>
    <td> {:.0f} </td>
    <td> 3 </td>
    <td> 不带小数 </td>
</tr>
<tr><td> 5 </td>
    <td> {:0&gt;2d} </td>
    <td> 05 </td>
    <td> 数字补零 (填充左边, 宽度为2) </td>
</tr>
<tr><td> 5 </td>
    <td> {:x&lt;4d} </td>
    <td> 5xxx </td>
    <td> 数字补x (填充右边, 宽度为4) </td>
</tr>
<tr><td> 10 </td>
    <td> {:x&lt;4d} </td>
    <td> 10xx </td>
    <td> 数字补x (填充右边, 宽度为4) </td>
</tr>
<tr><td> 1000000 </td>
    <td> {:,} </td>
    <td> 1,000,000 </td>
    <td> 以逗号分隔的数字格式 </td>
</tr>
<tr><td> 0.25 </td>
    <td> {:.2%} </td>
    <td> 25.00% </td>
    <td> 百分比格式 </td>
</tr>
<tr><td> 1000000000 </td>
    <td> {:.2e} </td>
    <td> 1.00e+09 </td>
    <td> 指数记法 </td>
</tr>
<tr><td> 13 </td>
    <td> {:10d} </td>
    <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13</td>
    <td> 右对齐 (默认, 宽度为10) </td>
</tr>
<tr><td> 13 </td>
    <td> {:&lt;10d} </td>
    <td> 13 </td>
    <td> 左对齐 (宽度为10)</td>
</tr>
<tr><td> 13 </td>
    <td> {:^10d} </td>
    <td> &nbsp;&nbsp;&nbsp;&nbsp;13 </td>
    <td> 中间对齐 (宽度为10) </td>
</tr>
</tbody></table>

<h2>string.format()基础</h2>
<p>如下是两个基本字符串替换的示例，符号 <code>{}</code>
是替换变量的占位符。若没有指定格式，则直接将变量值作为字符串插入。</p>
<div class="highlight"><pre><span class="n">s1</span> <span class="o">=</span> <span class="s">"so much depends upon {}"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="s">"a red wheel barrow"</span><span class="p">)</span>
<span class="n">s2</span> <span class="o">=</span> <span class="s">"glazed with {} water beside the {} chickens"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="s">"rain"</span><span class="p">,</span> <span class="s">"white"</span><span class="p">)</span>
</pre></div>


<p>你也可以使用变量的位置数值，在字符串中改变它们，进行格式化时，会更加灵活。如果搞错了顺序，你可以轻易地修正而不需要打乱所有的变量。</p>
<div class="highlight"><pre><span class="n">s1</span> <span class="o">=</span> <span class="s">" {0} is better than {1} "</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="s">"emacs"</span><span class="p">,</span> <span class="s">"vim"</span><span class="p">)</span>
<span class="n">s2</span> <span class="o">=</span> <span class="s">" {1} is better than {0} "</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="s">"emacs"</span><span class="p">,</span> <span class="s">"vim"</span><span class="p">)</span>
</pre></div>


<h2>更老的格式字符串符号"%"</h2>
<p>Python2.6之前，格式字符串的使用方法相对更简单些，虽然其能够接收的参数数量有限制。这些方法在Python3.3中仍然有效，但已有含蓄的警告称将完全淘汰这些方法，目前还没有明确的时间进度表。[<a href="http://www.python.org/dev/peps/pep-3101/">PEP-3101</a>]</p>
<p><strong>格式化浮点数：</strong></p>
<div class="highlight"><pre><span class="n">pi</span> <span class="o">=</span> <span class="mf">3.14159</span>
<span class="k">print</span><span class="p">(</span><span class="s">" pi = </span><span class="si">%1.2f</span><span class="s"> "</span><span class="p">,</span> <span class="o">%</span> <span class="n">pi</span><span class="p">)</span>
</pre></div>


<p><strong>多个替换值</strong></p>
<div class="highlight"><pre><span class="n">s1</span> <span class="o">=</span> <span class="s">"cats"</span>
<span class="n">s2</span> <span class="o">=</span> <span class="s">"dogs"</span>
<span class="n">s3</span> <span class="o">=</span> <span class="s">" </span><span class="si">%s</span><span class="s"> and </span><span class="si">%s</span><span class="s"> living together"</span> <span class="o">%</span> <span class="p">(</span><span class="n">s1</span><span class="p">,</span> <span class="n">s2</span><span class="p">)</span>
</pre></div>


<p><strong>没有足够的参数</strong></p>
<p>使用老的格式化方法，我经常犯错"TypeError: not enough arguments for formating
string"，因为我数错了替换变量的数量，编写如下这样的代码很容易漏掉变量。</p>
<div class="highlight"><pre><span class="nb">set</span> <span class="o">=</span>  <span class="p">(</span><span class="o">%</span><span class="n">s</span><span class="p">,</span> <span class="o">%</span><span class="n">s</span><span class="p">,</span> <span class="o">%</span><span class="n">s</span><span class="p">,</span> <span class="o">%</span><span class="n">s</span><span class="p">,</span> <span class="o">%</span><span class="n">s</span><span class="p">,</span> <span class="o">%</span><span class="n">s</span><span class="p">,</span> <span class="o">%</span><span class="n">s</span><span class="p">,</span> <span class="o">%</span><span class="n">s</span><span class="p">)</span> <span class="s">" % (a,b,c,d,e,f,g,h,i)</span>
</pre></div>


<p>对于新的Python格式字符串，可以使用编号的参数，这样你就不需要统计有多少个参数。</p>
<div class="highlight"><pre><span class="nb">set</span> <span class="o">=</span> <span class="nb">set</span> <span class="o">=</span> <span class="s">" ({0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}) "</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">d</span><span class="p">,</span><span class="n">e</span><span class="p">,</span><span class="n">f</span><span class="p">,</span><span class="n">g</span><span class="p">)</span>
</pre></div>


<h2>更多.format()的格式字符串方法</h2>
<p>format()函数提供了相当多的附加特性和功能，如下是一些有用的使用.format()的技巧。</p>
<p><strong>命名参数</strong></p>
<p>你可以将新的格式字符串用作模板引擎，使用命名参数，这样就不要求有严格的顺序。</p>
<div class="highlight"><pre><span class="n">madlib</span> <span class="o">=</span> <span class="s">" I {verb} the {object} off the {place} "</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">verb</span><span class="o">=</span><span class="s">"took"</span><span class="p">,</span> <span class="nb">object</span><span class="o">=</span><span class="s">"cheese"</span><span class="p">,</span> <span class="n">place</span><span class="o">=</span><span class="s">"table"</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">I</span> <span class="n">took</span> <span class="n">the</span> <span class="n">cheese</span> <span class="n">off</span> <span class="n">the</span> <span class="n">table</span>
</pre></div>


<p><strong>多次复用同一个变量</strong></p>
<p>使用<code>%</code> 格式字符串，要求变量有严格的次序，而.format()方法允许如上所示那样任意排列参数，也允许复用。</p>
<div class="highlight"><pre><span class="nb">str</span> <span class="o">=</span> <span class="s">"Oh {0}, {0}! wherefore art thou {0}?"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="s">"Romeo"</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">Oh</span> <span class="n">Romeo</span><span class="p">,</span> <span class="n">Romeo</span><span class="err">!</span> <span class="n">wherefore</span> <span class="n">art</span> <span class="n">thou</span> <span class="n">Romeo</span><span class="err">?</span>
</pre></div>


<p><strong>将数值转换为不同的进制</strong></p>
<p>可以使用如下字母来将数字转换成字母代表的进制，<strong>d</strong>ecimal，he<strong>x</strong>，<strong>o</strong>ctal, <strong>b</strong>inary。</p>
<div class="highlight"><pre><span class="k">print</span><span class="p">(</span><span class="s">"{0:d} - {0:x} - {0:o} - {0:b} "</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="mi">21</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">21</span> <span class="o">-</span> <span class="mi">15</span> <span class="o">-</span> <span class="mi">25</span> <span class="o">-</span><span class="mi">10101</span>
</pre></div>


<p><strong>将格式作为函数来使用</strong></p>
<p>可以将.format()用作函数，这就允许在代码中将普通文本和格式区分开来。例如，你可以在程序的开头包含所有需要使用的格式，然后在后面使用。这也是一种处理国际化的好方法，国际化不仅要求不同的文本，且常常要求不同的数字格式。</p>
<div class="highlight"><pre><span class="c">## 定义格式</span>
<span class="n">email_f</span> <span class="o">=</span> <span class="s">"Your email address was {email}"</span><span class="o">.</span><span class="n">format</span>

<span class="c">### 在另一个地方使用</span>
<span class="k">print</span><span class="p">(</span><span class="n">email_f</span><span class="p">(</span><span class="n">email</span><span class="o">=</span><span class="s">"bob@example.com"</span><span class="p">))</span>
</pre></div>


<p>感谢
<a href="http://www.reddit.com/r/Python/comments/174e1i/python_string_format_cookbook/c82ot0h">earthboundkid</a>在reddit上提供这一技巧。</p>
<h2>其他技巧</h2>
<p><strong>转义大括号</strong></p>
<p>使用str.format()时，若你需要使用大括号，只要写两次就可以了：</p>
<div class="highlight"><pre><span class="k">print</span><span class="p">(</span><span class="s">" The {} set is often represented as { {0} } "</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="s">"empty"</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">The</span> <span class="n">empty</span> <span class="nb">set</span> <span class="ow">is</span> <span class="n">often</span> <span class="n">represented</span> <span class="k">as</span> <span class="p">{</span><span class="mi">0</span><span class="p">}</span>
</pre></div>


<h2>参考资料</h2>
<ul>
<li><a href="http://docs.python.org/3/library/string.html">Python String Library</a> - 标准库文档</li>
</ul>
            </div><!-- /.entry-content -->
            <div class="comments">
              <h3>Comments</h3>
              <div id="disqus_thread"><iframe id="dsq-2" data-disqus-uid="2" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%" src="./Python格式字符串（译）_files/saved_resource.htm" style="width: 100% !important; border: none !important; overflow: hidden !important; height: 756px !important;" horizontalscrolling="no" verticalscrolling="no"></iframe></div>
              <script type="text/javascript">
                var disqus_identifier = "2013/01/26/python-string-format/";
                (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://xiayfblackwhite.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                })();
              </script>
            </div>
        </div><!-- /.twelve.columns -->
 </div><!-- /.row -->
</section>

       </div><!-- /.row -->
    </div><!-- /.container -->


       <div class="container.nopad bg">

    
        <footer id="credits" class="row">
          <div class="seven columns left-center">

                   <address id="about" class="vcard body">
                    Proudly powered by <a href="http://getpelican.com/">Pelican</a>,
                    which takes great advantage of <a href="http://python.org/">Python</a>.
                    <br>
                    Based on the <a target="_blank" href="http://gumbyframework.com/">Gumby Framework</a>
                    </address>
          </div>


          <div class="seven columns">
            <div class="row">
              <ul class="socbtns">

                <li><div class="btn primary"><a href="http://github.com/youngsterxyf" target="_blank">Github</a></div></li>

                <li><div class="btn twitter"><a href="https://twitter.com/youngsterxyf" target="_blank">Twitter</a></div></li>

                <li><div class="btn warning"><a href="http://weibo.com/u/1855563263" target="_blank">Weibo</a></div></li>

                <li><div class="btn douban"><a href="http://www.douban.com/people/youngster21/" target="_blank">Douban</a></div></li>



              </ul>
            </div>
          </div>
        </footer>

    </div>


<script type="text/javascript">
    var disqus_shortname = 'xiayfblackwhite';
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = 'http://' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
</script>
  <script src="./Python格式字符串（译）_files/jquery-1.9.1.min.js"></script>
  <script src="./Python格式字符串（译）_files/gumby.min.js"></script>
  <script src="./Python格式字符串（译）_files/plugins.js"></script>
  <script src="./Python格式字符串（译）_files/main.js"></script>

</body></html>