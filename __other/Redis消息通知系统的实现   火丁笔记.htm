<!DOCTYPE html>
<!-- saved from url=(0033)http://huoding.com/2012/02/29/146 -->
<html lang="en-US"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<title>Redis消息通知系统的实现 | 火丁笔记</title>
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="stylesheet" type="text/css" media="all" href="./Redis消息通知系统的实现   火丁笔记_files/style.css">
<link rel="pingback" href="http://huoding.com/xmlrpc.php">
<!--[if lt IE 9]>
<script src="http://huoding.com/wp-content/themes/twentyeleven/js/html5.js" type="text/javascript"></script>
<![endif]-->
<link rel="alternate" type="application/rss+xml" title="火丁笔记 » Feed" href="http://huoding.com/feed">
<link rel="alternate" type="application/rss+xml" title="火丁笔记 » Comments Feed" href="http://huoding.com/comments/feed">
<link rel="alternate" type="application/rss+xml" title="火丁笔记 » Redis消息通知系统的实现 Comments Feed" href="http://huoding.com/2012/02/29/146/feed">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://huoding.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://huoding.com/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="记一次TIME_WAIT网络故障" href="http://huoding.com/2012/01/19/142">
<link rel="next" title="模式物语之装饰器" href="http://huoding.com/2012/03/04/144">
<meta name="generator" content="WordPress 4.0.1">
<link rel="canonical" href="./Redis消息通知系统的实现   火丁笔记_files/Redis消息通知系统的实现   火丁笔记.htm">
<link rel="shortlink" href="http://huoding.com/?p=146">
<style type="text/css"></style></head>

<body class="single single-post postid-146 single-format-standard single-author singular two-column right-sidebar">
<div id="page" class="hfeed">
	<header id="branding" role="banner">
			<hgroup>
				<h1 id="site-title"><span><a href="http://huoding.com/" rel="home">火丁笔记</a></span></h1>
				<h2 id="site-description">火丁为「灯」，即：「LAMP」！</h2>
			</hgroup>

						<a href="http://huoding.com/">
									<img src="./Redis消息通知系统的实现   火丁笔记_files/wheel.jpg" width="1000" height="288" alt="">
							</a>
			
								<form method="get" id="searchform" action="http://huoding.com/">
		<label for="s" class="assistive-text">Search</label>
		<input type="text" class="field" name="s" id="s" placeholder="Search">
		<input type="submit" class="submit" name="submit" id="searchsubmit" value="Search">
	</form>
			
			<nav id="access" role="navigation">
				<h3 class="assistive-text">Main menu</h3>
								<div class="skip-link"><a class="assistive-text" href="http://huoding.com/2012/02/29/146#content">Skip to primary content</a></div>
												<div class="menu"><ul><li><a href="http://huoding.com/">Home</a></li><li class="page_item page-item-2"><a href="http://huoding.com/about">About</a></li></ul></div>
			</nav><!-- #access -->
	</header><!-- #branding -->


	<div id="main">

		<div id="primary">
			<div id="content" role="main">

				
					<nav id="nav-single">
						<h3 class="assistive-text">Post navigation</h3>
						<span class="nav-previous"><a href="http://huoding.com/2012/01/19/142" rel="prev"><span class="meta-nav">←</span> Previous</a></span>
						<span class="nav-next"><a href="http://huoding.com/2012/03/04/144" rel="next">Next <span class="meta-nav">→</span></a></span>
					</nav><!-- #nav-single -->

					
<article id="post-146" class="post-146 post type-post status-publish format-standard hentry category-technical tag-performance tag-redis">
	<header class="entry-header">
		<h1 class="entry-title">Redis消息通知系统的实现</h1>

				<div class="entry-meta">
			<span class="sep">Posted on </span><a href="./Redis消息通知系统的实现   火丁笔记_files/Redis消息通知系统的实现   火丁笔记.htm" title="20:06:09" rel="bookmark"><time class="entry-date" datetime="2012-02-29T20:06:09+00:00">2012-02-29</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://huoding.com/author/laowang" title="View all posts by 老王" rel="author">老王</a></span></span>		</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

	<div class="entry-content">
		<p>最近忙着用Redis实现一个消息通知系统，今天大概总结了一下技术细节，其中演示代码如果没有特殊说明，使用的都是<a href="https://github.com/nicolasff/phpredis" target="_blank">PhpRedis</a>扩展来实现的。</p>
<p><span id="more-146"></span></p>
<h2>内存</h2>
<p>比如要推送一条全局消息，如果真的给所有用户都推送一遍的话，那么会占用很大的内存，实际上不管粘性有多高的产品，活跃用户同全部用户比起来，都会小很多，所以如果只处理登录用户的话，那么至少在内存消耗上是相当划算的，至于未登录用户，可以推迟到用户下次登录时再处理，如果用户一直不登录，就一了百了了。</p>
<h2>队列</h2>
<p>当大量用户同时登录的时候，如果全部都即时处理，那么很容易就崩溃了，此时可以使用一个队列来保存待处理的登录用户，如此一来顶多是反应慢点，但不会崩溃。</p>
<p>Redis的<a href="http://www.redis.io/commands/#list" target="_blank">LIST</a>数据类型可以很自然的创建一个队列，代码如下：</p>
<pre>&lt;?php

$redis = new Redis;
$redis-&gt;connect('/tmp/redis.sock');

$redis-&gt;lPush('usr', &lt;USRID&gt;);

while ($usr = $redis-&gt;rPop('usr')) {
    var_dump($usr);
}

?&gt;</pre>
<p>出于类似的原因，我们还需要一个队列来保存待处理的消息。当然也可以使用LIST来实现，但LIST只能按照插入的先后顺序实现类似FIFO或LIFO形式的队列，然而消息实际上是有优先级的：比如说个人消息优先级高，全局消息优先级低。此时可以使用<a href="http://www.redis.io/commands/#sorted_set" target="_blank">ZSET</a>来实现，它里面分数的概念很自然的实现了优先级。</p>
<p>不过ZSET没有原生的POP操作，所以我们需要模拟实现，代码如下：</p>
<pre>&lt;?php

class RedisClient extends Redis
{
    const POSITION_FIRST = 0;
    const POSITION_LAST = -1;

    public function zPop($zset)
    {
        return $this-&gt;zsetPop($zset, self::POSITION_FIRST);
    }

    public function zRevPop($zset)
    {
        return $this-&gt;zsetPop($zset, self::POSITION_LAST);
    }

    private function zsetPop($zset, $position)
    {
        $this-&gt;watch($zset);

        $element = $this-&gt;zRange($zset, $position, $position);

        if (!isset($element[0])) {
            return false;
        }

        if ($this-&gt;multi()-&gt;zRem($zset, $element[0])-&gt;exec()) {
            return $element[0];
        }

        return $this-&gt;zsetPop($zset, $position);
    }
}

?&gt;</pre>
<p>模拟实现了POP操作后，我们就可以使用ZSET实现队列了，代码如下：</p>
<pre>&lt;?php

$redis = new RedisClient;
$redis-&gt;connect('/tmp/redis.sock');

$redis-&gt;zAdd('msg', &lt;PRIORITY&gt;, &lt;MSGID&gt;);

while ($msg = $redis-&gt;zRevPop('msg')) {
    var_dump($msg);
}

?&gt;</pre>
<h2>推拉</h2>
<p>以前微博架构中推拉选择的问题已经被大家讨论过很多次了。实际上消息通知系统和微博差不多，也存在推拉选择的问题，同样答案也是类似的，那就是应该推拉结合。具体点说：在登陆用户获取消息的时候，就是一个拉消息的过程；在把消息发送给登陆用户的时候，就是一个推消息的过程。</p>
<h2>速度</h2>
<p>假设要推送一百万条消息的话，那么最直白的实现就是不断的插入，代码如下：</p>
<pre>&lt;?php

for ($msgid = 1; $msgid &lt;= 1000000; $msgid++) {
    $redis-&gt;sAdd('usr:&lt;USRID&gt;:msg', $msgid);
}

?&gt;</pre>
<p>说明：这里我使用了SET数据类型，当然你也可以视需求换成LIST或者ZSET。</p>
<p>Redis的速度是很快的，但是借助<a href="http://redis.io/topics/pipelining" target="_blank">PIPELINE</a>，会更快，代码如下：</p>
<pre>&lt;?php

for ($i = 1; $i &lt;= 100; $i++) {
    $redis-&gt;multi(Redis::PIPELINE);
    for ($j = 1; $j &lt;= 10000; $j++) {
        $msgid = ($i - 1) * 10000 + $j;
        $redis-&gt;sAdd('usr:&lt;USRID&gt;:msg', $msgid);
    }
    $redis-&gt;exec();
}

?&gt;</pre>
<p>说明：所谓PIPELINE，就是省略了无谓的折返跑，把命令打包给服务端统一处理。</p>
<p>前后两段代码在我的测试里，使用PIPELINE的速度大概是不使用PIPELINE的十倍。</p>
<h2>查询</h2>
<p>我们用Redis命令行来演示一下用户是如何查询消息的。</p>
<p>先插入三条消息，其&lt;MSGID&gt;分别是1，2，3：</p>
<pre>redis&gt; HMSET msg:1 title title1 content content1
redis&gt; HMSET msg:2 title title2 content content2
redis&gt; HMSET msg:3 title title3 content content3</pre>
<p>再把这三条消息发送给某个用户，其&lt;USRID&gt;是123：</p>
<pre>redis&gt; SADD usr:123:msg 1
redis&gt; SADD usr:123:msg 2
redis&gt; SADD usr:123:msg 3</pre>
<p>此时如果简单查询用户有哪些消息的话，无疑只能查到一些&lt;MSGID&gt;：</p>
<pre>redis&gt; SMEMBERS usr:123:msg
1) "1"
2) "2"
3) "3"</pre>
<p>如果还需要用程序根据&lt;MSGID&gt;再来一次查询无疑有点低效，好在Redis内置的<a href="http://www.redis.io/commands/sort" target="_blank">SORT</a>命令可以达到事半功倍的效果，实际上它类似于SQL中的JOIN：</p>
<pre>redis&gt; SORT usr:123:msg GET msg:*-&gt;title
1) "title1"
2) "title2"
3) "title3"
redis&gt; SORT usr:123:msg GET msg:*-&gt;content
1) "content1"
2) "content2"
3) "content3"</pre>
<p>SORT的缺点是它只能GET出字符串类型的数据，如果你想要多个数据，就要多次GET：</p>
<pre>redis&gt; SORT usr:123:msg GET msg:*-&gt;title GET msg:*-&gt;content
1) "title1"
2) "content1"
3) "title2"
4) "content2"
5) "title3"
6) "content3"</pre>
<p>很多情况下这显得不够灵活，好在我们可以采用其他一些方法平衡一下利弊，比如说新加一个字段，冗余保存完整消息的序列化，接着只GET这个字段就OK了。</p>
<p>实际暴露查询接口的时候，不会使用PHP等程序来封装，因为那会成倍降低RPS，推荐使用<a href="http://webd.is/" target="_blank">Webdis</a>，它是一个Redis的Web代理，效率没得说。</p>
<p>…</p>
<p>最近<a href="https://www.tumblr.com/" target="_blank">Tumblr</a>发表了一篇类似的文章：<a href="http://engineering.tumblr.com/post/7819252942/staircar-redis-powered-notifications" target="_blank">Staircar: Redis-powered notifications</a>，介绍了他们使用Redis实现消息通知系统的一些情况，有兴趣的不妨一起看看。</p>
			</div><!-- .entry-content -->

	<footer class="entry-meta">
		This entry was posted in <a href="http://huoding.com/category/technical" rel="category tag">Technical</a> and tagged <a href="http://huoding.com/tag/performance" rel="tag">Performance</a>, <a href="http://huoding.com/tag/redis" rel="tag">Redis</a> by <a href="http://huoding.com/author/laowang">老王</a>. Bookmark the <a href="./Redis消息通知系统的实现   火丁笔记_files/Redis消息通知系统的实现   火丁笔记.htm" title="Permalink to Redis消息通知系统的实现" rel="bookmark">permalink</a>.		
			</footer><!-- .entry-meta -->
</article><!-- #post-146 -->

						<div id="comments">
	
	
			<h2 id="comments-title">
			28 thoughts on “<span>Redis消息通知系统的实现</span>”		</h2>

				<nav id="comment-nav-above">
			<h1 class="assistive-text">Comment navigation</h1>
			<div class="nav-previous"></div>
			<div class="nav-next"><a href="http://huoding.com/2012/02/29/146/comment-page-2#comments">Newer Comments →</a></div>
		</nav>
		
		<ol class="commentlist">
				<li class="comment even thread-even depth-1" id="li-comment-1926">
		<article id="comment-1926" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn">vboy</span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-1926"><time datetime="2012-03-07T09:38:17+00:00">2012-03-07 at 09:38:17</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>顶老王</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://huoding.com/2012/02/29/146?replytocom=1926#respond" onclick="return addComment.moveForm(&quot;comment-1926&quot;, &quot;1926&quot;, &quot;respond&quot;, &quot;146&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1931">
		<article id="comment-1931" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn">轩脉刃</span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-1931"><time datetime="2012-03-08T13:31:31+00:00">2012-03-08 at 13:31:31</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>so good….</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://huoding.com/2012/02/29/146?replytocom=1931#respond" onclick="return addComment.moveForm(&quot;comment-1931&quot;, &quot;1931&quot;, &quot;respond&quot;, &quot;146&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-2077">
		<article id="comment-2077" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn">天下第七</span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-2077"><time datetime="2012-03-30T11:26:10+00:00">2012-03-30 at 11:26:10</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>顶，写的不错呀。</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://huoding.com/2012/02/29/146?replytocom=2077#respond" onclick="return addComment.moveForm(&quot;comment-2077&quot;, &quot;2077&quot;, &quot;respond&quot;, &quot;146&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2094">
		<article id="comment-2094" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn">rey</span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-2094"><time datetime="2012-04-01T14:06:48+00:00">2012-04-01 at 14:06:48</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>3月没博文？</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://huoding.com/2012/02/29/146?replytocom=2094#respond" onclick="return addComment.moveForm(&quot;comment-2094&quot;, &quot;2094&quot;, &quot;respond&quot;, &quot;146&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment byuser comment-author-laowang bypostauthor even depth-2" id="li-comment-2097">
		<article id="comment-2097" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn">老王</span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-2097"><time datetime="2012-04-01T21:25:37+00:00">2012-04-01 at 21:25:37</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>整个三月都是在焦灼中度过的：一来工作繁忙；二来身体抱恙。</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-2238">
		<article id="comment-2238" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn">老杨</span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-2238"><time datetime="2012-04-12T18:04:56+00:00">2012-04-12 at 18:04:56</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>实际暴露查询接口的时候，不会使用PHP等程序来封装，因为那会成倍降低RPS，这是一个结论，为什么会这样，博主能解决一下原因么？</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://huoding.com/2012/02/29/146?replytocom=2238#respond" onclick="return addComment.moveForm(&quot;comment-2238&quot;, &quot;2238&quot;, &quot;respond&quot;, &quot;146&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-2239">
		<article id="comment-2239" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn">老杨</span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-2239"><time datetime="2012-04-12T18:30:46+00:00">2012-04-12 at 18:30:46</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>博主能贡献一下源码么？我是一个redis初学者，希望能通过实例快速上手。</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://huoding.com/2012/02/29/146?replytocom=2239#respond" onclick="return addComment.moveForm(&quot;comment-2239&quot;, &quot;2239&quot;, &quot;respond&quot;, &quot;146&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment odd alt depth-2" id="li-comment-78320">
		<article id="comment-78320" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn"><a href="http://mengkang.net/" rel="external nofollow" class="url">mengkang</a></span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-78320"><time datetime="2014-05-08T15:16:30+00:00">2014-05-08 at 15:16:30</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>我也想看，不过，想必和weibo的框架的代码依耐性很强，给了也不一定能看懂，再者也不方便公开，反正就是看完博主这篇文章，还是晕乎的。对于菜鸟我来说。</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-2555">
		<article id="comment-2555" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn"><a href="http://qczx.us/" rel="external nofollow" class="url">海晓</a></span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-2555"><time datetime="2012-06-08T17:37:29+00:00">2012-06-08 at 17:37:29</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>从另一个角度来看,这是半推半拉模型?</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://huoding.com/2012/02/29/146?replytocom=2555#respond" onclick="return addComment.moveForm(&quot;comment-2555&quot;, &quot;2555&quot;, &quot;respond&quot;, &quot;146&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2882">
		<article id="comment-2882" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn">绝影</span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-2882"><time datetime="2012-09-07T01:17:13+00:00">2012-09-07 at 01:17:13</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>不错，很实用</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://huoding.com/2012/02/29/146?replytocom=2882#respond" onclick="return addComment.moveForm(&quot;comment-2882&quot;, &quot;2882&quot;, &quot;respond&quot;, &quot;146&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-3311">
		<article id="comment-3311" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn">su</span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-3311"><time datetime="2012-10-25T16:26:23+00:00">2012-10-25 at 16:26:23</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>您好,请问上面内容跟消息通知有什么关系?<br>
你指的是消息数据放入缓存,然后 Long polling 去查缓存么?</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://huoding.com/2012/02/29/146?replytocom=3311#respond" onclick="return addComment.moveForm(&quot;comment-3311&quot;, &quot;3311&quot;, &quot;respond&quot;, &quot;146&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-3861">
		<article id="comment-3861" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn"><a href="http://rhomobi.com/" rel="external nofollow" class="url">rhomobi</a></span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-3861"><time datetime="2012-11-25T00:17:22+00:00">2012-11-25 at 00:17:22</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>最近有个统计系统，并发写入的量大，考虑是否要用到队列呢。如果将数据直接写入redis，就没有必要搞队列了吧？除非写入redis慢，需要用个队列池子缓冲一下。能否指点一下？</p>
</div>

			<div class="reply">
				<a class="comment-reply-link" href="http://huoding.com/2012/02/29/146?replytocom=3861#respond" onclick="return addComment.moveForm(&quot;comment-3861&quot;, &quot;3861&quot;, &quot;respond&quot;, &quot;146&quot;)">Reply <span>↓</span></a>			</div><!-- .reply -->
		</article><!-- #comment-## -->

	<ul class="children">
	<li class="comment even depth-2" id="li-comment-3862">
		<article id="comment-3862" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn"><a href="http://rhomobi.com/" rel="external nofollow" class="url">rhomobi</a></span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-3862"><time datetime="2012-11-25T00:19:49+00:00">2012-11-25 at 00:19:49</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>就像您文章中提到“当大量用户同时登录的时候，如果全部都即时处理，那么很容易就崩溃了，此时可以使用一个队列来保存待处理的登录用户，如此一来顶多是反应慢点，但不会崩溃。”</p>
<p>加入数据库用的就是redis，还有没有必要再去搞个队列池子缓冲？</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-laowang bypostauthor odd alt depth-2" id="li-comment-3928">
		<article id="comment-3928" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<span class="fn">老王</span> on <a href="http://huoding.com/2012/02/29/146/comment-page-1#comment-3928"><time datetime="2012-11-26T14:19:53+00:00">2012-11-26 at 14:19:53</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>如果直接写入redis，一般来说，只要逻辑不复杂就可以直接操作，不用引入队列，我在文章中所说的登录操作之所以采用了队列，是因为一个用户登录后，涉及很多后续操作，逻辑相对复杂，所以采用队列缓冲一下。</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		</ol>

				<nav id="comment-nav-below">
			<h1 class="assistive-text">Comment navigation</h1>
			<div class="nav-previous"></div>
			<div class="nav-next"><a href="http://huoding.com/2012/02/29/146/comment-page-2#comments">Newer Comments →</a></div>
		</nav>
		
		
	
									<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="http://huoding.com/2012/02/29/146#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://huoding.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required="true"></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required="true"></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30"></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href="" title=""&gt; &lt;abbr title=""&gt; &lt;acronym title=""&gt; &lt;b&gt; &lt;blockquote cite=""&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=""&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=""&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment">
							<input type="hidden" name="comment_post_ID" value="146" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="74eb5bc84e"></p><p style="display: none;"></p>					<input type="hidden" id="ak_js" name="ak_js" value="1417086155303"></form>
							</div><!-- #respond -->
			
</div><!-- #comments -->

				
			</div><!-- #content -->
		</div><!-- #primary -->


	</div><!-- #main -->

	<footer id="colophon" role="contentinfo">

			
<div id="supplementary" class="one">
		<div id="first" class="widget-area" role="complementary">
		<aside id="text-5" class="widget widget_text">			<div class="textwidget"><style>
.more-link { display: none; }
.entry-title { font-size: 24px; }
.singular .entry-title { font-size: 28px; }
.widget ul li { font-size: 12px; }
</style></div>
		</aside><aside id="text-4" class="widget widget_text">			<div class="textwidget"><script type="text/javascript" async="" src="./Redis消息通知系统的实现   火丁笔记_files/ga.js"></script><script type="text/javascript" src="http://tajs.qq.com/stats?sId=26966158" charset="UTF-8"></script>

<script type="text/javascript">
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F6f793d57c492cc3e80dca6b4c005f43a' type='text/javascript'%3E%3C/script%3E"));
</script><script src="http://hm.baidu.com/h.js?6f793d57c492cc3e80dca6b4c005f43a" type="text/javascript"></script>

<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-19027571-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</div>
		</aside>	</div><!-- #first .widget-area -->
	
	
	</div><!-- #supplementary -->
			<div id="site-generator">
								<a href="http://wordpress.org/" title="Semantic Personal Publishing Platform">Proudly powered by WordPress</a>
			</div>
	</footer><!-- #colophon -->
</div><!-- #page -->

<script type="text/javascript" src="./Redis消息通知系统的实现   火丁笔记_files/form.js"></script>
<script type="text/javascript" src="./Redis消息通知系统的实现   火丁笔记_files/comment-reply.min.js"></script>


</body></html>