<!DOCTYPE html>
<!-- saved from url=(0046)http://www.cnblogs.com/zz0412/p/Maven_pom.html -->
<html lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script async="" src="./学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园_files/analytics.js"></script><script async="" src="http://ad.cnblogs.com/ad/postmoduletext?callback=jQuery17005053689191117883_1425365570185&adModuleId=2&content=%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94Maven+pom.xml%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3&_=1425365570370"></script>
<meta charset="utf-8">
<title>学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园</title>
<link type="text/css" rel="stylesheet" href="./学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园_files/blog-common.css">
<link id="MainCss" type="text/css" rel="stylesheet" href="./学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园_files/bundle-ThinkInside.css">
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/zz0412/rss">
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/zz0412/rsd.xml">
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/zz0412/wlwmanifest.xml">
<script async="" type="text/javascript" src="./学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园_files/gpt.js"></script><script src="./学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园_files/jquery.js" type="text/javascript"></script>  
<script type="text/javascript">var currentBlogApp = 'zz0412', cb_enable_mathjax=false;</script>
<script src="./学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园_files/blog-common.js" type="text/javascript"></script>
<style type="text/css"></style><script async="" type="text/javascript" src="http://partner.googleadservices.com/gpt/pubads_impl_57.js"></script></head>
<body>
<a name="top"></a>

<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
	<a id="lnkBlogLogo" href="http://www.cnblogs.com/zz0412/"><img id="blogLogo" src="./学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园_files/logo.gif" alt="返回主页"></a>			
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/zz0412/">爱自己</a></h1>
<h2></h2>



		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/">博客园</a></li>
<li><a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/zz0412/">首页</a></li>
<li><a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a></li>
<li><a id="MyLinks1_ContactLink" class="menu" rel="nofollow" href="http://space.cnblogs.com/msg/send/%e7%88%b1%e8%87%aa%e5%b7%b1">联系</a></li>
<li><a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/zz0412/rss">订阅</a>
<!--<a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/zz0412/rss"><img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /></a>--></li>
<li><a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/">管理</a></li>
</ul>
		<div class="blogStats">
			
			
<!--done-->
随笔- 57&nbsp;
文章- 0&nbsp;
评论- 28&nbsp;

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		

<!--done-->
<div id="topics">
	<div class="post">
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2" href="./学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园_files/学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园.htm">学习笔记——Maven pom.xml配置详解</a>
		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body"><p>POM的全称是“ProjectObjectModel(项目对象模型)”。</p>
<h1>pom.xml详解</h1>
<h2>声明规范</h2>
<p align="left">&lt;projectxmlns="<a href="http://maven.apache.org/POM/4.0.0">http://maven.apache.org/POM/4.0.0</a>"</p>
<p align="left">xmlns:xsi="<a href="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2001/XMLSchema-instance</a>"</p>
<p align="left">xsi:schemaLocation="<a href="http://maven.apache.org/POM/4.0.0">http://maven.apache.org/POM/4.0.0</a><a href="http://maven.apache.org/maven-v4_0_0.xsd">http://maven.apache.org/maven-v4_0_0.xsd</a>"&gt;</p>
<p align="left">&lt;!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。--&gt;</p>
<p align="left">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</p>
<h2>基本内容</h2>
<h3>parent</h3>
<p align="left">&lt;!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。坐标包括groupID，artifactID和version。--&gt;</p>
<p align="left">&lt;parent&gt;</p>
<p align="left">&lt;!--被继承的父项目的构件标识符--&gt;</p>
<p align="left">&lt;artifactId/&gt;</p>
<p align="left">&lt;!--被继承的父项目的全球唯一标识符--&gt;</p>
<p align="left">&lt;groupId/&gt;</p>
<p align="left">&lt;!--被继承的父项目的版本--&gt;</p>
<p align="left">&lt;version/&gt;</p>
<p align="left">&lt;!--父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项目的pom，其次在文件系统的这个位置（relativePath位置），然后在本地仓库，最后在远程仓库寻找父项目的pom。--&gt;</p>
<p align="left">&lt;relativePath/&gt;</p>
<p align="left">&lt;/parent&gt;</p>
<h3>groupId</h3>
<p align="left">&lt;!- groupId在一个组织或项目中通常是特有的。例如：(大概、也许)Maven所有artifacts的groupId都使用org.apache.maven。groupId并不一定必须使用点符号，例如，JUnit项目。注意使用点符号的groupId不必与项目的包结构相同，但它是一个很好的做法。 --&gt;</p>
<p align="left">&lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;</p>
<h3>artifactId</h3>
<p align="left">&lt;!--artifactId一般是该项目的名字。它和groupID一起标识一个唯一的项目。换句话说，你不能有两个不同的项目拥有同样的artifactID和groupID；在某个特定的groupID下，artifactID也必须是唯一的。--&gt;</p>
<p align="left">&lt;artifactId&gt;my-project&lt;/artifactId&gt;</p>
<h3>version</h3>
<p align="left">&lt;!--这是命名的最后一段。groupId：artifactId表示单个项目，但它们无法描绘具体的版本。如：我想要junit:junit项目今天第四版。version定义当前项目的版本，如：1.0（-SNAPSHOT），SNAPSHOT表示快照，说明该项目还处于开发阶段，是不稳定版本；建议version格式为:主版本.次版本.增量版本-限定版本号--&gt;</p>
<p align="left">&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</p>
<h3>packaging</h3>
<p align="left">&lt;!--项目产生的构件类型，例如jar、war、ear、pom等等。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型。默认值jar。--&gt;</p>
<p align="left">&lt;packaging&gt;jar&lt;/packaging&gt;</p>
<p align="left">&lt;!-- ps：</p>
<p align="left">groupId：artifactId：version：packaging在YouTube某些教学视频也称为UUID。</p>
<p align="left">产物是如何储存在仓库中的？存放到私服库时点符号将会被解析成目录分隔符，SNAPSHOT版本在私服库中会被解析成8位日期.时分秒毫秒-序号。序号代表第几次部署。</p>
<p align="left">上面的坐标将会被解析成：org/codehaus/mojo/my-project/1.0-SNAPSHOT/my-project-8位日期.时分秒毫秒-序号.jar</p>
<p align="left">特例：如果你编译源代码将产物存放到本地仓库，将保持不变。</p>
<p align="left">--&gt;</p>
<h3>dependencies</h3>
<p align="left">&lt;!--该元素描述了项目相关的所有依赖。这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&gt;</p>
<p align="left">&lt;dependencies&gt;</p>
<p align="left">&lt;dependency&gt;</p>
<p align="left">&lt;!--依赖的groupID--&gt;</p>
<p align="left">&lt;groupId&gt;org.apache.maven&lt;/groupId&gt;</p>
<p align="left">&lt;!--依赖的artifactID--&gt;</p>
<p align="left">&lt;artifactId&gt;maven-artifact&lt;/artifactId&gt;</p>
<p align="left">&lt;!--依赖的版本号。可以配置成确定的版本号,也可以配置成版本号的范围。</p>
<p align="left">(, )不包含 [, ]包含 例如：[3.8,4.0) 表示3.8 - 4.0的版本，但是不包含4.0</p>
<p align="left">&nbsp;--&gt;</p>
<p align="left">&lt;version&gt;3.8.1&lt;/version&gt;</p>
<p align="left">&lt;!--依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应，尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。如果设置extensions为true，就可以在plugin里定义新的类型。所以前面的类型的例子不完整。--&gt;</p>
<p align="left">&lt;type&gt;jar&lt;/type&gt;</p>
<p align="left">&lt;!--依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，如果你想要构建两个单独的构件成JAR，一个使用Java1.4编译器，另一个使用Java6编译器，你就可以使用分类器来生成两个单独的JAR构件。--&gt;</p>
<p align="left">&lt;classifier&gt;&lt;/classifier&gt;</p>
<p align="left">&lt;!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请<a href="https://maven.apache.org/pom.html#Dependencies">参考依赖机制</a>。</p>
<p align="left">-compile：compile是默认的范围；如果没有提供一个范围，那该依赖的范围就是编译范</p>
<p align="left">围。编译范围依赖在所有的classpath中可用，同时它们也会被打包。</p>
<p align="left">-provided：provided依赖只有在当JDK&nbsp;或者一个容器已提供该依赖之后才使用。例如，&nbsp;如果你开发了一个web&nbsp;应用，你可能在编译&nbsp;classpath&nbsp;中需要可用的Servlet API&nbsp;来编译一个servlet，但是你不会想要在打包好的WAR&nbsp;中包含这个Servlet API；这个Servlet API JAR&nbsp;由你的应用服务器或者servlet&nbsp;容器提供。已提供范围的依赖在编译时&nbsp;（不是运行时）可用。它不具有传递性的，也不会被打包。</p>
<p align="left">-runtime：runtime依赖在运行和测试系统的时候需要，但在编译的时候不需要。比如，你</p>
<p align="left">可能在编译的时候只需要JDBC API JAR，而只有在运行的时候才需要JDBC驱动实</p>
<p align="left">现。</p>
<p align="left">-test： test范围依赖 在一般的 编译和运行时都不需要，它们只有在测试编译和测试运</p>
<p align="left">行阶段可用。</p>
<p align="left">-system：system范围依赖与provided类似，但是你必须显式的提供一个对于本地系统中</p>
<p align="left">JAR文件的路径。这么做是为了允许基于本地对象编译，而这些对象是系统类库</p>
<p align="left">的一部分。这样的构件应该是一直可用的，Maven也不会在仓库中去寻找它。如</p>
<p align="left">果你将一个依赖范围设置成系统范围，你必须同时提供一个systemPath元素。注</p>
<p align="left">意该范围是不推荐使用的（你应该一直尽量去从公共或定制的Maven仓库中引用</p>
<p align="left">依赖）。--&gt;</p>
<p align="left">&lt;scope&gt;test&lt;/scope&gt;</p>
<p align="left">&nbsp;</p>
<p align="left">&lt;!--仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。--&gt;</p>
<p align="left">&lt;systemPath&gt;&lt;/systemPath&gt;</p>
<p align="left">&nbsp;</p>
<p align="left">&lt;!--默认为false,即子项目默认都继承，为true,则子项目必需显示的引入。例如：假设项目A在编译时需要项目B的代码，但运行时并不需要项目B，而且我们可能并不需要所有项目都依赖项目B。--&gt;</p>
<pre>&lt;optional&gt;true&lt;/optional&gt;</pre>
<p align="left">&lt;!--当计算传递依赖时，从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。也可以使用通配符*排除所有依赖。此元素主要用于解决版本冲突问题.--&gt;</p>
<p align="left">&lt;exclusions&gt;</p>
<p align="left">&lt;exclusion&gt;</p>
<p align="left">&lt;artifactId&gt;spring-core&lt;/artifactId&gt;</p>
<p align="left">&lt;groupId&gt;org.springframework&lt;/groupId&gt;</p>
<p align="left">&lt;/exclusion&gt;</p>
<p align="left">&lt;/exclusions&gt;</p>
<p align="left">&lt;!--可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。可选依赖阻断依赖的传递性。--&gt;</p>
<p align="left">&lt;optional&gt;true&lt;/optional&gt;</p>
<p align="left">&lt;/dependency&gt;</p>
<p align="left">&lt;/dependencies&gt;</p>
<p align="left">&nbsp;</p>
<h3>dependencyManagement</h3>
<p align="left">&lt;!--继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖（必须描述groupID和artifactID信息），如果groupID和artifactID以外的一些信息没有描述，则通过groupID和artifactID匹配到这里的依赖，并使用这里的依赖信息。--&gt;</p>
<p align="left">&lt;dependencyManagement&gt;</p>
<p align="left">&lt;!--参见dependencies元素--&gt;</p>
<p align="left">&lt;dependencies&gt;</p>
<p align="left">&lt;dependency&gt;</p>
<p align="left">......</p>
<p align="left">&lt;/dependency&gt;</p>
<p align="left">&lt;/dependencies&gt;</p>
<p align="left">&lt;/dependencyManagement&gt;</p>
<h3>modules</h3>
<p align="left">&lt;!--模块（有时称作子项目）被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--&gt;</p>
<p align="left">&lt;modules/&gt;</p>
<p align="left">&lt;!-- Ps：继承和模块的区别：继承父不知子，但子知父。模块父知子，但子不知父。所以在具体的项目中一般都是继承和模块融合使用。 --&gt;</p>
<h3>properties</h3>
<p>&lt;!--键值对，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里profiles→properties元素的说明）。格式是&lt;name&gt;value&lt;/name&gt;。--&gt;</p>
<p align="left">&lt;properties&gt;</p>
<p align="left">&lt;dept&gt;No&lt;/dept&gt;</p>
<p align="left">&lt;/properties&gt;</p>
<p align="left">&nbsp;</p>
<h2>编译设置</h2>
<h3>build</h3>
<p align="left">&lt;!--构建项目需要的信息--&gt;</p>
<p align="left">&lt;build&gt;</p>
<p align="left">&lt;!-- 预定义执行的目标或者阶段，必须和命令行的参数相同。如：jar:jar或者clean install等等。例如：defaultGoal配置clean install ，在命令行输入mvn时会自动拼接成mvn clean install。偷懒的福音啊。--&gt;</p>
<pre>&lt;defaultGoal&gt;install&lt;/defaultGoal&gt;</pre>
<pre>&lt;!-- 编译输出目录，默认值${basedir}/target(不建议修改) --&gt;</pre>
<pre>&lt;directory&gt;${basedir}/target&lt;/directory&gt;</pre>
<pre>&lt;!-- 构建产物的名称，没有文件扩展名。默认值${artifactId}-${version}。 --&gt;</pre>
<pre>&lt;finalName&gt;${artifactId}-${version}&lt;/finalName&gt;</pre>
<pre>&lt;!-- 单独过滤某个文件，更多内容请访问<a href="http://maven.apache.org/guides/getting-started/index.html#How_do_I_filter_resource_files">如何过滤资源文件</a> --&gt;</pre>
<pre>&lt;filters&gt;</pre>
<pre>&nbsp;&nbsp;&nbsp; &lt;filter&gt;src/main/filters/filter.properties&lt;/filter&gt;</pre>
<pre>&lt;/filters&gt;</pre>
<p align="left">&lt;!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。--&gt;</p>
<p align="left">&lt;resources&gt;</p>
<p align="left">&lt;!--这个元素描述了项目相关的资源路径--&gt;</p>
<p align="left">&lt;resource&gt;</p>
<p align="left">&lt;!-- &nbsp;指定build后的resource存放的文件夹。该路径默认是basedir。通常被打包在JAR中的resources的目标路径为META-INF --&gt;</p>
<p align="left">&lt;targetPath&gt;&lt;/targetPath&gt;</p>
<p align="left">&lt;!--是否使用参数值代替参数名。如：aa=name 将my ${aa}显示为my name。true代表替换，false代表不替换。参数值取自properties元素、文件里配置的属性或者命令行的-D选项。有@aa@和${aa}俩种写法。更多内容请查看<a href="http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html">在线帮助</a>--&gt;</p>
<p>&lt;filtering&gt;false&lt;/filtering&gt;</p>
<p align="left">&lt;!--描述存放资源的目录，该路径相对POM路径。默认值${basedir}/src/main/resources --&gt;</p>
<p align="left">&lt;directory&gt;${basedir}/src/main/resources &lt;/directory&gt;</p>
<p align="left">&lt;!--用于指定要包括的文件。可以使用通配符*。例如**/*.xml。 --&gt;</p>
<p align="left">&lt;includes&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;include&gt;configuration.xml&lt;/include&gt;</p>
<p align="left">&nbsp;&lt;/includes&gt;</p>
<p align="left">&lt;!--用于指定不需要包括的文件。可以使用通配符*。例如**/*.xml。如果和includes的配置冲突，excludes的优先级更高。 --&gt;</p>
<p align="left">&lt;excludes&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;exclude&gt;**/*.properties&lt;/exclude&gt;</p>
<p align="left">&lt;/excludes&gt;</p>
<p align="left">&lt;/resource&gt;</p>
<p align="left">&lt;/resources&gt;</p>
<p align="left">&lt;!--该testResources元素块包含testResource元素。它们的定义是类似的resource&nbsp;元素，仅在测试阶段使用。和resource元素唯一一点不同是testResource的默认值是${project.basedir}/src/test/resources。测试资源是不会部署。--&gt;</p>
<p align="left">&lt;testResources&gt;</p>
<p align="left">&lt;testResource&gt;</p>
<p align="left">&lt;targetPath/&gt;</p>
<p align="left">&lt;filtering/&gt;</p>
<p align="left">&lt;directory/&gt;</p>
<p align="left">&lt;includes/&gt;</p>
<p align="left">&lt;excludes/&gt;</p>
<p align="left">&lt;/testResource&gt;</p>
<p align="left">&lt;/testResources&gt;</p>
<p align="left">&lt;plugins&gt;</p>
<p align="left">&lt;!--plugin元素包含描述插件所需要的信息。--&gt;</p>
<p align="left">&lt;plugin&gt;</p>
<p align="left">&lt;!--插件在仓库里的groupID--&gt;</p>
<p align="left">&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</p>
<p align="left">&lt;!--插件在仓库里的artifactID--&gt;</p>
<p align="left">&lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</p>
<p align="left">&lt;!--被使用的插件的版本（或版本范围）--&gt;</p>
<p align="left">&lt;version&gt;2.0&lt;/version&gt;</p>
<p align="left">&lt;!--是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该元素才被设置成enabled。--&gt;</p>
<p align="left">&lt;extensions&gt;false&lt;/extensions&gt;</p>
<p align="left">&lt;!-- true 或 false ,这个插件的配置是否，可以继承。默认true。&nbsp; --&gt;</p>
<p align="left">&lt;inherited&gt;true&lt;/inherited&gt;</p>
<p align="left">&lt;!-- 请查阅https://maven.apache.org/pom.html#Plugins或者查阅中文版http://blog.csdn.net/tomato__/article/details/13625497 --&gt;</p>
<p align="left">&lt;configuration&gt;</p>
<p align="left">&lt;classifier&gt;test&lt;/classifier&gt;</p>
<p align="left">&lt;/configuration&gt;</p>
<p align="left">&lt;!-- 请参考dependencies元素&nbsp; --&gt;</p>
<p align="left">&lt;dependencies&gt;</p>
<p align="left">&lt;dependency&gt;</p>
<p align="left">&nbsp; &lt;groupId/&gt;</p>
<p align="left">&nbsp; &lt;artifactId/&gt;</p>
<p align="left">&nbsp; &lt;version/&gt;</p>
<p align="left">&nbsp; &lt;type/&gt;</p>
<p align="left">&nbsp; &lt;classifier/&gt;</p>
<p align="left">&nbsp; &lt;scope/&gt;</p>
<p align="left">&nbsp; &lt;systemPath/&gt;</p>
<p align="left">&nbsp; &lt;exclusions&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;exclusion&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &lt;artifactId/&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &lt;groupId/&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/exclusion&gt;</p>
<p align="left">&nbsp; &lt;/exclusions&gt;</p>
<p align="left">&nbsp; &lt;optional/&gt;</p>
<p align="left">&lt;/dependency&gt;</p>
<p align="left">&lt;/dependencies&gt;</p>
<p align="left">&lt;!--在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。--&gt;</p>
<p align="left">&lt;executions&gt;</p>
<p align="left">&lt;!--execution元素包含了插件执行需要的信息--&gt;</p>
<p align="left">&lt;execution&gt;</p>
<p align="left">&lt;!--执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标--&gt;</p>
<p align="left">&lt;id&gt;echodir&lt;/id&gt;</p>
<p align="left">&lt;!--绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段--&gt;</p>
<p align="left">&lt;phase&gt;verify&lt;/phase&gt;</p>
<p align="left">&lt;!--配置的执行目标--&gt;</p>
<p align="left">&lt;goals&gt;</p>
<p align="left">&lt;goal&gt;run&lt;/goal&gt;</p>
<p align="left">&lt;/goals&gt;</p>
<p align="left">&lt;!--配置是否被传播到子POM--&gt;</p>
<p align="left">&lt;inherited&gt;false&lt;/inherited&gt;</p>
<p align="left">&lt;!-- 请查阅https://maven.apache.org/pom.html#Plugins --&gt;</p>
<p align="left">&lt;configuration&gt;</p>
<p align="left">&lt;tasks&gt;</p>
<p align="left">&lt;echo&gt;Build Dir: ${project.build.directory}&lt;/echo&gt;</p>
<p align="left">&lt;/tasks&gt;</p>
<p align="left">&lt;/configuration&gt;</p>
<p align="left">&lt;/execution&gt;</p>
<p align="left">&lt;/executions&gt;</p>
<p align="left">&lt;/plugin&gt;</p>
<p align="left">&lt;/plugins&gt;</p>
<p align="left">&lt;!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置--&gt;</p>
<p align="left">&lt;pluginManagement&gt;</p>
<p align="left">&lt;plugins&gt;</p>
<p align="left">.................</p>
<p align="left">&lt;/plugins&gt;</p>
<p align="left">&lt;/pluginManagement&gt;</p>
<p align="left">&lt;!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--&gt;</p>
<p align="left">&lt;sourceDirectory&gt;${basedir}/src/main/java&lt;/sourceDirectory&gt;</p>
<p align="left">&lt;!--该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容会被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。--&gt;</p>
<p align="left">&lt;scriptSourceDirectory&gt;${basedir}/src/main/scripts&lt;/scriptSourceDirectory&gt;</p>
<p align="left">&lt;!--该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--&gt;</p>
<p align="left">&lt;testSourceDirectory&gt;${basedir}/src/test/java&lt;/testSourceDirectory&gt;</p>
<p align="left">&lt;!--被编译过的应用程序class文件存放的目录。--&gt;</p>
<p align="left">&lt;outputDirectory&gt;${basedir}/target/classes&lt;/outputDirectory&gt;</p>
<p align="left">&lt;!--被编译过的测试class文件存放的目录。--&gt;</p>
<p align="left">&lt;testOutputDirectory&gt;${basedir}/target/test-classes&lt;/testOutputDirectory&gt;</p>
<p align="left">&lt;!--使用来自该项目的一系列构建扩展--&gt;</p>
<p align="left">&lt;extensions&gt;</p>
<p align="left">&lt;!--描述使用到的构建扩展。--&gt;</p>
<p align="left">&lt;extension&gt;</p>
<p align="left">&lt;!--构建扩展的groupId--&gt;</p>
<p align="left">&lt;groupId/&gt;</p>
<p align="left">&lt;!--构建扩展的artifactId--&gt;</p>
<p align="left">&lt;artifactId/&gt;</p>
<p align="left">&lt;!--构建扩展的版本--&gt;</p>
<p align="left">&lt;version/&gt;</p>
<p align="left">&lt;/extension&gt;</p>
<p align="left">&lt;/extensions&gt;</p>
<p align="left">&lt;/build&gt;</p>
<h3>reporting</h3>
<p align="left">&lt;!--该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。在页面导航栏能看到所有报表的链接。--&gt;</p>
<p align="left">&lt;reporting&gt;</p>
<pre>&lt;!--所有产生的报表存放到哪里。默认值是${basedir}/target/site</pre>
<p align="left">。--&gt;</p>
<pre>&lt;outputDirectory&gt;${basedir}/target/site&lt;/outputDirectory&gt;</pre>
<p align="left">&lt;!--如果为true，则网站不包括默认的报表。这包括“项目信息”菜单中的报表。默认false--&gt;</p>
<p align="left">&lt;excludeDefaults&gt;false&lt;/excludeDefaults&gt;</p>
<p align="left">&lt;!--使用的报表插件和他们的配置。--&gt;</p>
<p align="left">&lt;plugins&gt;</p>
<p align="left">&lt;!--plugin元素包含描述报表插件需要的信息--&gt;</p>
<p align="left">&lt;plugin&gt;</p>
<p align="left">&lt;!--报表插件在仓库里的groupID,<strong>默认值是</strong>&nbsp;:&nbsp;<tt>org.apache.maven.plugins</tt>&nbsp;。--&gt;</p>
<p align="left">&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</p>
<p align="left">&lt;!--报表插件在仓库里的artifactID--&gt;</p>
<pre>&lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;</pre>
<p align="left">&lt;!--被使用的报表插件的版本（或版本范围）--&gt;</p>
<p align="left">&lt;version&gt;2.7&lt;/version&gt;</p>
<p align="left">&lt;!--任何配置是否被传播到子项目，默认true--&gt;</p>
<p align="left">&lt;inherited&gt;true&lt;inherited/&gt;</p>
<p align="left">&lt;!--报表插件的配置--&gt;</p>
<p align="left">&lt;configuration/&gt;</p>
<p align="left">&lt;!--一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标。例如，有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报表集，对应另一个执行目标--&gt;</p>
<p align="left">&lt;reportSets&gt;</p>
<p align="left">&lt;!--表示报表的一个集合，以及产生该集合的配置--&gt;</p>
<p align="left">&lt;reportSet&gt;</p>
<p align="left">&lt;!--报表集合的唯一标识符，POM继承时用到，默认值：default --&gt;</p>
<p align="left">&lt;id&gt;default&lt;id&gt;</p>
<p align="left">&lt;!--产生报表集合时，被使用的报表的配置--&gt;</p>
<p align="left">&lt;configuration/&gt;</p>
<p align="left">&lt;!--配置是否被继承到子POMs--&gt;</p>
<p align="left">&lt;inherited/&gt;</p>
<p align="left">&lt;!--这个集合里使用到哪些报表--&gt;</p>
<p align="left">&lt;reports/&gt;</p>
<p align="left">&lt;/reportSet&gt;</p>
<p align="left">&lt;/reportSets&gt;</p>
<p align="left">&lt;/plugin&gt;</p>
<p align="left">&lt;/plugins&gt;</p>
<p align="left">&lt;/reporting&gt;</p>
<h2>项目信息</h2>
<h3>name</h3>
<p align="left">&lt;!--项目的名称,Maven产生的文档用--&gt;</p>
<p align="left">&lt;name&gt;banseon-maven&lt;/name&gt;</p>
<h3>description</h3>
<p align="left">&lt;!--项目的详细描述,Maven产生的文档用。当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标签），不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。--&gt;</p>
<p align="left">&lt;description&gt;Amavenprojecttostudymaven.&lt;/description&gt;</p>
<h3>url</h3>
<p align="left">&lt;!--项目主页的URL,Maven产生的文档用--&gt;</p>
<p align="left">&lt;url&gt;http://www.baidu.com/banseon&lt;/url&gt;</p>
<h3>inceptionYear</h3>
<p align="left">&lt;!--项目创建年份，4位数字。当产生版权信息时需要使用这个值。--&gt;</p>
<p align="left">&lt;inceptionYear/&gt;</p>
<h3>licenses</h3>
<p align="left">&lt;!--该元素描述了项目所有License列表。应该只列出该项目的license列表，不要列出依赖项目的license列表。如果列出多个license，用户可以选择它们中的一个而不是接受所有license。--&gt;</p>
<p align="left">&lt;licenses&gt;</p>
<p align="left">&lt;!--描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。--&gt;</p>
<p align="left">&lt;license&gt;</p>
<p align="left">&lt;!--<span style="text-decoration: underline;">完整的法律许可的名称。</span> --&gt;</p>
<p align="left">&lt;name&gt;Apache2&lt;/name&gt;</p>
<p align="left">&lt;!--官方的license正文页面的URL--&gt;</p>
<p align="left">&lt;url&gt;http://www.baidu.com/banseon/LICENSE-2.0.txt&lt;/url&gt;</p>
<p align="left">&lt;!--项目分发的主要方式：</p>
<p align="left">repo，可以从Maven库下载</p>
<p align="left">manual，用户必须手动下载和安装依赖--&gt;</p>
<p align="left">&lt;distribution&gt;repo&lt;/distribution&gt;</p>
<p align="left">&lt;!--关于license的补充信息--&gt;</p>
<p align="left">&lt;comments&gt;Abusiness-friendlyOSSlicense&lt;/comments&gt;</p>
<p align="left">&lt;/license&gt;</p>
<p align="left">&lt;/licenses&gt;</p>
<h3>organization</h3>
<p align="left">&lt;!--描述项目所属组织的各种属性。Maven产生的文档用--&gt;</p>
<p align="left">&lt;organization&gt;</p>
<p align="left">&lt;!--组织的全名--&gt;</p>
<p align="left">&lt;name&gt;demo&lt;/name&gt;</p>
<p align="left">&lt;!--组织主页的URL--&gt;</p>
<p align="left">&lt;url&gt;http://www.baidu.com/banseon&lt;/url&gt;</p>
<p align="left">&lt;/organization&gt;</p>
<h3>developers</h3>
<p align="left">&lt;!--项目开发者列表--&gt;</p>
<p align="left">&lt;developers&gt;</p>
<p align="left">&lt;!--某个项目开发者的信息--&gt;</p>
<p align="left">&lt;developer&gt;</p>
<p align="left">&lt;!--SCM里项目开发者的唯一标识符--&gt;</p>
<p align="left">&lt;id&gt;HELLOWORLD&lt;/id&gt;</p>
<p align="left">&lt;!--项目开发者的全名--&gt;</p>
<p align="left">&lt;name&gt;banseon&lt;/name&gt;</p>
<p align="left">&lt;!--项目开发者的email--&gt;</p>
<p align="left">&lt;email&gt;banseon@126.com&lt;/email&gt;</p>
<p align="left">&lt;!--项目开发者的主页的URL--&gt;</p>
<p align="left">&lt;url/&gt;</p>
<p align="left">&lt;!--项目开发者在项目中扮演的角色，角色元素描述了各种角色--&gt;</p>
<p align="left">&lt;roles&gt;</p>
<p align="left">&lt;role&gt;ProjectManager&lt;/role&gt;</p>
<p align="left">&lt;role&gt;Architect&lt;/role&gt;</p>
<p align="left">&lt;/roles&gt;</p>
<p align="left">&lt;!--项目开发者所属组织--&gt;</p>
<p align="left">&lt;organization&gt;demo&lt;/organization&gt;</p>
<p align="left">&lt;!--项目开发者所属组织的URL--&gt;</p>
<p align="left">&lt;organizationUrl&gt;http://hi.baidu.com/banseon&lt;/organizationUrl&gt;</p>
<p align="left">&lt;!--项目开发者所在时区，-12到14范围内的整数。--&gt;</p>
<p align="left">&lt;timezone&gt;-5&lt;/timezone&gt;</p>
<p align="left">&lt;!-- 其他配置，键值对 --&gt;</p>
<p align="left">&lt;properties&gt;</p>
<p align="left">&lt;picUrl&gt;http://tinyurl.com/prv4t&lt;/picUrl&gt;</p>
<p align="left">&lt;/properties&gt;</p>
<p align="left">&lt;/developer&gt;</p>
<p align="left">&lt;/developers&gt;</p>
<h3>contributors</h3>
<p align="left">&lt;!--项目的其他贡献者列表--&gt;</p>
<p align="left">&lt;contributors&gt;</p>
<p align="left">&lt;!--项目的其他贡献者。参见developers/developer元素--&gt;</p>
<p align="left">&lt;contributor&gt;</p>
<p align="left">&lt;name/&gt;&lt;email/&gt;&lt;url/&gt;&lt;organization/&gt;&lt;organizationUrl/&gt;&lt;roles/&gt;&lt;timezone/&gt;&lt;properties/&gt;</p>
<p align="left">&lt;/contributor&gt;</p>
<p align="left">&lt;/contributors&gt;</p>
<h2>环境设置</h2>
<h3>issueManagement</h3>
<p align="left">&lt;!--项目的问题管理系统(Bugzilla,Jira,Scarab,或任何你喜欢的问题管理系统)的名称和URL，本例为jira--&gt;</p>
<p align="left">&lt;issueManagement&gt;</p>
<p align="left">&lt;!--问题管理系统（例如jira）的名字，--&gt;</p>
<p align="left">&lt;system&gt;jira&lt;/system&gt;</p>
<p align="left">&lt;!--该项目使用的问题管理系统的URL--&gt;</p>
<p align="left">&lt;url&gt;http://jira.baidu.com/banseon&lt;/url&gt;</p>
<p align="left">&lt;/issueManagement&gt;</p>
<h3>ciManagement</h3>
<p align="left">&lt;!--项目持续集成信息--&gt;</p>
<p align="left">&lt;ciManagement&gt;</p>
<p align="left">&lt;!--持续集成系统的名字，例如continuum--&gt;</p>
<p align="left">&lt;system&gt;continuum&lt;/system&gt;</p>
<p align="left">&lt;!--该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。--&gt;</p>
<p align="left">&lt;url&gt;http://127.0.0.1:8080/continuum&lt;/url&gt;</p>
<p align="left">&lt;!--构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告）--&gt;</p>
<p align="left">&lt;notifiers&gt;</p>
<p align="left">&lt;!--配置一种方式，当构建中断时，以该方式通知用户/开发者--&gt;</p>
<p align="left">&lt;notifier&gt;</p>
<p align="left">&lt;!--传送通知的途径--&gt;</p>
<p align="left">&lt;type&gt;mail&lt;/type&gt;</p>
<p align="left">&lt;!--发生错误时是否通知--&gt;</p>
<p align="left">&lt;sendOnError&gt;true&lt;/sendOnError&gt;</p>
<p align="left">&lt;!--构建失败时是否通知--&gt;</p>
<p align="left">&lt;sendOnFailure&gt;true&lt;/sendOnFailure&gt;</p>
<p align="left">&lt;!--构建成功时是否通知--&gt;</p>
<p align="left">&lt;sendOnSuccess&gt;false&lt;/sendOnSuccess&gt;</p>
<p align="left">&lt;!--发生警告时是否通知--&gt;</p>
<p align="left">&lt;sendOnWarning&gt;false&lt;/sendOnWarning&gt;</p>
<p align="left">&lt;!--弃用。通知发送到哪里--&gt;</p>
<p align="left">&lt;address/&gt;</p>
<p align="left">&lt;!--通知扩展配置项--&gt;</p>
<p align="left">&lt;configuration&gt;&lt;address&gt;continuum@127.0.0.1&lt;/address&gt;&lt;/configuration&gt;</p>
<p align="left">&lt;/notifier&gt;</p>
<p align="left">&lt;/notifiers&gt;</p>
<p align="left">&lt;/ciManagement&gt;</p>
<h3>mailingLists</h3>
<p align="left">&lt;!--项目相关邮件列表信息--&gt;</p>
<p align="left">&lt;mailingLists&gt;</p>
<p align="left">&lt;!--该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。--&gt;</p>
<p align="left">&lt;mailingList&gt;</p>
<p align="left">&lt;!--邮件的名称--&gt;</p>
<p align="left">&lt;name&gt;User List&lt;/name&gt;</p>
<p align="left">&lt;!--发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto:链接会被自动创建--&gt;</p>
<p align="left">&lt;post&gt;user@127.0.0.1&lt;/post&gt;</p>
<p align="left">&lt;!--订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto:链接会被自动创建--&gt;</p>
<p align="left">&lt;subscribe&gt;user-subscribe@127.0.0.1&lt;/subscribe&gt;</p>
<p align="left">&lt;!--取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto:链接会被自动创建--&gt;</p>
<p align="left">&lt;unsubscribe&gt;user-unsubscribe@127.0.0.1&lt;/unsubscribe&gt;</p>
<p align="left">&lt;!--你可以浏览邮件信息的URL--&gt;</p>
<p align="left">&lt;archive&gt;http://127.0.0.1/user/&lt;/archive&gt;</p>
<p align="left">&lt;!--备用url的链接,可以浏览存档列表。--&gt;</p>
<p align="left">&lt;otherArchives&gt;</p>
<p align="left">&lt;otherArchive&gt;http://base.google.com/base/1/127.0.0.1&lt;/otherArchive&gt;</p>
<p align="left">&lt;/mailingList&gt;</p>
<p align="left">&lt;/mailingLists&gt;</p>
<h3>scm</h3>
<p align="left">&lt;!--SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。--&gt;</p>
<p align="left">&lt;scm&gt;</p>
<p align="left">&lt;!--SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的<a href="http://maven.apache.org/scm/scm-url-format.html">URL格式</a>和<a href="http://maven.apache.org/scm/scms-overview.html">支持列表</a>。该连接只读。--&gt;</p>
<p align="left">&lt;connection&gt;scm:svn:http://127.0.0.1/svn/my-project&lt;/connection&gt;</p>
<p align="left">&lt;!--给开发者使用的，类似connection元素。即该连接不仅仅只读--&gt;</p>
<p align="left">&lt;developerConnection&gt;scm:svn:https://127.0.0.1/svn/my-project&lt;/developerConnection&gt;</p>
<p align="left">&lt;!--当前代码的标签，在开发阶段默认为HEAD--&gt;</p>
<p align="left">&lt;tag&gt;HEAD&lt;/tag&gt;</p>
<p align="left">&lt;!--指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。--&gt;</p>
<p align="left">&lt;url&gt;http://127.0.0.1/websvn/my-project&lt;/url&gt;</p>
<p align="left">&lt;/scm&gt;</p>
<h3>prerequisites</h3>
<p align="left">&lt;!--描述了这个项目构建环境中的前提条件。--&gt;</p>
<p align="left">&lt;prerequisites&gt;</p>
<p align="left">&lt;!--构建该项目或使用该插件所需要的Maven的最低版本。默认值：2.0--&gt;</p>
<p align="left">&lt;maven&gt;2.0.6&lt;/maven&gt;</p>
<p align="left">&lt;/prerequisites&gt;</p>
<h3>repositories</h3>
<p align="left">&lt;!--远程仓库列表，它是Maven用来填充构建系统本地仓库所使用的一组远程项目。 --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&lt;repositories&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--包含需要连接到远程仓库的信息 --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;repository&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--远程仓库唯一标识--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;id&gt;codehausSnapshots&lt;/id&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--远程仓库名称 --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Codehaus Snapshots&lt;/name&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--如何处理远程仓库里发布版本的下载--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;releases&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。&nbsp; --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;enabled&gt;false&lt;/enabled&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。 --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;updatePolicy&gt;always&lt;/updatePolicy&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--当Maven验证构件校验文件失败时该怎么做-ignore（忽略），fail（失败），或者warn（警告）。--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;checksumPolicy&gt;warn&lt;/checksumPolicy&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/releases&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;snapshots&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;enabled/&gt;&lt;updatePolicy/&gt;&lt;checksumPolicy/&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/snapshots&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--远程仓库URL，按protocol://hostname/path形式 --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;url&gt;http://snapshots.maven.codehaus.org/maven2&lt;/url&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。 --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;layout&gt;default&lt;/layout&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/repository&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&lt;/repositories&gt;</p>
<h3>pluginRepositories</h3>
<p>&lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&gt;</p>
<p>&lt;pluginRepositories&gt;</p>
<p>&lt;pluginRepository&gt;</p>
<p>&lt;releases&gt;</p>
<p>&lt;enabled/&gt;</p>
<p>&lt;updatePolicy/&gt;</p>
<p>&lt;checksumPolicy/&gt;</p>
<p>&lt;/releases&gt;</p>
<p>&lt;snapshots&gt;</p>
<p>&lt;enabled/&gt;</p>
<p>&lt;updatePolicy/&gt;</p>
<p>&lt;checksumPolicy/&gt;</p>
<p>&lt;/snapshots&gt;</p>
<p>&lt;id/&gt;</p>
<p>&lt;name/&gt;</p>
<p>&lt;url/&gt;</p>
<p>&lt;layout/&gt;</p>
<p>&lt;/pluginRepository&gt;</p>
<p>&lt;/pluginRepositories&gt;</p>
<h3>distributionManagement</h3>
<p align="left">&lt;!--项目分发信息，在执行mvndeploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。--&gt;</p>
<p align="left">&lt;distributionManagement&gt;</p>
<p align="left">&lt;!--部署项目产生的构件到远程仓库需要的信息，参见repositories/repository元素--&gt;</p>
<p align="left">&lt;repository&gt;</p>
<p align="left">&lt;!--true:分配给快照一个唯一的版本号（由时间戳和构建流水号组成）。false：每次都使用相同的版本号 --&gt;</p>
<p align="left">&lt;uniqueVersion&gt;true&lt;/uniqueVersion&gt;</p>
<p align="left">&nbsp;&lt;id/&gt;</p>
<p align="left">&lt;name/&gt;</p>
<p align="left">&lt;url/&gt;</p>
<p align="left">&nbsp;&lt;layout/&gt;</p>
<p align="left">&lt;releases&gt;</p>
<p align="left">&lt;enabled/&gt;</p>
<p align="left">&lt;updatePolicy/&gt;</p>
<p align="left">&lt;checksumPolicy/&gt;</p>
<p align="left">&lt;/releases&gt;</p>
<p align="left">&lt;snapshots&gt;</p>
<p align="left">&lt;enabled/&gt;</p>
<p align="left">&lt;updatePolicy/&gt;</p>
<p align="left">&lt;checksumPolicy/&gt;</p>
<p align="left">&lt;/snapshots&gt;</p>
<p align="left">&lt;/repository&gt;</p>
<p align="left">&lt;!--构件的快照部署到哪里？ --&gt;</p>
<p align="left">&lt;snapshotRepository&gt;</p>
<p align="left">&lt;uniqueVersion&gt;true&lt;/uniqueVersion&gt;</p>
<p align="left">&nbsp;&lt;id/&gt;</p>
<p align="left">&lt;name/&gt;</p>
<p align="left">&lt;url/&gt;</p>
<p align="left">&nbsp;&lt;layout/&gt;</p>
<p align="left">&lt;releases&gt;</p>
<p align="left">&lt;enabled/&gt;</p>
<p align="left">&lt;updatePolicy/&gt;</p>
<p align="left">&lt;checksumPolicy/&gt;</p>
<p align="left">&lt;/releases&gt;</p>
<p align="left">&lt;snapshots&gt;</p>
<p align="left">&lt;enabled/&gt;</p>
<p align="left">&lt;updatePolicy/&gt;</p>
<p align="left">&lt;checksumPolicy/&gt;</p>
<p align="left">&lt;/snapshots&gt;</p>
<p align="left">&lt;/snapshotRepository&gt;</p>
<p align="left">&lt;!--部署项目的网站需要的信息--&gt;</p>
<p align="left">&lt;site&gt;</p>
<p align="left">&lt;!--部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置--&gt;</p>
<p align="left">&lt;id&gt;banseon-site&lt;/id&gt;</p>
<p align="left">&lt;!--部署位置的名称--&gt;</p>
<p align="left">&lt;name&gt;businessapiwebsite&lt;/name&gt;</p>
<p align="left">&lt;!--部署位置的URL，按protocol://hostname/path形式--&gt;</p>
<p align="left">&lt;url&gt;</p>
<p align="left">scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web</p>
<p align="left">&lt;/url&gt;</p>
<p align="left">&lt;/site&gt;</p>
<p align="left">&lt;!--项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位那些不在仓库里的构件（由于license限制）。--&gt;</p>
<p align="left">&lt;downloadUrl/&gt;</p>
<p align="left">&lt;!--如果构件有了新的groupID和artifactID（构件移到了新的位置），这里列出构件的重定位信息。--&gt;</p>
<p align="left">&lt;relocation&gt;</p>
<p align="left">&lt;!--构件新的groupID--&gt;</p>
<p align="left">&lt;groupId/&gt;</p>
<p align="left">&lt;!--构件新的artifactID--&gt;</p>
<p align="left">&lt;artifactId/&gt;</p>
<p align="left">&lt;!--构件新的版本号--&gt;</p>
<p align="left">&lt;version/&gt;</p>
<p align="left">&lt;!--显示给用户的，关于移动的额外信息，例如原因。--&gt;</p>
<p align="left">&lt;message/&gt;</p>
<p align="left">&lt;/relocation&gt;</p>
<p>&lt;!--给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值有：none（默认），converted（仓库管理员从Maven1 POM转换过来），partner（直接从伙伴Maven2仓库同步过来），deployed（从Maven2实例部署），verified（被核实时正确的和最终的）。--&gt;</p>
<p>&lt;status/&gt;</p>
<p>&lt;/distributionManagement&gt;</p>
<h3>profiles</h3>
<p align="left">&lt;!--在列的项目构建profile，如果被激活，会修改构建处理--&gt;</p>
<p align="left">&lt;profiles&gt;</p>
<p align="left">&lt;!--根据环境参数或命令行参数激活某个构建处理--&gt;</p>
<p align="left">&lt;profile&gt;</p>
<p align="left">&lt;!--构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。--&gt;</p>
<p align="left">&lt;id&gt;test&lt;/id&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&lt;!--自动触发profile的条件逻辑。Activation是profile的开启钥匙。如POM中的profile一样，profile的力量来自于它能够在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元素并不是激活profile的唯一方式。settings.xml文件中的activeProfile元素可以包含profile的id。profile也可以通过在命令行，使用-P标记和逗号分隔的列表来显式的激活（如，-P test）。--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&lt;activation&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--profile默认是否激活的标识--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;activeByDefault&gt;false&lt;/activeByDefault&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本不是以1.4开头的JDK。--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;jdk&gt;1.5&lt;/jdk&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;os&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--激活profile的操作系统的名字 --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;Windows XP&lt;/name&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--激活profile的操作系统所属家族(如 'windows')&nbsp; --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;family&gt;Windows&lt;/family&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--激活profile的操作系统体系结构&nbsp; --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;arch&gt;x86&lt;/arch&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--激活profile的操作系统版本--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;5.1.2600&lt;/version&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/os&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--如果Maven检测到某一个属性（其值可以在POM中通过${name}引用），其拥有对应的name = 值，Profile就会被激活。如果值字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹配属性值字段--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--激活profile的属性的名称--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;mavenVersion&lt;/name&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--激活profile的属性的值 --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;2.0.3&lt;/value&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/property&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;file&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--如果指定的文件存在，则激活profile。 --&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;exists&gt;${basedir}/file2.properties&lt;/exists&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--如果指定的文件不存在，则激活profile。--&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;missing&gt;${basedir}/file1.properties&lt;/missing&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/file&gt;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&lt;/activation&gt;</p>
<p align="left">&lt;!--构建项目所需要的信息。参见build元素--&gt;</p>
<p align="left">&lt;build&gt;</p>
<p align="left">&lt;defaultGoal/&gt;</p>
<p align="left">&lt;resources&gt;</p>
<p align="left">&lt;resource&gt;</p>
<p align="left">&lt;targetPath/&gt;&lt;filtering/&gt;&lt;directory/&gt;&lt;includes/&gt;&lt;excludes/&gt;</p>
<p align="left">&lt;/resource&gt;</p>
<p align="left">&lt;/resources&gt;</p>
<p align="left">&lt;testResources&gt;</p>
<p align="left">&lt;testResource&gt;</p>
<p align="left">&lt;targetPath/&gt;&lt;filtering/&gt;&lt;directory/&gt;&lt;includes/&gt;&lt;excludes/&gt;</p>
<p align="left">&lt;/testResource&gt;</p>
<p align="left">&lt;/testResources&gt;</p>
<p align="left">&lt;directory/&gt;&lt;finalName/&gt;&lt;filters/&gt;</p>
<p align="left">&lt;pluginManagement&gt;</p>
<p align="left">&lt;plugins&gt;</p>
<p align="left">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</p>
<p align="left">&lt;plugin&gt;</p>
<p align="left">&lt;groupId/&gt;&lt;artifactId/&gt;&lt;version/&gt;&lt;extensions/&gt;</p>
<p align="left">&lt;executions&gt;</p>
<p align="left">&lt;execution&gt;</p>
<p align="left">&lt;id/&gt;&lt;phase/&gt;&lt;goals/&gt;&lt;inherited/&gt;&lt;configuration/&gt;</p>
<p align="left">&lt;/execution&gt;</p>
<p align="left">&lt;/executions&gt;</p>
<p align="left">&lt;dependencies&gt;</p>
<p align="left">&lt;!--参见dependencies/dependency元素--&gt;</p>
<p align="left">&lt;dependency&gt;</p>
<p align="left">......</p>
<p align="left">&lt;/dependency&gt;</p>
<p align="left">&lt;/dependencies&gt;</p>
<p align="left">&lt;goals/&gt;&lt;inherited/&gt;&lt;configuration/&gt;</p>
<p align="left">&lt;/plugin&gt;</p>
<p align="left">&lt;/plugins&gt;</p>
<p align="left">&lt;/pluginManagement&gt;</p>
<p align="left">&lt;plugins&gt;</p>
<p align="left">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</p>
<p align="left">&lt;plugin&gt;</p>
<p align="left">&lt;groupId/&gt;&lt;artifactId/&gt;&lt;version/&gt;&lt;extensions/&gt;</p>
<p align="left">&lt;executions&gt;</p>
<p align="left">&lt;execution&gt;</p>
<p align="left">&lt;id/&gt;&lt;phase/&gt;&lt;goals/&gt;&lt;inherited/&gt;&lt;configuration/&gt;</p>
<p align="left">&lt;/execution&gt;</p>
<p align="left">&lt;/executions&gt;</p>
<p align="left">&lt;dependencies&gt;</p>
<p align="left">&lt;!--参见dependencies/dependency元素--&gt;</p>
<p align="left">&lt;dependency&gt;</p>
<p align="left">......</p>
<p align="left">&lt;/dependency&gt;</p>
<p align="left">&lt;/dependencies&gt;</p>
<p align="left">&lt;goals/&gt;&lt;inherited/&gt;&lt;configuration/&gt;</p>
<p align="left">&lt;/plugin&gt;</p>
<p align="left">&lt;/plugins&gt;</p>
<p align="left">&lt;/build&gt;</p>
<p align="left">&lt;!--发现依赖和扩展的远程仓库列表。--&gt;</p>
<p align="left">&lt;repositories&gt;</p>
<p align="left">&lt;!--参见repositories/repository元素--&gt;</p>
<p align="left">&lt;repository&gt;</p>
<p align="left">&lt;releases&gt;</p>
<p align="left">&lt;enabled/&gt;&lt;updatePolicy/&gt;&lt;checksumPolicy/&gt;</p>
<p align="left">&lt;/releases&gt;</p>
<p align="left">&lt;snapshots&gt;</p>
<p align="left">&lt;enabled/&gt;&lt;updatePolicy/&gt;&lt;checksumPolicy/&gt;</p>
<p align="left">&lt;/snapshots&gt;</p>
<p align="left">&lt;id/&gt;&lt;name/&gt;&lt;url/&gt;&lt;layout/&gt;</p>
<p align="left">&lt;/repository&gt;</p>
<p align="left">&lt;/repositories&gt;</p>
<p align="left">&lt;!--该元素描述了项目相关的所有依赖。这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&gt;</p>
<p align="left">&lt;dependencies&gt;</p>
<p align="left">&lt;!--参见dependencies/dependency元素--&gt;</p>
<p align="left">&lt;dependency&gt;</p>
<p align="left">......</p>
<p align="left">&lt;/dependency&gt;</p>
<p align="left">&lt;/dependencies&gt;</p>
<p align="left">&lt;!--不赞成使用.现在Maven忽略该元素.--&gt;</p>
<p align="left">&lt;reports/&gt;</p>
<p align="left">&nbsp;</p>
<p align="left">&lt;!--参见distributionManagement元素--&gt;</p>
<p align="left">&lt;distributionManagement&gt;</p>
<p align="left">......</p>
<p align="left">&lt;/distributionManagement&gt;</p>
<p align="left">&lt;!--参见properties元素--&gt;</p>
<p align="left">&lt;properties/&gt;</p>
<p align="left">&lt;/profile&gt;</p>
<p align="left">&lt;/profiles&gt;</p>
<p align="left">&lt;/project&gt;</p>
<p align="left">&lt;!--参考：</p>
<p align="left">http://maven.apache.org/ref/3.1.0/maven-model/maven.html</p>
<p align="left">https://maven.apache.org/pom.html</p>
<p align="left">--&gt;</p></div><div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="BlogPostCategory"></div>
<div id="EntryTag">标签: <a href="http://www.cnblogs.com/zz0412/tag/Maven/">Maven</a></div>
<div id="blog_post_info"><div id="green_channel">
绿色通道：
<a href="javascript:void(0);" id="green_channel_digg" onclick="DiggIt(3793102,cb_blogId,1);green_channel_success(this,&#39;谢谢推荐！&#39;);">好文要顶</a>
<a id="green_channel_follow" onclick="c_follow();" href="javascript:void(0);">关注我</a>
<a id="green_channel_favorite" onclick="AddToWz(cb_entryId);return false;" href="javascript:void(0);">收藏该文</a><a id="green_channel_contact" href="http://space.cnblogs.com/msg/send/%e7%88%b1%e8%87%aa%e5%b7%b1" target="_blank">与我联系</a>
<a id="green_channel_weibo" href="javascript:void(0);" title="分享至新浪微博" onclick="ShareToTsina()"><img src="./学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园_files/icon_weibo_24.png" alt=""></a>
</div>
<div id="author_profile">
<div id="author_profile_info" class="author_profile_info">
<a href="http://home.cnblogs.com/u/zz0412/" target="_blank"><img src="./学习笔记——Maven pom.xml配置详解 - 爱自己 - 博客园_files/20131202111312.png" class="author_avatar" alt=""></a>
<div id="author_profile_detail" class="author_profile_info">
<a href="http://home.cnblogs.com/u/zz0412/">爱自己</a><br>
<a href="http://home.cnblogs.com/u/zz0412/followees">关注 - 5</a><br>
<a href="http://home.cnblogs.com/u/zz0412/followers">粉丝 - 23</a>
</div>
</div>
<div class="clear"></div>
<div id="author_profile_honor"></div>
<div id="author_profile_follow">
    <a href="javascript:void(0);" onclick="c_follow();return false;">+加关注</a>
</div>
</div>
<div id="div_digg">										
    <div class="diggit" onclick="votePost(3793102,&#39;Digg&#39;)">
        <span class="diggnum" id="digg_count">0</span>
    </div>
	<div class="buryit" onclick="votePost(3793102,&#39;Bury&#39;)"> 
		<span class="burynum" id="bury_count">0</span>
	</div>
	<div class="clear"></div>	
	<div class="diggword" id="digg_tips">
    (请您对文章做出评价)
    </div>	
</div>
</div>
<div class="clear"></div>
<div id="post_next_prev"><a href="http://www.cnblogs.com/zz0412/p/mavensz10.html" class="p_n_p_prefix">« </a> 上一篇：<a href="http://www.cnblogs.com/zz0412/p/mavensz10.html" title="发布于2014-06-17 16:49">学习笔记——Maven实战（十）Maven 3，是时候升级了</a><br><a href="http://www.cnblogs.com/zz0412/p/Maven_super_pom.html" class="p_n_p_prefix">» </a> 下一篇：<a href="http://www.cnblogs.com/zz0412/p/Maven_super_pom.html" title="发布于2014-06-17 17:05">学习笔记——Maven超级POM</a><br></div>
</div>


		</div>
		<div class="postDesc">posted @ <span id="post-date">2014-06-17 16:55</span> <a href="http://www.cnblogs.com/zz0412/">爱自己</a> 阅读(<span id="post_view_count">588</span>) 评论(<span id="post_comment_count">0</span>)  <a href="http://i.cnblogs.com/EditPosts.aspx?postid=3793102" rel="nofollow">编辑</a> <a href="http://www.cnblogs.com/zz0412/p/Maven_pom.html#" onclick="AddToWz(3793102);return false;">收藏</a></div>
	</div>
	<script type="text/javascript">var allowComments=true,isLogined=false,cb_blogId=151907,cb_entryId=3793102,cb_blogApp=currentBlogApp,cb_blogUserGuid='37048d27-6cbf-e211-8d02-90b11c0b17d6',cb_entryCreatedDate='2014/6/17 16:55:00';loadViewCount(cb_entryId);</script>
	
</div><!--end: topics 文章、评论容器-->
<a name="!comments"></a><div id="blog-comments-placeholder"></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id="comment_form" class="commentform">
<a name="commentform"></a>
<div id="divCommentShow"></div>
<div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();">刷新评论</a><a href="http://www.cnblogs.com/zz0412/p/Maven_pom.html#" onclick="return RefreshPage();">刷新页面</a><a href="http://www.cnblogs.com/zz0412/p/Maven_pom.html#top">返回顶部</a></div>
<div id="comment_form_container"><div class="login_tips">注册用户登录后才能发表评论，请 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return login(&#39;commentform&#39;);">登录</a> 或 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return register();">注册</a>，<a href="http://www.cnblogs.com/">访问</a>网站首页。</div></div>
<div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
<div id="site_nav_under"><a href="http://www.cnblogs.com/" target="_blank" title="开发者的网上家园">博客园首页</a><a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区">博问</a><a href="http://news.cnblogs.com/" target="_blank" title="IT新闻">新闻</a><a href="http://home.cnblogs.com/ing/" target="_blank">闪存</a><a href="http://job.cnblogs.com/" target="_blank">程序员招聘</a><a href="http://kb.cnblogs.com/" target="_blank">知识库</a></div>
<div id="opt_under_post"></div>
<script type="text/javascript">
    var enableGoogleAd = canShowAdsense(); var googletag = googletag || {}; googletag.cmd = googletag.cmd || [];
    fixPostBodyFormat();
</script>
<div id="ad_under_post_holder">
<script type="text/javascript">
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        if (enableGoogleAd) {
            var gads = document.createElement('script');
            gads.async = true;
            gads.type = 'text/javascript';
            var useSSL = 'https:' == document.location.protocol;
            gads.src = (useSSL ? 'https:' : 'http:') + '//www.googletagservices.com/tag/js/gpt.js';
            var node = document.getElementsByTagName('script')[0];
            node.parentNode.insertBefore(gads, node);
        }
    })();
</script>
<script type="text/javascript">
    try {
        if (enableGoogleAd) {
            googletag.cmd.push(function () {
                googletag.defineSlot('/1090369/cnblogs_blogpost_C1_sitehome', [300, 250], 'div-gpt-ad-1346480159711-0').addService(googletag.pubads());
                googletag.defineSlot('/1090369/cnblogs_blogpost_C2', [468, 60], 'div-gpt-ad-1410860226396-0').addService(googletag.pubads());
                googletag.pubads().enableSingleRequest();
                googletag.enableServices();
            });
        };
    } catch (e) { }
</script>
<div id="google_ad_c1" class="c_ad_block">
    <div id="div-gpt-ad-1346480159711-0" style="width:300px; height:250px;">
    <script type="text/javascript">
        try {
            if (enableGoogleAd) {
                googletag.cmd.push(function () { googletag.display('div-gpt-ad-1346480159711-0'); });            
            } else {
                $('#div-gpt-ad-1346480159711-0').hide();
            }
    } catch (e) { }
    </script>
    </div>
</div>
</div>
<div id="under_post_news"><div class="itnews c_ad_block"><b>最新IT新闻</b>:<br> ·  <a href="http://news.cnblogs.com/n/516031/" target="_blank">雷军：6.5%的毛利率公司就能生存</a><br> ·  <a href="http://news.cnblogs.com/n/516030/" target="_blank">“穹顶”采用数据存在缺陷，有意屏蔽不同意见</a><br> ·  <a href="http://news.cnblogs.com/n/516029/" target="_blank">不到半年，阿里健康做了三件颠覆医药圈的事儿</a><br> ·  <a href="http://news.cnblogs.com/n/516028/" target="_blank">斯坦福学生挤破头想进的那些初创企业 你绝对没听说过</a><br> ·  <a href="http://news.cnblogs.com/n/516027/" target="_blank">Windows 10 Build 10022截图大量流出</a><br>» <a href="http://news.cnblogs.com/" title="IT新闻" target="_blank">更多新闻...</a></div></div>
<div id="google_ad_c2" class="c_ad_block">
<div id="div-gpt-ad-1410860226396-0" style="width:468px; height:60px;">
<script type="text/javascript">
try {
    if (enableGoogleAd) {
        googletag.cmd.push(function () { googletag.display('div-gpt-ad-1410860226396-0'); });
    } else {
        $('#div-gpt-ad-1346480159711-0').hide();
    }
} catch (e) { }
</script>
</div>
</div>
<div id="under_post_kb"><div class="itnews c_ad_block" id="kb_block"><b>最新知识库文章</b>:<br><div id="kb_recent"> ·  <a href="http://kb.cnblogs.com/page/515942/" target="_blank">软件专家的对话模式（第一部分）</a><br> ·  <a href="http://kb.cnblogs.com/page/515844/" target="_blank">从商业角度探讨API设计</a><br> ·  <a href="http://kb.cnblogs.com/page/514944/" target="_blank">迁云架构实践</a><br> ·  <a href="http://kb.cnblogs.com/page/503180/" target="_blank">影响架构决策的非功能性需求</a><br> ·  <a href="http://kb.cnblogs.com/page/515381/" target="_blank">在线数据迁移经验：如何为正在飞行的飞机更换引擎</a><br></div>» <a href="http://kb.cnblogs.com/" target="_blank">更多知识库文章...</a></div></div>
<div id="HistoryToday" class="c_ad_block"></div>
<script type="text/javascript">
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    setTimeout(function () { incrementViewCount(cb_entryId); }, 200);
});
</script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<!--done-->
<div class="newsItem">
<h3 class="catListTitle">公告</h3>
	<div id="blog-news"><p>已发表的文章会不定期维护！&nbsp;</p><p>如果有疑问或建议请留言！</p><p>谢谢！&nbsp;</p><div id="profile_block">昵称：<a href="http://home.cnblogs.com/u/zz0412/">爱自己</a><br>园龄：<a href="http://home.cnblogs.com/u/zz0412/" title="入园时间：2013-05-18">1年9个月</a><br>粉丝：<a href="http://home.cnblogs.com/u/zz0412/followers/">23</a><br>关注：<a href="http://home.cnblogs.com/u/zz0412/followees/">5</a><div id="p_b_follow"><a href="javascript:void(0);" onclick="cnblogs.UserManager.FollowBlogger(&#39;37048d27-6cbf-e211-8d02-90b11c0b17d6&#39;)">+加关注</a></div></div></div><script type="text/javascript">loadBlogNews();</script>
</div>

			<div id="blog-calendar" style=""><table id="blogCalendar" class="Cal" cellspacing="0" cellpadding="0" title="日历">
	<tbody><tr><td colspan="7"><table class="CalTitle" cellspacing="0">
		<tbody><tr><td class="CalNextPrev"><a href="javascript:void(0);" onclick="loadBlogCalendar(&#39;2015/02/01&#39;);return false;">&lt;</a></td><td align="center">2015年3月</td><td class="CalNextPrev" align="right"><a href="javascript:void(0);" onclick="loadBlogCalendar(&#39;2015/04/01&#39;);return false;">&gt;</a></td></tr>
	</tbody></table></td></tr><tr><th class="CalDayHeader" align="center" abbr="日" scope="col">日</th><th class="CalDayHeader" align="center" abbr="一" scope="col">一</th><th class="CalDayHeader" align="center" abbr="二" scope="col">二</th><th class="CalDayHeader" align="center" abbr="三" scope="col">三</th><th class="CalDayHeader" align="center" abbr="四" scope="col">四</th><th class="CalDayHeader" align="center" abbr="五" scope="col">五</th><th class="CalDayHeader" align="center" abbr="六" scope="col">六</th></tr><tr><td class="CalOtherMonthDay" align="center">22</td><td class="CalOtherMonthDay" align="center">23</td><td class="CalOtherMonthDay" align="center">24</td><td class="CalOtherMonthDay" align="center">25</td><td class="CalOtherMonthDay" align="center">26</td><td class="CalOtherMonthDay" align="center">27</td><td class="CalOtherMonthDay" align="center">28</td></tr><tr><td class="CalWeekendDay" align="center">1</td><td align="center">2</td><td class="CalTodayDay" align="center">3</td><td align="center">4</td><td align="center">5</td><td align="center">6</td><td class="CalWeekendDay" align="center">7</td></tr><tr><td class="CalWeekendDay" align="center">8</td><td align="center">9</td><td align="center">10</td><td align="center">11</td><td align="center">12</td><td align="center">13</td><td class="CalWeekendDay" align="center">14</td></tr><tr><td class="CalWeekendDay" align="center">15</td><td align="center">16</td><td align="center">17</td><td align="center">18</td><td align="center">19</td><td align="center">20</td><td class="CalWeekendDay" align="center">21</td></tr><tr><td class="CalWeekendDay" align="center">22</td><td align="center">23</td><td align="center">24</td><td align="center">25</td><td align="center">26</td><td align="center">27</td><td class="CalWeekendDay" align="center">28</td></tr><tr><td class="CalWeekendDay" align="center">29</td><td align="center">30</td><td align="center">31</td><td class="CalOtherMonthDay" align="center">1</td><td class="CalOtherMonthDay" align="center">2</td><td class="CalOtherMonthDay" align="center">3</td><td class="CalOtherMonthDay" align="center">4</td></tr>
</tbody></table></div><script type="text/javascript">loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn">
<div class="mySearch">
<h3 class="catListTitle">搜索</h3>
<div id="widget_my_zzk" class="div_my_zzk"><input type="text" id="q" onkeydown="return zzk_go_enter(event);" class="input_my_zzk">&nbsp;<input onclick="zzk_go()" type="button" value="找找看" id="btnZzk" class="btn_my_zzk"></div>
<div id="widget_my_google" class="div_my_zzk"><input type="text" name="google_q" id="google_q" onkeydown="return google_go_enter(event)" class="input_my_zzk">&nbsp;<input onclick="google_go()" type="button" value="谷歌搜索" class="btn_my_zzk"></div>
</div>


<div class="catListLink">
<h3 class="catListTitle">常用链接</h3>
<ul>
<li><a href="http://www.cnblogs.com/zz0412/p/" title="我的博客的随笔列表">我的随笔</a></li><li><a href="http://www.cnblogs.com/zz0412/MyComments.html" title="我发表过的评论列表">我的评论</a></li><li><a href="http://www.cnblogs.com/zz0412/OtherPosts.html" title="我评论过的随笔列表">我的参与</a></li><li><a href="http://www.cnblogs.com/zz0412/RecentComments.html" title="我的博客的评论列表">最新评论</a></li><li><a href="http://www.cnblogs.com/zz0412/tag/" title="我的博客的标签列表">我的标签</a></li>
<li><a id="itemListLink" onclick="this.blur();WarpClass(&#39;itemListLink&#39;, &#39;itemListLin_con&#39;);return false;" href="http://www.cnblogs.com/zz0412/p/Maven_pom.html#">更多链接</a></li>
</ul>
<div id="itemListLin_con" style="display:none;">
<ul>

</ul>
</div>
</div>
<div class="catListTag">
<h3 class="catListTitle">我的标签</h3>
<ul>
<li><a href="http://www.cnblogs.com/zz0412/tag/jenkins/">jenkins</a>(22)</li><li><a href="http://www.cnblogs.com/zz0412/tag/Maven/">Maven</a>(17)</li><li><a href="http://www.cnblogs.com/zz0412/tag/linux/">linux</a>(11)</li><li><a href="http://www.cnblogs.com/zz0412/tag/svn/">svn</a>(4)</li><li><a href="http://www.cnblogs.com/zz0412/tag/Ubuntu/">Ubuntu</a>(2)</li><li><a href="http://www.cnblogs.com/zz0412/tag/eclipse/">eclipse</a>(2)</li><li><a href="http://www.cnblogs.com/zz0412/tag/FTP/">FTP</a>(1)</li><li><a href="http://www.cnblogs.com/zz0412/tag/Intellij/">Intellij</a>(1)</li><li><a href="http://www.cnblogs.com/zz0412/tag/ip/">ip</a>(1)</li><li><a href="http://www.cnblogs.com/zz0412/tag/JavaHL/">JavaHL</a>(1)</li><li><a href="http://www.cnblogs.com/zz0412/tag/">更多</a></li>
</ul>
</div>
<div class="catListPostArchive">
<h3 class="catListTitle">随笔档案<span style="font-size:11px;font-weight:normal">(57)</span></h3>

<ul>

<li><a id="CatList_LinkList_0_Link_0" href="http://www.cnblogs.com/zz0412/archive/2014/11.html">2014年11月 (1)</a> </li>

<li><a id="CatList_LinkList_0_Link_1" href="http://www.cnblogs.com/zz0412/archive/2014/10.html">2014年10月 (1)</a> </li>

<li><a id="CatList_LinkList_0_Link_2" href="http://www.cnblogs.com/zz0412/archive/2014/09.html">2014年9月 (1)</a> </li>

<li><a id="CatList_LinkList_0_Link_3" href="http://www.cnblogs.com/zz0412/archive/2014/08.html">2014年8月 (1)</a> </li>

<li><a id="CatList_LinkList_0_Link_4" href="http://www.cnblogs.com/zz0412/archive/2014/07.html">2014年7月 (1)</a> </li>

<li><a id="CatList_LinkList_0_Link_5" href="http://www.cnblogs.com/zz0412/archive/2014/06.html">2014年6月 (17)</a> </li>

<li><a id="CatList_LinkList_0_Link_6" href="http://www.cnblogs.com/zz0412/archive/2014/05.html">2014年5月 (1)</a> </li>

<li><a id="CatList_LinkList_0_Link_7" href="http://www.cnblogs.com/zz0412/archive/2014/04.html">2014年4月 (3)</a> </li>

<li><a id="CatList_LinkList_0_Link_8" href="http://www.cnblogs.com/zz0412/archive/2014/03.html">2014年3月 (2)</a> </li>

<li><a id="CatList_LinkList_0_Link_9" href="http://www.cnblogs.com/zz0412/archive/2014/01.html">2014年1月 (2)</a> </li>

<li><a id="CatList_LinkList_0_Link_10" href="http://www.cnblogs.com/zz0412/archive/2013/12.html">2013年12月 (3)</a> </li>

<li><a id="CatList_LinkList_0_Link_11" href="http://www.cnblogs.com/zz0412/archive/2013/11.html">2013年11月 (4)</a> </li>

<li><a id="CatList_LinkList_0_Link_12" href="http://www.cnblogs.com/zz0412/archive/2013/10.html">2013年10月 (1)</a> </li>

<li><a id="CatList_LinkList_0_Link_13" href="http://www.cnblogs.com/zz0412/archive/2013/09.html">2013年9月 (8)</a> </li>

<li><a id="CatList_LinkList_0_Link_14" href="http://www.cnblogs.com/zz0412/archive/2013/08.html">2013年8月 (6)</a> </li>

<li><a id="CatList_LinkList_0_Link_15" href="http://www.cnblogs.com/zz0412/archive/2013/05.html">2013年5月 (5)</a> </li>

</ul>

</div>

<div class="catListImageCategory">
<h3 class="catListTitle">相册</h3>

<ul>

<li><a id="CatList_LinkList_1_Link_0" href="http://www.cnblogs.com/zz0412/gallery/508265.html" rel="nofollow">Jenkins</a> </li>

</ul>

</div>

<div id="recent_comments_wrap">
<div class="catListComment">
<h3 class="catListTitle">最新评论</h3>

	<div id="RecentCommentsBlock"><ul>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/zz0412/p/4103245.html#3102641">1. Re:工作随笔——Intellij_idea-14官方快捷键中文版</a></li>
    <li class="recent_comment_body">@张珩即使是调成Eclipse模式，很多Eclipse的快捷键也是不全的。因为Idea有很多自己的快捷键...</li>
    <li class="recent_comment_author">--爱自己</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/zz0412/p/4103245.html#3102639">2. Re:工作随笔——Intellij_idea-14官方快捷键中文版</a></li>
    <li class="recent_comment_body">@saber_runner这个在bios中是可以设置的，具体的设置方式请询问联想客服...</li>
    <li class="recent_comment_author">--爱自己</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/zz0412/p/4103245.html#3095940">3. Re:工作随笔——Intellij_idea-14官方快捷键中文版</a></li>
    <li class="recent_comment_body">thinkpad 中F* 快捷键使用时都需要按Fn键</li>
    <li class="recent_comment_author">--saber_runner</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/zz0412/p/4103245.html#3080751">4. Re:工作随笔——Intellij_idea-14官方快捷键中文版</a></li>
    <li class="recent_comment_body">...IDEA可以把快捷键设置成eclipse模式..</li>
    <li class="recent_comment_author">--张珩</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/zz0412/p/jenkins_jj_03.html#3057805">5. Re:Jenkins进阶系列之——03parameterized-trigger插件</a></li>
    <li class="recent_comment_body">很好用，其实是借助于BUILD 后构建过程的一个完善组件，目前不足之处，如果能将remote 构建其他server的job 也集成过来是最好不过了。</li>
    <li class="recent_comment_author">--小侠女</li>
</ul>
</div>
</div>
</div><div id="topview_posts_wrap">
<div class="catListView">
<h3 class="catListTitle">阅读排行榜</h3>
	<div id="TopViewPostsBlock"><ul><li><a href="http://www.cnblogs.com/zz0412/p/jenkins02.html">1. Jenkins入门系列之——02第二章 Jenkins安装与配置(6819)</a></li><li><a href="http://www.cnblogs.com/zz0412/p/jenkins_jj_01.html">2. Jenkins进阶系列之——01使用email-ext替换Jenkins的默认邮件通知(2067)</a></li><li><a href="http://www.cnblogs.com/zz0412/p/jenkins03.html">3. Jenkins入门系列之——03PDF文档下载(1788)</a></li><li><a href="http://www.cnblogs.com/zz0412/p/jenkins01.html">4. Jenkins入门系列之——01第一章 Jenkins是什么？(1769)</a></li><li><a href="http://www.cnblogs.com/zz0412/p/jenkins_jj_12.html">5. Jenkins进阶系列之——12详解Jenkins节点配置(1375)</a></li></ul></div>
</div>
</div><div id="topfeedback_posts_wrap">
<div class="catListFeedback">
<h3 class="catListTitle">评论排行榜</h3>
	<div id="TopFeedbackPostsBlock"><ul><li><a href="http://www.cnblogs.com/zz0412/p/jenkins02.html">1. Jenkins入门系列之——02第二章 Jenkins安装与配置(7)</a></li><li><a href="http://www.cnblogs.com/zz0412/p/jenkins03.html">2. Jenkins入门系列之——03PDF文档下载(5)</a></li><li><a href="http://www.cnblogs.com/zz0412/p/jenkins_jj_12.html">3. Jenkins进阶系列之——12详解Jenkins节点配置(4)</a></li><li><a href="http://www.cnblogs.com/zz0412/p/4103245.html">4. 工作随笔——Intellij_idea-14官方快捷键中文版(4)</a></li><li><a href="http://www.cnblogs.com/zz0412/p/jenkins01.html">5. Jenkins入门系列之——01第一章 Jenkins是什么？(4)</a></li></ul></div>
</div>
</div><div id="topdigg_posts_wrap">
<div class="catListView">
<h3 class="catListTitle">推荐排行榜</h3>
<div id="TopDiggPostsBlock"><ul><li><a href="http://www.cnblogs.com/zz0412/p/jenkins01.html">1. Jenkins入门系列之——01第一章 Jenkins是什么？(2)</a></li><li><a href="http://www.cnblogs.com/zz0412/p/jenkins03.html">2. Jenkins入门系列之——03PDF文档下载(2)</a></li><li><a href="http://www.cnblogs.com/zz0412/p/jenkins_jj_01.html">3. Jenkins进阶系列之——01使用email-ext替换Jenkins的默认邮件通知(2)</a></li><li><a href="http://www.cnblogs.com/zz0412/p/4013086.html">4. 工作随笔——一次简单的Maven加速构建实战(1)</a></li></ul></div>
</div></div></div><script type="text/javascript">loadBlogSideColumn();</script><iframe src="about:blank" width="0" height="0" style="visibility: hidden !important; display: none !important; opacity: 0 !important;"></iframe>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		
<!--done-->
Copyright ©2015 爱自己
	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


</body></html>